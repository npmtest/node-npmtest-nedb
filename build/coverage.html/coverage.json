{"/home/travis/build/npmtest/node-npmtest-nedb/test.js":{"path":"/home/travis/build/npmtest/node-npmtest-nedb/test.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":1,"12":1,"13":1,"14":1,"15":2,"16":2,"17":2,"18":2,"19":1,"20":1,"21":2,"22":2,"23":2,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":2,"37":2,"38":1,"39":2,"40":2,"41":1,"42":2,"43":2,"44":1,"45":1,"46":1,"47":1,"48":1},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[1,1],"5":[1,1],"6":[1,1],"7":[1,1],"8":[1,1],"9":[1,1,1],"10":[1,1],"11":[1,1],"12":[1,1],"13":[1,1],"14":[1,1],"15":[1,1]},"f":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":2,"9":2,"10":2,"11":1},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":1},"end":{"line":12,"column":13}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":5},"end":{"line":19,"column":17}}},"3":{"name":"(anonymous_3)","line":23,"loc":{"start":{"line":23,"column":24},"end":{"line":23,"column":36}}},"4":{"name":"(anonymous_4)","line":61,"loc":{"start":{"line":61,"column":5},"end":{"line":61,"column":17}}},"5":{"name":"(anonymous_5)","line":82,"loc":{"start":{"line":82,"column":5},"end":{"line":82,"column":17}}},"6":{"name":"(anonymous_6)","line":102,"loc":{"start":{"line":102,"column":83},"end":{"line":105,"column":10}},"skip":true},"7":{"name":"(anonymous_7)","line":113,"loc":{"start":{"line":113,"column":77},"end":{"line":116,"column":10}},"skip":true},"8":{"name":"(anonymous_8)","line":127,"loc":{"start":{"line":127,"column":77},"end":{"line":130,"column":10}},"skip":true},"9":{"name":"(anonymous_9)","line":138,"loc":{"start":{"line":138,"column":83},"end":{"line":141,"column":10}},"skip":true},"10":{"name":"(anonymous_10)","line":149,"loc":{"start":{"line":149,"column":79},"end":{"line":152,"column":10}},"skip":true},"11":{"name":"(anonymous_11)","line":160,"loc":{"start":{"line":160,"column":75},"end":{"line":163,"column":10}},"skip":true}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":175,"column":5}},"2":{"start":{"line":14,"column":4},"end":{"line":14,"column":14}},"3":{"start":{"line":19,"column":4},"end":{"line":56,"column":9}},"4":{"start":{"line":21,"column":8},"end":{"line":21,"column":19}},"5":{"start":{"line":23,"column":8},"end":{"line":35,"column":13}},"6":{"start":{"line":24,"column":12},"end":{"line":34,"column":13}},"7":{"start":{"line":25,"column":16},"end":{"line":28,"column":30}},"8":{"start":{"line":30,"column":16},"end":{"line":33,"column":27}},"9":{"start":{"line":37,"column":8},"end":{"line":39,"column":21}},"10":{"start":{"line":40,"column":8},"end":{"line":53,"column":9}},"11":{"start":{"line":43,"column":12},"end":{"line":46,"column":14}},"12":{"start":{"line":47,"column":12},"end":{"line":47,"column":18}},"13":{"start":{"line":50,"column":12},"end":{"line":51,"column":46}},"14":{"start":{"line":52,"column":12},"end":{"line":52,"column":18}},"15":{"start":{"line":55,"column":8},"end":{"line":55,"column":35}},"16":{"start":{"line":61,"column":4},"end":{"line":63,"column":9}},"17":{"start":{"line":62,"column":8},"end":{"line":62,"column":15}},"18":{"start":{"line":64,"column":4},"end":{"line":77,"column":5}},"19":{"start":{"line":70,"column":8},"end":{"line":70,"column":14}},"20":{"start":{"line":76,"column":8},"end":{"line":76,"column":14}},"21":{"start":{"line":82,"column":4},"end":{"line":84,"column":9}},"22":{"start":{"line":83,"column":8},"end":{"line":83,"column":15}},"23":{"start":{"line":85,"column":4},"end":{"line":174,"column":5}},"24":{"start":{"line":92,"column":8},"end":{"line":94,"column":63}},"25":{"start":{"line":95,"column":8},"end":{"line":95,"column":14}},"26":{"start":{"line":102,"column":8},"end":{"line":111,"column":10},"skip":true},"27":{"start":{"line":109,"column":12},"end":{"line":109,"column":55},"skip":true},"28":{"start":{"line":110,"column":12},"end":{"line":110,"column":48},"skip":true},"29":{"start":{"line":113,"column":8},"end":{"line":125,"column":10},"skip":true},"30":{"start":{"line":120,"column":12},"end":{"line":120,"column":76},"skip":true},"31":{"start":{"line":121,"column":12},"end":{"line":121,"column":73},"skip":true},"32":{"start":{"line":122,"column":12},"end":{"line":122,"column":74},"skip":true},"33":{"start":{"line":123,"column":12},"end":{"line":123,"column":25},"skip":true},"34":{"start":{"line":124,"column":12},"end":{"line":124,"column":45},"skip":true},"35":{"start":{"line":127,"column":8},"end":{"line":136,"column":10},"skip":true},"36":{"start":{"line":134,"column":12},"end":{"line":134,"column":25},"skip":true},"37":{"start":{"line":135,"column":12},"end":{"line":135,"column":45},"skip":true},"38":{"start":{"line":138,"column":8},"end":{"line":147,"column":10},"skip":true},"39":{"start":{"line":145,"column":12},"end":{"line":145,"column":25},"skip":true},"40":{"start":{"line":146,"column":12},"end":{"line":146,"column":48},"skip":true},"41":{"start":{"line":149,"column":8},"end":{"line":158,"column":10},"skip":true},"42":{"start":{"line":156,"column":12},"end":{"line":156,"column":25},"skip":true},"43":{"start":{"line":157,"column":12},"end":{"line":157,"column":46},"skip":true},"44":{"start":{"line":160,"column":8},"end":{"line":169,"column":10},"skip":true},"45":{"start":{"line":167,"column":12},"end":{"line":167,"column":94},"skip":true},"46":{"start":{"line":168,"column":12},"end":{"line":168,"column":48},"skip":true},"47":{"start":{"line":172,"column":8},"end":{"line":172,"column":35},"skip":true},"48":{"start":{"line":173,"column":8},"end":{"line":173,"column":14},"skip":true}},"branchMap":{"1":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":62}},{"start":{"line":26,"column":20},"end":{"line":26,"column":70}},{"start":{"line":27,"column":20},"end":{"line":27,"column":71}},{"start":{"line":28,"column":20},"end":{"line":28,"column":29}}]},"2":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":23},"end":{"line":30,"column":37}},{"start":{"line":31,"column":20},"end":{"line":31,"column":61}},{"start":{"line":32,"column":20},"end":{"line":32,"column":70}},{"start":{"line":33,"column":20},"end":{"line":33,"column":26}}]},"3":{"line":37,"type":"cond-expr","locations":[{"start":{"line":38,"column":14},"end":{"line":38,"column":20}},{"start":{"line":39,"column":14},"end":{"line":39,"column":20}}]},"4":{"line":40,"type":"switch","locations":[{"start":{"line":42,"column":8},"end":{"line":47,"column":18}},{"start":{"line":49,"column":8},"end":{"line":52,"column":18}}]},"5":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":16},"end":{"line":44,"column":44}},{"start":{"line":44,"column":48},"end":{"line":44,"column":66}}]},"6":{"line":50,"type":"binary-expr","locations":[{"start":{"line":50,"column":21},"end":{"line":50,"column":49}},{"start":{"line":50,"column":53},"end":{"line":50,"column":72}}]},"7":{"line":64,"type":"switch","locations":[{"start":{"line":69,"column":4},"end":{"line":70,"column":14}},{"start":{"line":75,"column":4},"end":{"line":76,"column":14}}]},"8":{"line":85,"type":"switch","locations":[{"start":{"line":90,"column":4},"end":{"line":95,"column":14}},{"start":{"line":101,"column":4},"end":{"line":173,"column":14},"skip":true}]},"9":{"line":92,"type":"binary-expr","locations":[{"start":{"line":92,"column":18},"end":{"line":92,"column":32}},{"start":{"line":93,"column":12},"end":{"line":93,"column":53}},{"start":{"line":94,"column":12},"end":{"line":94,"column":61}}]},"10":{"line":102,"type":"binary-expr","locations":[{"start":{"line":102,"column":45},"end":{"line":102,"column":79},"skip":true},{"start":{"line":102,"column":83},"end":{"line":111,"column":9},"skip":true}]},"11":{"line":113,"type":"binary-expr","locations":[{"start":{"line":113,"column":42},"end":{"line":113,"column":73},"skip":true},{"start":{"line":113,"column":77},"end":{"line":125,"column":9},"skip":true}]},"12":{"line":127,"type":"binary-expr","locations":[{"start":{"line":127,"column":42},"end":{"line":127,"column":73},"skip":true},{"start":{"line":127,"column":77},"end":{"line":136,"column":9},"skip":true}]},"13":{"line":138,"type":"binary-expr","locations":[{"start":{"line":138,"column":45},"end":{"line":138,"column":79},"skip":true},{"start":{"line":138,"column":83},"end":{"line":147,"column":9},"skip":true}]},"14":{"line":149,"type":"binary-expr","locations":[{"start":{"line":149,"column":43},"end":{"line":149,"column":75},"skip":true},{"start":{"line":149,"column":79},"end":{"line":158,"column":9},"skip":true}]},"15":{"line":160,"type":"binary-expr","locations":[{"start":{"line":160,"column":41},"end":{"line":160,"column":71},"skip":true},{"start":{"line":160,"column":75},"end":{"line":169,"column":9},"skip":true}]}},"code":["/* istanbul instrument in package npmtest_nedb */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        switch (local.modeJs) {","        // re-init local from window.local","        case 'browser':","            local = local.global.utility2.objectSetDefault(","                local.global.utility2_rollup || local.global.local,","                local.global.utility2","            );","            break;","        // re-init local from example.js","        case 'node':","            local = (local.global.utility2_rollup || require('utility2'))","                .requireExampleJsFromReadme();","            break;","        }","        // export local","        local.global.local = local;","    }());","","","","    // run shared js-env code - function","    (function () {","        return;","    }());","    switch (local.modeJs) {","","","","    // run browser js-env code - function","    case 'browser':","        break;","","","","    // run node js-env code - function","    case 'node':","        break;","    }","","","","    // run shared js-env code - post-init","    (function () {","        return;","    }());","    switch (local.modeJs) {","","","","    // run browser js-env code - post-init","    case 'browser':","        // run tests","        local.nop(local.modeTest &&","            document.querySelector('#testRunButton1') &&","            document.querySelector('#testRunButton1').click());","        break;","","","","    // run node js-env code - post-init","    /* istanbul ignore next */","    case 'node':","        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildApidoc's default handling-behavior-behavior","         */","            options = { modulePathList: module.paths };","            local.buildApidoc(options, onError);","        };","","        local.testCase_buildApp_default = local.testCase_buildApp_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildApp's default handling-behavior-behavior","         */","            local.testCase_buildReadme_default(options, local.onErrorThrow);","            local.testCase_buildLib_default(options, local.onErrorThrow);","            local.testCase_buildTest_default(options, local.onErrorThrow);","            options = [];","            local.buildApp(options, onError);","        };","","        local.testCase_buildLib_default = local.testCase_buildLib_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildLib's default handling-behavior","         */","            options = {};","            local.buildLib(options, onError);","        };","","        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildReadme's default handling-behavior-behavior","         */","            options = {};","            local.buildReadme(options, onError);","        };","","        local.testCase_buildTest_default = local.testCase_buildTest_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildTest's default handling-behavior","         */","            options = {};","            local.buildTest(options, onError);","        };","","        local.testCase_webpage_default = local.testCase_webpage_default || function (","            options,","            onError","        ) {","        /*","         * this function will test webpage's default handling-behavior","         */","            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };","            local.browserTest(options, onError);","        };","","        // run test-server","        local.testRunServer(local);","        break;","    }","}());",""],"l":{"12":2,"14":2,"19":2,"21":2,"23":2,"24":2,"25":2,"30":1,"37":2,"40":2,"43":1,"47":1,"50":1,"52":1,"55":2,"61":2,"62":2,"64":2,"70":1,"76":1,"82":2,"83":2,"85":2,"92":1,"95":1,"102":1,"109":1,"110":1,"113":1,"120":1,"121":1,"122":1,"123":1,"124":1,"127":1,"134":2,"135":2,"138":1,"145":2,"146":2,"149":1,"156":2,"157":2,"160":1,"167":1,"168":1,"172":1,"173":1}},"/home/travis/build/npmtest/node-npmtest-nedb/lib.npmtest_nedb.js":{"path":"/home/travis/build/npmtest/node-npmtest-nedb/lib.npmtest_nedb.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1,"14":1,"15":1,"16":1},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[2,2],"5":[1,1]},"f":{"1":2,"2":2,"3":2},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":1},"end":{"line":12,"column":13}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":5},"end":{"line":19,"column":17}}},"3":{"name":"(anonymous_3)","line":23,"loc":{"start":{"line":23,"column":24},"end":{"line":23,"column":36}}}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":53,"column":5}},"2":{"start":{"line":14,"column":4},"end":{"line":14,"column":14}},"3":{"start":{"line":19,"column":4},"end":{"line":52,"column":9}},"4":{"start":{"line":21,"column":8},"end":{"line":21,"column":19}},"5":{"start":{"line":23,"column":8},"end":{"line":35,"column":13}},"6":{"start":{"line":24,"column":12},"end":{"line":34,"column":13}},"7":{"start":{"line":25,"column":16},"end":{"line":28,"column":30}},"8":{"start":{"line":30,"column":16},"end":{"line":33,"column":27}},"9":{"start":{"line":37,"column":8},"end":{"line":39,"column":21}},"10":{"start":{"line":41,"column":8},"end":{"line":41,"column":54}},"11":{"start":{"line":43,"column":8},"end":{"line":43,"column":49}},"12":{"start":{"line":45,"column":8},"end":{"line":51,"column":9}},"13":{"start":{"line":46,"column":12},"end":{"line":46,"column":55}},"14":{"start":{"line":48,"column":12},"end":{"line":48,"column":35}},"15":{"start":{"line":49,"column":12},"end":{"line":49,"column":49}},"16":{"start":{"line":50,"column":12},"end":{"line":50,"column":43}}},"branchMap":{"1":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":62}},{"start":{"line":26,"column":20},"end":{"line":26,"column":70}},{"start":{"line":27,"column":20},"end":{"line":27,"column":71}},{"start":{"line":28,"column":20},"end":{"line":28,"column":29}}]},"2":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":23},"end":{"line":30,"column":37}},{"start":{"line":31,"column":20},"end":{"line":31,"column":61}},{"start":{"line":32,"column":20},"end":{"line":32,"column":70}},{"start":{"line":33,"column":20},"end":{"line":33,"column":26}}]},"3":{"line":37,"type":"cond-expr","locations":[{"start":{"line":38,"column":14},"end":{"line":38,"column":20}},{"start":{"line":39,"column":14},"end":{"line":39,"column":20}}]},"4":{"line":41,"type":"binary-expr","locations":[{"start":{"line":41,"column":16},"end":{"line":41,"column":44}},{"start":{"line":41,"column":48},"end":{"line":41,"column":53}}]},"5":{"line":45,"type":"if","locations":[{"start":{"line":45,"column":8},"end":{"line":45,"column":8}},{"start":{"line":45,"column":8},"end":{"line":45,"column":8}}]}},"code":["/* istanbul instrument in package npmtest_nedb */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        // init utility2_rollup","        local = local.global.utility2_rollup || local;","        // init lib","        local.local = local.npmtest_nedb = local;","        // init exports","        if (local.modeJs === 'browser') {","            local.global.utility2_npmtest_nedb = local;","        } else {","            module.exports = local;","            module.exports.__dirname = __dirname;","            module.exports.module = module;","        }","    }());","}());",""],"l":{"12":2,"14":2,"19":2,"21":2,"23":2,"24":2,"25":2,"30":1,"37":2,"41":2,"43":2,"45":2,"46":1,"48":1,"49":1,"50":1}},"/home/travis/build/npmtest/node-npmtest-nedb/example.js":{"path":"/home/travis/build/npmtest/node-npmtest-nedb/example.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1,"14":2,"15":2,"16":2,"17":2,"18":2,"19":0,"20":2,"21":1,"22":1,"23":1,"24":1,"25":1,"26":0,"27":0,"28":1,"29":1,"30":2,"31":0,"32":0,"33":0,"34":1,"35":2,"36":2,"37":2,"38":2,"39":2,"40":2,"41":0,"42":2,"43":2,"44":2,"45":1,"46":3,"47":1,"48":1,"49":1,"50":1,"51":1,"52":1,"53":1,"54":1,"55":1,"56":1,"57":0,"58":1,"59":6,"60":6,"61":1,"62":2,"63":0,"64":2,"65":1,"66":1,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[2,2],"5":[1,1],"6":[1,1],"7":[2,0],"8":[2,1,1,1,1,1],"9":[0,2,0],"10":[1,1],"11":[2,1,1],"12":[1,0],"13":[0,2],"14":[2,0,0,0,0,0,0],"15":[0,2],"16":[2,0],"17":[1,1],"18":[0,1],"19":[1,2,0,2],"20":[1,0],"21":[1,1],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0]},"f":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":2,"9":3,"10":1,"11":6,"12":0},"fnMap":{"1":{"name":"(anonymous_1)","line":26,"loc":{"start":{"line":26,"column":1},"end":{"line":26,"column":13}}},"2":{"name":"(anonymous_2)","line":33,"loc":{"start":{"line":33,"column":5},"end":{"line":33,"column":17}}},"3":{"name":"(anonymous_3)","line":37,"loc":{"start":{"line":37,"column":24},"end":{"line":37,"column":36}}},"4":{"name":"(anonymous_4)","line":69,"loc":{"start":{"line":69,"column":31},"end":{"line":69,"column":48}},"skip":true},"5":{"name":"(anonymous_5)","line":78,"loc":{"start":{"line":78,"column":26},"end":{"line":78,"column":45}},"skip":true},"6":{"name":"(anonymous_6)","line":123,"loc":{"start":{"line":123,"column":33},"end":{"line":123,"column":48}},"skip":true},"7":{"name":"(anonymous_7)","line":125,"loc":{"start":{"line":125,"column":27},"end":{"line":125,"column":39}},"skip":true},"8":{"name":"(anonymous_8)","line":133,"loc":{"start":{"line":133,"column":59},"end":{"line":133,"column":74}},"skip":true},"9":{"name":"(anonymous_9)","line":143,"loc":{"start":{"line":143,"column":45},"end":{"line":143,"column":62}},"skip":true},"10":{"name":"(anonymous_10)","line":144,"loc":{"start":{"line":144,"column":73},"end":{"line":144,"column":92}},"skip":true},"11":{"name":"(anonymous_11)","line":272,"loc":{"start":{"line":272,"column":51},"end":{"line":272,"column":77}},"skip":true},"12":{"name":"(anonymous_12)","line":314,"loc":{"start":{"line":314,"column":32},"end":{"line":314,"column":61}},"skip":true}},"statementMap":{"1":{"start":{"line":26,"column":0},"end":{"line":325,"column":5}},"2":{"start":{"line":28,"column":4},"end":{"line":28,"column":14}},"3":{"start":{"line":33,"column":4},"end":{"line":60,"column":9}},"4":{"start":{"line":35,"column":8},"end":{"line":35,"column":19}},"5":{"start":{"line":37,"column":8},"end":{"line":49,"column":13}},"6":{"start":{"line":38,"column":12},"end":{"line":48,"column":13}},"7":{"start":{"line":39,"column":16},"end":{"line":42,"column":30}},"8":{"start":{"line":44,"column":16},"end":{"line":47,"column":27}},"9":{"start":{"line":51,"column":8},"end":{"line":53,"column":21}},"10":{"start":{"line":55,"column":8},"end":{"line":57,"column":45}},"11":{"start":{"line":59,"column":8},"end":{"line":59,"column":35}},"12":{"start":{"line":61,"column":4},"end":{"line":324,"column":5}},"13":{"start":{"line":69,"column":8},"end":{"line":121,"column":10},"skip":true},"14":{"start":{"line":70,"column":12},"end":{"line":88,"column":13},"skip":true},"15":{"start":{"line":76,"column":16},"end":{"line":87,"column":19},"skip":true},"16":{"start":{"line":79,"column":20},"end":{"line":86,"column":21},"skip":true},"17":{"start":{"line":82,"column":24},"end":{"line":82,"column":43},"skip":true},"18":{"start":{"line":83,"column":24},"end":{"line":83,"column":30},"skip":true},"19":{"start":{"line":85,"column":24},"end":{"line":85,"column":49},"skip":true},"20":{"start":{"line":89,"column":12},"end":{"line":107,"column":13},"skip":true},"21":{"start":{"line":92,"column":16},"end":{"line":102,"column":17},"skip":true},"22":{"start":{"line":93,"column":20},"end":{"line":93,"column":86},"skip":true},"23":{"start":{"line":94,"column":20},"end":{"line":95,"column":45},"skip":true},"24":{"start":{"line":96,"column":20},"end":{"line":96,"column":42},"skip":true},"25":{"start":{"line":97,"column":20},"end":{"line":97,"column":48},"skip":true},"26":{"start":{"line":100,"column":20},"end":{"line":100,"column":85},"skip":true},"27":{"start":{"line":101,"column":20},"end":{"line":101,"column":96},"skip":true},"28":{"start":{"line":103,"column":16},"end":{"line":103,"column":22},"skip":true},"29":{"start":{"line":106,"column":16},"end":{"line":106,"column":22},"skip":true},"30":{"start":{"line":108,"column":12},"end":{"line":120,"column":13},"skip":true},"31":{"start":{"line":114,"column":16},"end":{"line":119,"column":17},"skip":true},"32":{"start":{"line":116,"column":20},"end":{"line":116,"column":78},"skip":true},"33":{"start":{"line":118,"column":20},"end":{"line":118,"column":53},"skip":true},"34":{"start":{"line":123,"column":8},"end":{"line":141,"column":11},"skip":true},"35":{"start":{"line":124,"column":12},"end":{"line":124,"column":54},"skip":true},"36":{"start":{"line":125,"column":12},"end":{"line":140,"column":14},"skip":true},"37":{"start":{"line":126,"column":16},"end":{"line":126,"column":28},"skip":true},"38":{"start":{"line":127,"column":16},"end":{"line":127,"column":69},"skip":true},"39":{"start":{"line":128,"column":16},"end":{"line":128,"column":75},"skip":true},"40":{"start":{"line":129,"column":16},"end":{"line":131,"column":17},"skip":true},"41":{"start":{"line":130,"column":20},"end":{"line":130,"column":27},"skip":true},"42":{"start":{"line":133,"column":16},"end":{"line":137,"column":36},"skip":true},"43":{"start":{"line":134,"column":20},"end":{"line":136,"column":55},"skip":true},"44":{"start":{"line":139,"column":16},"end":{"line":139,"column":57},"skip":true},"45":{"start":{"line":143,"column":8},"end":{"line":147,"column":11},"skip":true},"46":{"start":{"line":144,"column":12},"end":{"line":146,"column":15},"skip":true},"47":{"start":{"line":145,"column":16},"end":{"line":145,"column":70},"skip":true},"48":{"start":{"line":149,"column":8},"end":{"line":149,"column":31},"skip":true},"49":{"start":{"line":150,"column":8},"end":{"line":150,"column":14},"skip":true},"50":{"start":{"line":158,"column":8},"end":{"line":158,"column":31},"skip":true},"51":{"start":{"line":160,"column":8},"end":{"line":160,"column":33},"skip":true},"52":{"start":{"line":161,"column":8},"end":{"line":161,"column":37},"skip":true},"53":{"start":{"line":162,"column":8},"end":{"line":162,"column":35},"skip":true},"54":{"start":{"line":164,"column":8},"end":{"line":164,"column":50},"skip":true},"55":{"start":{"line":166,"column":8},"end":{"line":256,"column":2},"skip":true},"56":{"start":{"line":258,"column":8},"end":{"line":286,"column":9},"skip":true},"57":{"start":{"line":259,"column":12},"end":{"line":269,"column":14},"skip":true},"58":{"start":{"line":271,"column":12},"end":{"line":285,"column":19},"skip":true},"59":{"start":{"line":274,"column":20},"end":{"line":274,"column":35},"skip":true},"60":{"start":{"line":275,"column":20},"end":{"line":284,"column":21},"skip":true},"61":{"start":{"line":277,"column":24},"end":{"line":277,"column":64},"skip":true},"62":{"start":{"line":279,"column":24},"end":{"line":279,"column":40},"skip":true},"63":{"start":{"line":281,"column":24},"end":{"line":281,"column":40},"skip":true},"64":{"start":{"line":283,"column":24},"end":{"line":283,"column":39},"skip":true},"65":{"start":{"line":288,"column":8},"end":{"line":290,"column":9},"skip":true},"66":{"start":{"line":289,"column":12},"end":{"line":289,"column":18},"skip":true},"67":{"start":{"line":291,"column":8},"end":{"line":293,"column":54},"skip":true},"68":{"start":{"line":294,"column":8},"end":{"line":301,"column":37},"skip":true},"69":{"start":{"line":302,"column":8},"end":{"line":302,"column":82},"skip":true},"70":{"start":{"line":305,"column":8},"end":{"line":307,"column":9},"skip":true},"71":{"start":{"line":306,"column":12},"end":{"line":306,"column":82},"skip":true},"72":{"start":{"line":309,"column":8},"end":{"line":311,"column":9},"skip":true},"73":{"start":{"line":310,"column":12},"end":{"line":310,"column":18},"skip":true},"74":{"start":{"line":312,"column":8},"end":{"line":312,"column":54},"skip":true},"75":{"start":{"line":313,"column":8},"end":{"line":313,"column":69},"skip":true},"76":{"start":{"line":314,"column":8},"end":{"line":322,"column":36},"skip":true},"77":{"start":{"line":315,"column":12},"end":{"line":315,"column":61},"skip":true},"78":{"start":{"line":316,"column":12},"end":{"line":319,"column":13},"skip":true},"79":{"start":{"line":317,"column":16},"end":{"line":317,"column":75},"skip":true},"80":{"start":{"line":318,"column":16},"end":{"line":318,"column":23},"skip":true},"81":{"start":{"line":320,"column":12},"end":{"line":320,"column":38},"skip":true},"82":{"start":{"line":321,"column":12},"end":{"line":321,"column":27},"skip":true},"83":{"start":{"line":323,"column":8},"end":{"line":323,"column":14},"skip":true}},"branchMap":{"1":{"line":39,"type":"binary-expr","locations":[{"start":{"line":39,"column":23},"end":{"line":39,"column":62}},{"start":{"line":40,"column":20},"end":{"line":40,"column":70}},{"start":{"line":41,"column":20},"end":{"line":41,"column":71}},{"start":{"line":42,"column":20},"end":{"line":42,"column":29}}]},"2":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":23},"end":{"line":44,"column":37}},{"start":{"line":45,"column":20},"end":{"line":45,"column":61}},{"start":{"line":46,"column":20},"end":{"line":46,"column":70}},{"start":{"line":47,"column":20},"end":{"line":47,"column":26}}]},"3":{"line":51,"type":"cond-expr","locations":[{"start":{"line":52,"column":14},"end":{"line":52,"column":20}},{"start":{"line":53,"column":14},"end":{"line":53,"column":20}}]},"4":{"line":55,"type":"binary-expr","locations":[{"start":{"line":55,"column":16},"end":{"line":55,"column":44}},{"start":{"line":55,"column":49},"end":{"line":57,"column":43}}]},"5":{"line":55,"type":"cond-expr","locations":[{"start":{"line":56,"column":14},"end":{"line":56,"column":48}},{"start":{"line":57,"column":14},"end":{"line":57,"column":43}}]},"6":{"line":61,"type":"switch","locations":[{"start":{"line":68,"column":4},"end":{"line":150,"column":14},"skip":true},{"start":{"line":156,"column":4},"end":{"line":323,"column":14},"skip":true}]},"7":{"line":70,"type":"if","locations":[{"start":{"line":70,"column":12},"end":{"line":70,"column":12},"skip":true},{"start":{"line":70,"column":12},"end":{"line":70,"column":12},"skip":true}]},"8":{"line":70,"type":"binary-expr","locations":[{"start":{"line":70,"column":16},"end":{"line":70,"column":22},"skip":true},{"start":{"line":70,"column":27},"end":{"line":70,"column":32},"skip":true},{"start":{"line":71,"column":20},"end":{"line":71,"column":39},"skip":true},{"start":{"line":72,"column":20},"end":{"line":72,"column":49},"skip":true},{"start":{"line":73,"column":20},"end":{"line":73,"column":58},"skip":true},{"start":{"line":74,"column":20},"end":{"line":74,"column":69},"skip":true}]},"9":{"line":79,"type":"switch","locations":[{"start":{"line":80,"column":20},"end":{"line":80,"column":33},"skip":true},{"start":{"line":81,"column":20},"end":{"line":83,"column":30},"skip":true},{"start":{"line":84,"column":20},"end":{"line":85,"column":49},"skip":true}]},"10":{"line":89,"type":"switch","locations":[{"start":{"line":90,"column":12},"end":{"line":103,"column":22},"skip":true},{"start":{"line":105,"column":12},"end":{"line":106,"column":22},"skip":true}]},"11":{"line":89,"type":"binary-expr","locations":[{"start":{"line":89,"column":20},"end":{"line":89,"column":25},"skip":true},{"start":{"line":89,"column":29},"end":{"line":89,"column":48},"skip":true},{"start":{"line":89,"column":52},"end":{"line":89,"column":74},"skip":true}]},"12":{"line":92,"type":"if","locations":[{"start":{"line":92,"column":16},"end":{"line":92,"column":16},"skip":true},{"start":{"line":92,"column":16},"end":{"line":92,"column":16},"skip":true}]},"13":{"line":108,"type":"if","locations":[{"start":{"line":108,"column":12},"end":{"line":108,"column":12},"skip":true},{"start":{"line":108,"column":12},"end":{"line":108,"column":12},"skip":true}]},"14":{"line":108,"type":"binary-expr","locations":[{"start":{"line":108,"column":16},"end":{"line":108,"column":61},"skip":true},{"start":{"line":108,"column":66},"end":{"line":108,"column":72},"skip":true},{"start":{"line":108,"column":77},"end":{"line":108,"column":82},"skip":true},{"start":{"line":109,"column":20},"end":{"line":109,"column":39},"skip":true},{"start":{"line":110,"column":20},"end":{"line":110,"column":49},"skip":true},{"start":{"line":111,"column":20},"end":{"line":111,"column":58},"skip":true},{"start":{"line":112,"column":20},"end":{"line":112,"column":68},"skip":true}]},"15":{"line":129,"type":"if","locations":[{"start":{"line":129,"column":16},"end":{"line":129,"column":16},"skip":true},{"start":{"line":129,"column":16},"end":{"line":129,"column":16},"skip":true}]},"16":{"line":134,"type":"cond-expr","locations":[{"start":{"line":135,"column":26},"end":{"line":135,"column":29},"skip":true},{"start":{"line":136,"column":26},"end":{"line":136,"column":54},"skip":true}]},"17":{"line":164,"type":"binary-expr","locations":[{"start":{"line":164,"column":27},"end":{"line":164,"column":43},"skip":true},{"start":{"line":164,"column":47},"end":{"line":164,"column":49},"skip":true}]},"18":{"line":258,"type":"if","locations":[{"start":{"line":258,"column":8},"end":{"line":258,"column":8},"skip":true},{"start":{"line":258,"column":8},"end":{"line":258,"column":8},"skip":true}]},"19":{"line":275,"type":"switch","locations":[{"start":{"line":276,"column":20},"end":{"line":277,"column":64},"skip":true},{"start":{"line":278,"column":20},"end":{"line":279,"column":40},"skip":true},{"start":{"line":280,"column":20},"end":{"line":281,"column":40},"skip":true},{"start":{"line":282,"column":20},"end":{"line":283,"column":39},"skip":true}]},"20":{"line":288,"type":"if","locations":[{"start":{"line":288,"column":8},"end":{"line":288,"column":8},"skip":true},{"start":{"line":288,"column":8},"end":{"line":288,"column":8},"skip":true}]},"21":{"line":288,"type":"binary-expr","locations":[{"start":{"line":288,"column":12},"end":{"line":288,"column":40},"skip":true},{"start":{"line":288,"column":44},"end":{"line":288,"column":67},"skip":true}]},"22":{"line":292,"type":"binary-expr","locations":[{"start":{"line":292,"column":12},"end":{"line":292,"column":50},"skip":true},{"start":{"line":293,"column":12},"end":{"line":293,"column":53},"skip":true}]},"23":{"line":295,"type":"binary-expr","locations":[{"start":{"line":295,"column":12},"end":{"line":295,"column":62},"skip":true},{"start":{"line":296,"column":12},"end":{"line":301,"column":36},"skip":true}]},"24":{"line":302,"type":"binary-expr","locations":[{"start":{"line":302,"column":43},"end":{"line":302,"column":75},"skip":true},{"start":{"line":302,"column":79},"end":{"line":302,"column":81},"skip":true}]},"25":{"line":305,"type":"if","locations":[{"start":{"line":305,"column":8},"end":{"line":305,"column":8},"skip":true},{"start":{"line":305,"column":8},"end":{"line":305,"column":8},"skip":true}]},"26":{"line":309,"type":"if","locations":[{"start":{"line":309,"column":8},"end":{"line":309,"column":8},"skip":true},{"start":{"line":309,"column":8},"end":{"line":309,"column":8},"skip":true}]},"27":{"line":312,"type":"binary-expr","locations":[{"start":{"line":312,"column":27},"end":{"line":312,"column":43},"skip":true},{"start":{"line":312,"column":47},"end":{"line":312,"column":53},"skip":true}]},"28":{"line":316,"type":"if","locations":[{"start":{"line":316,"column":12},"end":{"line":316,"column":12},"skip":true},{"start":{"line":316,"column":12},"end":{"line":316,"column":12},"skip":true}]}},"code":["/*","example.js","","quickstart example","","instruction","    1. save this script as example.js","    2. run the shell command:","        $ npm install npmtest-nedb && PORT=8081 node example.js","    3. play with the browser-demo on http://127.0.0.1:8081","*/","","","","/* istanbul instrument in package npmtest_nedb */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        // init utility2_rollup","        local = local.global.utility2_rollup || (local.modeJs === 'browser'","            ? local.global.utility2_npmtest_nedb","            : global.utility2_moduleExports);","        // export local","        local.global.local = local;","    }());","    switch (local.modeJs) {","","","","    // post-init","    // run browser js-env code - post-init","    /* istanbul ignore next */","    case 'browser':","        local.testRunBrowser = function (event) {","            if (!event || (event &&","                    event.currentTarget &&","                    event.currentTarget.className &&","                    event.currentTarget.className.includes &&","                    event.currentTarget.className.includes('onreset'))) {","                // reset output","                Array.from(","                    document.querySelectorAll('body > .resettable')","                ).forEach(function (element) {","                    switch (element.tagName) {","                    case 'INPUT':","                    case 'TEXTAREA':","                        element.value = '';","                        break;","                    default:","                        element.textContent = '';","                    }","                });","            }","            switch (event && event.currentTarget && event.currentTarget.id) {","            case 'testRunButton1':","                // show tests","                if (document.querySelector('#testReportDiv1').style.display === 'none') {","                    document.querySelector('#testReportDiv1').style.display = 'block';","                    document.querySelector('#testRunButton1').textContent =","                        'hide internal test';","                    local.modeTest = true;","                    local.testRunDefault(local);","                // hide tests","                } else {","                    document.querySelector('#testReportDiv1').style.display = 'none';","                    document.querySelector('#testRunButton1').textContent = 'run internal test';","                }","                break;","            // custom-case","            default:","                break;","            }","            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&","                    event.currentTarget &&","                    event.currentTarget.className &&","                    event.currentTarget.className.includes &&","                    event.currentTarget.className.includes('oneval')))) {","                // try to eval input-code","                try {","                    /*jslint evil: true*/","                    eval(document.querySelector('#inputTextareaEval1').value);","                } catch (errorCaught) {","                    console.error(errorCaught.stack);","                }","            }","        };","        // log stderr and stdout to #outputTextareaStdout1","        ['error', 'log'].forEach(function (key) {","            console[key + '_original'] = console[key];","            console[key] = function () {","                var element;","                console[key + '_original'].apply(console, arguments);","                element = document.querySelector('#outputTextareaStdout1');","                if (!element) {","                    return;","                }","                // append text to #outputTextareaStdout1","                element.value += Array.from(arguments).map(function (arg) {","                    return typeof arg === 'string'","                        ? arg","                        : JSON.stringify(arg, null, 4);","                }).join(' ') + '\\n';","                // scroll textarea to bottom","                element.scrollTop = element.scrollHeight;","            };","        });","        // init event-handling","        ['change', 'click', 'keyup'].forEach(function (event) {","            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {","                element.addEventListener(event, local.testRunBrowser);","            });","        });","        // run tests","        local.testRunBrowser();","        break;","","","","    // run node js-env code - post-init","    /* istanbul ignore next */","    case 'node':","        // export local","        module.exports = local;","        // require modules","        local.fs = require('fs');","        local.http = require('http');","        local.url = require('url');","        // init assets","        local.assetsDict = local.assetsDict || {};","        /* jslint-ignore-begin */","        local.assetsDict['/assets.index.template.html'] = '\\","<!doctype html>\\n\\","<html lang=\"en\">\\n\\","<head>\\n\\","<meta charset=\"UTF-8\">\\n\\","<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\","<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\","<style>\\n\\","/*csslint\\n\\","    box-sizing: false,\\n\\","    universal-selector: false\\n\\","*/\\n\\","* {\\n\\","    box-sizing: border-box;\\n\\","}\\n\\","body {\\n\\","    background: #dde;\\n\\","    font-family: Arial, Helvetica, sans-serif;\\n\\","    margin: 2rem;\\n\\","}\\n\\","body > * {\\n\\","    margin-bottom: 1rem;\\n\\","}\\n\\",".utility2FooterDiv {\\n\\","    margin-top: 20px;\\n\\","    text-align: center;\\n\\","}\\n\\","</style>\\n\\","<style>\\n\\","/*csslint\\n\\","*/\\n\\","textarea {\\n\\","    font-family: monospace;\\n\\","    height: 10rem;\\n\\","    width: 100%;\\n\\","}\\n\\","textarea[readonly] {\\n\\","    background: #ddd;\\n\\","}\\n\\","</style>\\n\\","</head>\\n\\","<body>\\n\\","<!-- utility2-comment\\n\\","<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\","utility2-comment -->\\n\\","<h1>\\n\\","<!-- utility2-comment\\n\\","    <a\\n\\","        {{#if env.npm_package_homepage}}\\n\\","        href=\"{{env.npm_package_homepage}}\"\\n\\","        {{/if env.npm_package_homepage}}\\n\\","        target=\"_blank\"\\n\\","    >\\n\\","utility2-comment -->\\n\\","        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\","<!-- utility2-comment\\n\\","    </a>\\n\\","utility2-comment -->\\n\\","</h1>\\n\\","<h3>{{env.npm_package_description}}</h3>\\n\\","<!-- utility2-comment\\n\\","<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\","<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\","<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\","utility2-comment -->\\n\\","\\n\\","\\n\\","\\n\\","<label>stderr and stdout</label>\\n\\","<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\","<!-- utility2-comment\\n\\","{{#if isRollup}}\\n\\","<script src=\"assets.app.js\"></script>\\n\\","{{#unless isRollup}}\\n\\","utility2-comment -->\\n\\","<script src=\"assets.utility2.rollup.js\"></script>\\n\\","<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\","<script src=\"assets.npmtest_nedb.rollup.js\"></script>\\n\\","<script src=\"assets.example.js\"></script>\\n\\","<script src=\"assets.test.js\"></script>\\n\\","<!-- utility2-comment\\n\\","{{/if isRollup}}\\n\\","utility2-comment -->\\n\\","<div class=\"utility2FooterDiv\">\\n\\","    [ this app was created with\\n\\","    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\","    ]\\n\\","</div>\\n\\","</body>\\n\\","</html>\\n\\","';","        /* jslint-ignore-end */","        if (local.templateRender) {","            local.assetsDict['/'] = local.templateRender(","                local.assetsDict['/assets.index.template.html'],","                {","                    env: local.objectSetDefault(local.env, {","                        npm_package_description: 'the greatest app in the world!',","                        npm_package_name: 'my-app',","                        npm_package_nameAlias: 'my_app',","                        npm_package_version: '0.0.1'","                    })","                }","            );","        } else {","            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']","                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {","                    // jslint-hack","                    String(match0);","                    switch (match1) {","                    case 'npm_package_description':","                        return 'the greatest app in the world!';","                    case 'npm_package_name':","                        return 'my-app';","                    case 'npm_package_nameAlias':","                        return 'my_app';","                    case 'npm_package_version':","                        return '0.0.1';","                    }","                });","        }","        // run the cli","        if (local.global.utility2_rollup || module !== require.main) {","            break;","        }","        local.assetsDict['/assets.example.js'] =","            local.assetsDict['/assets.example.js'] ||","            local.fs.readFileSync(__filename, 'utf8');","        local.assetsDict['/assets.npmtest_nedb.rollup.js'] =","            local.assetsDict['/assets.npmtest_nedb.rollup.js'] ||","            local.fs.readFileSync(","                // buildCustomOrg-hack","                local.npmtest_nedb.__dirname +","                    '/lib.npmtest_nedb.js',","                'utf8'","            ).replace((/^#!/), '//');","        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';","        // if $npm_config_timeout_exit exists,","        // then exit this process after $npm_config_timeout_exit ms","        if (Number(process.env.npm_config_timeout_exit)) {","            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));","        }","        // start server","        if (local.global.utility2_serverHttp1) {","            break;","        }","        process.env.PORT = process.env.PORT || '8081';","        console.error('server starting on port ' + process.env.PORT);","        local.http.createServer(function (request, response) {","            request.urlParsed = local.url.parse(request.url);","            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {","                response.end(local.assetsDict[request.urlParsed.pathname]);","                return;","            }","            response.statusCode = 404;","            response.end();","        }).listen(process.env.PORT);","        break;","    }","}());",""],"l":{"26":2,"28":2,"33":2,"35":2,"37":2,"38":2,"39":2,"44":1,"51":2,"55":2,"59":2,"61":2,"69":1,"70":2,"76":2,"79":2,"82":2,"83":2,"85":1,"89":2,"92":1,"93":1,"94":1,"96":1,"97":1,"100":1,"101":1,"103":1,"106":1,"108":2,"114":1,"116":1,"118":1,"123":1,"124":2,"125":2,"126":2,"127":2,"128":2,"129":2,"130":1,"133":2,"134":2,"139":2,"143":1,"144":3,"145":1,"149":1,"150":1,"158":1,"160":1,"161":1,"162":1,"164":1,"166":1,"258":1,"259":1,"271":1,"274":6,"275":6,"277":1,"279":2,"281":1,"283":2,"288":1,"289":1,"291":1,"294":1,"302":1,"305":1,"306":1,"309":1,"310":1,"312":1,"313":1,"314":1,"315":1,"316":1,"317":1,"318":1,"320":1,"321":1,"323":1}},"/home/travis/build/npmtest/node-npmtest-nedb/nedb/index.js":{"path":"/home/travis/build/npmtest/node-npmtest-nedb/nedb/index.js","s":{"1":1,"2":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":43}},"2":{"start":{"line":3,"column":0},"end":{"line":3,"column":27}}},"branchMap":{},"code":["var Datastore = require('./lib/datastore');","","module.exports = Datastore;",""],"l":{"1":1,"3":1}},"/home/travis/build/npmtest/node-npmtest-nedb/nedb/lib/datastore.js":{"path":"/home/travis/build/npmtest/node-npmtest-nedb/nedb/lib/datastore.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":1,"29":1,"30":0,"31":1,"32":0,"33":1,"34":0,"35":0,"36":0,"37":1,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":1,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":1,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":1,"77":0,"78":0,"79":0,"80":1,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":1,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":1,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":1,"148":0,"149":0,"150":0,"151":0,"152":1,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":1,"169":0,"170":0,"171":0,"172":1,"173":0,"174":0,"175":0,"176":0,"177":0,"178":0,"179":0,"180":0,"181":0,"182":0,"183":0,"184":1,"185":0,"186":1,"187":0,"188":0,"189":0,"190":0,"191":0,"192":0,"193":0,"194":1,"195":0,"196":0,"197":0,"198":0,"199":0,"200":0,"201":0,"202":0,"203":0,"204":0,"205":0,"206":0,"207":0,"208":0,"209":0,"210":0,"211":0,"212":0,"213":1,"214":0,"215":0,"216":0,"217":0,"218":0,"219":0,"220":0,"221":0,"222":0,"223":0,"224":0,"225":0,"226":0,"227":0,"228":0,"229":0,"230":0,"231":1,"232":0,"233":0,"234":0,"235":0,"236":0,"237":0,"238":0,"239":0,"240":0,"241":0,"242":0,"243":0,"244":0,"245":0,"246":0,"247":0,"248":0,"249":0,"250":0,"251":0,"252":0,"253":0,"254":0,"255":0,"256":0,"257":0,"258":0,"259":0,"260":0,"261":0,"262":0,"263":0,"264":0,"265":0,"266":0,"267":0,"268":0,"269":0,"270":0,"271":0,"272":0,"273":0,"274":0,"275":0,"276":0,"277":0,"278":0,"279":0,"280":0,"281":0,"282":0,"283":0,"284":0,"285":0,"286":0,"287":0,"288":0,"289":0,"290":1,"291":0,"292":1,"293":0,"294":0,"295":0,"296":0,"297":0,"298":0,"299":0,"300":0,"301":0,"302":0,"303":0,"304":0,"305":0,"306":0,"307":0,"308":0,"309":0,"310":0,"311":0,"312":0,"313":1,"314":0,"315":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0,0,0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0,0,0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,0],"48":[0,0],"49":[0,0],"50":[0,0],"51":[0,0],"52":[0,0],"53":[0,0],"54":[0,0],"55":[0,0],"56":[0,0],"57":[0,0],"58":[0,0],"59":[0,0],"60":[0,0],"61":[0,0],"62":[0,0],"63":[0,0],"64":[0,0],"65":[0,0],"66":[0,0],"67":[0,0],"68":[0,0],"69":[0,0],"70":[0,0,0],"71":[0,0],"72":[0,0],"73":[0,0],"74":[0,0],"75":[0,0],"76":[0,0],"77":[0,0],"78":[0,0],"79":[0,0],"80":[0,0],"81":[0,0,0],"82":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0},"fnMap":{"1":{"name":"Datastore","line":29,"loc":{"start":{"line":29,"column":0},"end":{"line":29,"column":29}}},"2":{"name":"(anonymous_2)","line":76,"loc":{"start":{"line":76,"column":59},"end":{"line":76,"column":74}}},"3":{"name":"(anonymous_3)","line":87,"loc":{"start":{"line":87,"column":35},"end":{"line":87,"column":47}}},"4":{"name":"(anonymous_4)","line":95,"loc":{"start":{"line":95,"column":33},"end":{"line":95,"column":45}}},"5":{"name":"(anonymous_5)","line":103,"loc":{"start":{"line":103,"column":35},"end":{"line":103,"column":54}}},"6":{"name":"(anonymous_6)","line":106,"loc":{"start":{"line":106,"column":36},"end":{"line":106,"column":49}}},"7":{"name":"(anonymous_7)","line":122,"loc":{"start":{"line":122,"column":34},"end":{"line":122,"column":57}}},"8":{"name":"(anonymous_8)","line":124,"loc":{"start":{"line":124,"column":23},"end":{"line":124,"column":35}}},"9":{"name":"(anonymous_9)","line":146,"loc":{"start":{"line":146,"column":66},"end":{"line":146,"column":81}}},"10":{"name":"(anonymous_10)","line":158,"loc":{"start":{"line":158,"column":34},"end":{"line":158,"column":59}}},"11":{"name":"(anonymous_11)","line":159,"loc":{"start":{"line":159,"column":23},"end":{"line":159,"column":35}}},"12":{"name":"(anonymous_12)","line":163,"loc":{"start":{"line":163,"column":68},"end":{"line":163,"column":83}}},"13":{"name":"(anonymous_13)","line":173,"loc":{"start":{"line":173,"column":35},"end":{"line":173,"column":50}}},"14":{"name":"(anonymous_14)","line":202,"loc":{"start":{"line":202,"column":40},"end":{"line":202,"column":55}}},"15":{"name":"(anonymous_15)","line":205,"loc":{"start":{"line":205,"column":36},"end":{"line":205,"column":49}}},"16":{"name":"(anonymous_16)","line":216,"loc":{"start":{"line":216,"column":36},"end":{"line":216,"column":62}}},"17":{"name":"(anonymous_17)","line":255,"loc":{"start":{"line":255,"column":36},"end":{"line":255,"column":84}}},"18":{"name":"(anonymous_18)","line":267,"loc":{"start":{"line":267,"column":2},"end":{"line":267,"column":16}}},"19":{"name":"(anonymous_19)","line":270,"loc":{"start":{"line":270,"column":31},"end":{"line":270,"column":44}}},"20":{"name":"(anonymous_20)","line":282,"loc":{"start":{"line":282,"column":31},"end":{"line":282,"column":44}}},"21":{"name":"(anonymous_21)","line":294,"loc":{"start":{"line":294,"column":31},"end":{"line":294,"column":44}}},"22":{"name":"(anonymous_22)","line":308,"loc":{"start":{"line":308,"column":4},"end":{"line":308,"column":20}}},"23":{"name":"(anonymous_23)","line":313,"loc":{"start":{"line":313,"column":17},"end":{"line":313,"column":32}}},"24":{"name":"(anonymous_24)","line":315,"loc":{"start":{"line":315,"column":35},"end":{"line":315,"column":48}}},"25":{"name":"(anonymous_25)","line":323,"loc":{"start":{"line":323,"column":37},"end":{"line":323,"column":56}}},"26":{"name":"(anonymous_26)","line":324,"loc":{"start":{"line":324,"column":37},"end":{"line":324,"column":52}}},"27":{"name":"(anonymous_27)","line":328,"loc":{"start":{"line":328,"column":7},"end":{"line":328,"column":22}}},"28":{"name":"(anonymous_28)","line":341,"loc":{"start":{"line":341,"column":30},"end":{"line":341,"column":52}}},"29":{"name":"(anonymous_29)","line":342,"loc":{"start":{"line":342,"column":23},"end":{"line":342,"column":35}}},"30":{"name":"(anonymous_30)","line":353,"loc":{"start":{"line":353,"column":92},"end":{"line":353,"column":107}}},"31":{"name":"(anonymous_31)","line":362,"loc":{"start":{"line":362,"column":34},"end":{"line":362,"column":46}}},"32":{"name":"(anonymous_32)","line":376,"loc":{"start":{"line":376,"column":50},"end":{"line":376,"column":68}}},"33":{"name":"(anonymous_33)","line":381,"loc":{"start":{"line":381,"column":19},"end":{"line":381,"column":34}}},"34":{"name":"(anonymous_34)","line":398,"loc":{"start":{"line":398,"column":37},"end":{"line":398,"column":60}}},"35":{"name":"(anonymous_35)","line":411,"loc":{"start":{"line":411,"column":49},"end":{"line":411,"column":73}}},"36":{"name":"(anonymous_36)","line":433,"loc":{"start":{"line":433,"column":29},"end":{"line":433,"column":41}}},"37":{"name":"(anonymous_37)","line":442,"loc":{"start":{"line":442,"column":28},"end":{"line":442,"column":54}}},"38":{"name":"(anonymous_38)","line":443,"loc":{"start":{"line":443,"column":39},"end":{"line":443,"column":69}}},"39":{"name":"(anonymous_39)","line":462,"loc":{"start":{"line":462,"column":27},"end":{"line":462,"column":66}}},"40":{"name":"(anonymous_40)","line":476,"loc":{"start":{"line":476,"column":39},"end":{"line":476,"column":69}}},"41":{"name":"(anonymous_41)","line":501,"loc":{"start":{"line":501,"column":30},"end":{"line":501,"column":69}}},"42":{"name":"(anonymous_42)","line":515,"loc":{"start":{"line":515,"column":39},"end":{"line":515,"column":69}}},"43":{"name":"(anonymous_43)","line":558,"loc":{"start":{"line":558,"column":30},"end":{"line":558,"column":73}}},"44":{"name":"(anonymous_44)","line":567,"loc":{"start":{"line":567,"column":19},"end":{"line":567,"column":31}}},"45":{"name":"(anonymous_45)","line":572,"loc":{"start":{"line":572,"column":2},"end":{"line":572,"column":16}}},"46":{"name":"(anonymous_46)","line":577,"loc":{"start":{"line":577,"column":26},"end":{"line":577,"column":47}}},"47":{"name":"(anonymous_47)","line":598,"loc":{"start":{"line":598,"column":42},"end":{"line":598,"column":65}}},"48":{"name":"(anonymous_48)","line":605,"loc":{"start":{"line":605,"column":4},"end":{"line":605,"column":16}}},"49":{"name":"(anonymous_49)","line":608,"loc":{"start":{"line":608,"column":30},"end":{"line":608,"column":57}}},"50":{"name":"(anonymous_50)","line":639,"loc":{"start":{"line":639,"column":52},"end":{"line":639,"column":67}}},"51":{"name":"(anonymous_51)","line":645,"loc":{"start":{"line":645,"column":30},"end":{"line":645,"column":45}}},"52":{"name":"(anonymous_52)","line":654,"loc":{"start":{"line":654,"column":29},"end":{"line":654,"column":41}}},"53":{"name":"(anonymous_53)","line":669,"loc":{"start":{"line":669,"column":30},"end":{"line":669,"column":60}}},"54":{"name":"(anonymous_54)","line":675,"loc":{"start":{"line":675,"column":19},"end":{"line":675,"column":31}}},"55":{"name":"(anonymous_55)","line":678,"loc":{"start":{"line":678,"column":34},"end":{"line":678,"column":61}}},"56":{"name":"(anonymous_56)","line":682,"loc":{"start":{"line":682,"column":25},"end":{"line":682,"column":38}}},"57":{"name":"(anonymous_57)","line":691,"loc":{"start":{"line":691,"column":50},"end":{"line":691,"column":65}}},"58":{"name":"(anonymous_58)","line":698,"loc":{"start":{"line":698,"column":29},"end":{"line":698,"column":41}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":10,"column":3}},"2":{"start":{"line":29,"column":0},"end":{"line":79,"column":1}},"3":{"start":{"line":30,"column":2},"end":{"line":30,"column":15}},"4":{"start":{"line":33,"column":2},"end":{"line":42,"column":3}},"5":{"start":{"line":34,"column":4},"end":{"line":34,"column":23}},"6":{"start":{"line":35,"column":4},"end":{"line":35,"column":30}},"7":{"start":{"line":37,"column":4},"end":{"line":37,"column":28}},"8":{"start":{"line":38,"column":4},"end":{"line":38,"column":32}},"9":{"start":{"line":39,"column":4},"end":{"line":39,"column":54}},"10":{"start":{"line":40,"column":4},"end":{"line":40,"column":46}},"11":{"start":{"line":41,"column":4},"end":{"line":41,"column":56}},"12":{"start":{"line":45,"column":2},"end":{"line":50,"column":3}},"13":{"start":{"line":46,"column":4},"end":{"line":46,"column":25}},"14":{"start":{"line":47,"column":4},"end":{"line":47,"column":29}},"15":{"start":{"line":49,"column":4},"end":{"line":49,"column":29}},"16":{"start":{"line":53,"column":2},"end":{"line":53,"column":47}},"17":{"start":{"line":56,"column":2},"end":{"line":60,"column":41}},"18":{"start":{"line":64,"column":2},"end":{"line":64,"column":33}},"19":{"start":{"line":65,"column":2},"end":{"line":65,"column":56}},"20":{"start":{"line":65,"column":27},"end":{"line":65,"column":54}},"21":{"start":{"line":70,"column":2},"end":{"line":70,"column":20}},"22":{"start":{"line":71,"column":2},"end":{"line":71,"column":67}},"23":{"start":{"line":72,"column":2},"end":{"line":72,"column":23}},"24":{"start":{"line":76,"column":2},"end":{"line":78,"column":7}},"25":{"start":{"line":76,"column":23},"end":{"line":78,"column":5}},"26":{"start":{"line":77,"column":4},"end":{"line":77,"column":27}},"27":{"start":{"line":77,"column":15},"end":{"line":77,"column":25}},"28":{"start":{"line":81,"column":0},"end":{"line":81,"column":57}},"29":{"start":{"line":87,"column":0},"end":{"line":89,"column":2}},"30":{"start":{"line":88,"column":2},"end":{"line":88,"column":112}},"31":{"start":{"line":95,"column":0},"end":{"line":97,"column":2}},"32":{"start":{"line":96,"column":2},"end":{"line":96,"column":35}},"33":{"start":{"line":103,"column":0},"end":{"line":109,"column":2}},"34":{"start":{"line":104,"column":2},"end":{"line":104,"column":18}},"35":{"start":{"line":106,"column":2},"end":{"line":108,"column":5}},"36":{"start":{"line":107,"column":4},"end":{"line":107,"column":35}},"37":{"start":{"line":122,"column":0},"end":{"line":150,"column":2}},"38":{"start":{"line":123,"column":2},"end":{"line":124,"column":38}},"39":{"start":{"line":126,"column":2},"end":{"line":126,"column":26}},"40":{"start":{"line":128,"column":2},"end":{"line":132,"column":3}},"41":{"start":{"line":129,"column":4},"end":{"line":129,"column":66}},"42":{"start":{"line":130,"column":4},"end":{"line":130,"column":32}},"43":{"start":{"line":131,"column":4},"end":{"line":131,"column":25}},"44":{"start":{"line":133,"column":2},"end":{"line":133,"column":65}},"45":{"start":{"line":133,"column":41},"end":{"line":133,"column":63}},"46":{"start":{"line":135,"column":2},"end":{"line":135,"column":55}},"47":{"start":{"line":136,"column":2},"end":{"line":136,"column":116}},"48":{"start":{"line":136,"column":50},"end":{"line":136,"column":114}},"49":{"start":{"line":138,"column":2},"end":{"line":143,"column":3}},"50":{"start":{"line":139,"column":4},"end":{"line":139,"column":62}},"51":{"start":{"line":141,"column":4},"end":{"line":141,"column":43}},"52":{"start":{"line":142,"column":4},"end":{"line":142,"column":23}},"53":{"start":{"line":146,"column":2},"end":{"line":149,"column":5}},"54":{"start":{"line":147,"column":4},"end":{"line":147,"column":38}},"55":{"start":{"line":147,"column":15},"end":{"line":147,"column":36}},"56":{"start":{"line":148,"column":4},"end":{"line":148,"column":26}},"57":{"start":{"line":158,"column":0},"end":{"line":167,"column":2}},"58":{"start":{"line":159,"column":2},"end":{"line":159,"column":38}},"59":{"start":{"line":161,"column":2},"end":{"line":161,"column":33}},"60":{"start":{"line":163,"column":2},"end":{"line":166,"column":5}},"61":{"start":{"line":164,"column":4},"end":{"line":164,"column":38}},"62":{"start":{"line":164,"column":15},"end":{"line":164,"column":36}},"63":{"start":{"line":165,"column":4},"end":{"line":165,"column":26}},"64":{"start":{"line":173,"column":0},"end":{"line":196,"column":2}},"65":{"start":{"line":174,"column":2},"end":{"line":176,"column":5}},"66":{"start":{"line":178,"column":2},"end":{"line":186,"column":3}},"67":{"start":{"line":179,"column":4},"end":{"line":185,"column":5}},"68":{"start":{"line":180,"column":6},"end":{"line":180,"column":40}},"69":{"start":{"line":182,"column":6},"end":{"line":182,"column":23}},"70":{"start":{"line":183,"column":6},"end":{"line":183,"column":16}},"71":{"start":{"line":184,"column":6},"end":{"line":184,"column":12}},"72":{"start":{"line":189,"column":2},"end":{"line":195,"column":3}},"73":{"start":{"line":190,"column":4},"end":{"line":192,"column":5}},"74":{"start":{"line":191,"column":6},"end":{"line":191,"column":40}},"75":{"start":{"line":194,"column":4},"end":{"line":194,"column":16}},"76":{"start":{"line":202,"column":0},"end":{"line":208,"column":2}},"77":{"start":{"line":203,"column":2},"end":{"line":203,"column":18}},"78":{"start":{"line":205,"column":2},"end":{"line":207,"column":5}},"79":{"start":{"line":206,"column":4},"end":{"line":206,"column":32}},"80":{"start":{"line":216,"column":0},"end":{"line":239,"column":2}},"81":{"start":{"line":217,"column":2},"end":{"line":219,"column":5}},"82":{"start":{"line":221,"column":2},"end":{"line":229,"column":3}},"83":{"start":{"line":222,"column":4},"end":{"line":228,"column":5}},"84":{"start":{"line":223,"column":6},"end":{"line":223,"column":51}},"85":{"start":{"line":225,"column":6},"end":{"line":225,"column":23}},"86":{"start":{"line":226,"column":6},"end":{"line":226,"column":16}},"87":{"start":{"line":227,"column":6},"end":{"line":227,"column":12}},"88":{"start":{"line":232,"column":2},"end":{"line":238,"column":3}},"89":{"start":{"line":233,"column":4},"end":{"line":235,"column":5}},"90":{"start":{"line":234,"column":6},"end":{"line":234,"column":57}},"91":{"start":{"line":237,"column":4},"end":{"line":237,"column":16}},"92":{"start":{"line":255,"column":0},"end":{"line":332,"column":2}},"93":{"start":{"line":256,"column":2},"end":{"line":258,"column":22}},"94":{"start":{"line":260,"column":2},"end":{"line":263,"column":3}},"95":{"start":{"line":261,"column":4},"end":{"line":261,"column":35}},"96":{"start":{"line":262,"column":4},"end":{"line":262,"column":32}},"97":{"start":{"line":265,"column":2},"end":{"line":331,"column":6}},"98":{"start":{"line":269,"column":4},"end":{"line":269,"column":25}},"99":{"start":{"line":270,"column":4},"end":{"line":274,"column":7}},"100":{"start":{"line":271,"column":6},"end":{"line":273,"column":7}},"101":{"start":{"line":272,"column":8},"end":{"line":272,"column":32}},"102":{"start":{"line":275,"column":4},"end":{"line":275,"column":66}},"103":{"start":{"line":276,"column":4},"end":{"line":278,"column":5}},"104":{"start":{"line":277,"column":6},"end":{"line":277,"column":95}},"105":{"start":{"line":281,"column":4},"end":{"line":281,"column":25}},"106":{"start":{"line":282,"column":4},"end":{"line":286,"column":7}},"107":{"start":{"line":283,"column":6},"end":{"line":285,"column":7}},"108":{"start":{"line":284,"column":8},"end":{"line":284,"column":32}},"109":{"start":{"line":287,"column":4},"end":{"line":287,"column":66}},"110":{"start":{"line":288,"column":4},"end":{"line":290,"column":5}},"111":{"start":{"line":289,"column":6},"end":{"line":289,"column":99}},"112":{"start":{"line":293,"column":4},"end":{"line":293,"column":25}},"113":{"start":{"line":294,"column":4},"end":{"line":298,"column":7}},"114":{"start":{"line":295,"column":6},"end":{"line":297,"column":7}},"115":{"start":{"line":296,"column":8},"end":{"line":296,"column":32}},"116":{"start":{"line":299,"column":4},"end":{"line":299,"column":66}},"117":{"start":{"line":300,"column":4},"end":{"line":302,"column":5}},"118":{"start":{"line":301,"column":6},"end":{"line":301,"column":100}},"119":{"start":{"line":305,"column":4},"end":{"line":305,"column":39}},"120":{"start":{"line":309,"column":4},"end":{"line":309,"column":61}},"121":{"start":{"line":309,"column":31},"end":{"line":309,"column":59}},"122":{"start":{"line":311,"column":4},"end":{"line":311,"column":97}},"123":{"start":{"line":313,"column":4},"end":{"line":321,"column":7}},"124":{"start":{"line":314,"column":6},"end":{"line":314,"column":23}},"125":{"start":{"line":315,"column":6},"end":{"line":319,"column":9}},"126":{"start":{"line":316,"column":8},"end":{"line":318,"column":9}},"127":{"start":{"line":317,"column":10},"end":{"line":317,"column":24}},"128":{"start":{"line":320,"column":6},"end":{"line":320,"column":80}},"129":{"start":{"line":320,"column":19},"end":{"line":320,"column":39}},"130":{"start":{"line":320,"column":49},"end":{"line":320,"column":78}},"131":{"start":{"line":323,"column":4},"end":{"line":330,"column":7}},"132":{"start":{"line":324,"column":6},"end":{"line":327,"column":9}},"133":{"start":{"line":325,"column":8},"end":{"line":325,"column":42}},"134":{"start":{"line":325,"column":19},"end":{"line":325,"column":40}},"135":{"start":{"line":326,"column":8},"end":{"line":326,"column":20}},"136":{"start":{"line":329,"column":6},"end":{"line":329,"column":39}},"137":{"start":{"line":341,"column":0},"end":{"line":357,"column":2}},"138":{"start":{"line":342,"column":2},"end":{"line":344,"column":5}},"139":{"start":{"line":346,"column":2},"end":{"line":351,"column":3}},"140":{"start":{"line":347,"column":4},"end":{"line":347,"column":58}},"141":{"start":{"line":348,"column":4},"end":{"line":348,"column":37}},"142":{"start":{"line":350,"column":4},"end":{"line":350,"column":23}},"143":{"start":{"line":353,"column":2},"end":{"line":356,"column":5}},"144":{"start":{"line":354,"column":4},"end":{"line":354,"column":38}},"145":{"start":{"line":354,"column":15},"end":{"line":354,"column":36}},"146":{"start":{"line":355,"column":4},"end":{"line":355,"column":55}},"147":{"start":{"line":362,"column":0},"end":{"line":369,"column":2}},"148":{"start":{"line":363,"column":2},"end":{"line":363,"column":40}},"149":{"start":{"line":365,"column":2},"end":{"line":367,"column":3}},"150":{"start":{"line":366,"column":4},"end":{"line":366,"column":37}},"151":{"start":{"line":368,"column":2},"end":{"line":368,"column":21}},"152":{"start":{"line":376,"column":0},"end":{"line":392,"column":2}},"153":{"start":{"line":377,"column":2},"end":{"line":377,"column":31}},"154":{"start":{"line":379,"column":2},"end":{"line":389,"column":3}},"155":{"start":{"line":380,"column":4},"end":{"line":380,"column":21}},"156":{"start":{"line":381,"column":4},"end":{"line":381,"column":96}},"157":{"start":{"line":381,"column":36},"end":{"line":381,"column":92}},"158":{"start":{"line":383,"column":4},"end":{"line":383,"column":41}},"159":{"start":{"line":384,"column":4},"end":{"line":384,"column":80}},"160":{"start":{"line":384,"column":41},"end":{"line":384,"column":78}},"161":{"start":{"line":385,"column":4},"end":{"line":385,"column":25}},"162":{"start":{"line":386,"column":4},"end":{"line":386,"column":99}},"163":{"start":{"line":386,"column":69},"end":{"line":386,"column":97}},"164":{"start":{"line":387,"column":4},"end":{"line":387,"column":99}},"165":{"start":{"line":387,"column":69},"end":{"line":387,"column":97}},"166":{"start":{"line":388,"column":4},"end":{"line":388,"column":35}},"167":{"start":{"line":391,"column":2},"end":{"line":391,"column":21}},"168":{"start":{"line":398,"column":0},"end":{"line":404,"column":2}},"169":{"start":{"line":399,"column":2},"end":{"line":403,"column":3}},"170":{"start":{"line":400,"column":4},"end":{"line":400,"column":49}},"171":{"start":{"line":402,"column":4},"end":{"line":402,"column":35}},"172":{"start":{"line":411,"column":0},"end":{"line":431,"column":2}},"173":{"start":{"line":412,"column":2},"end":{"line":412,"column":25}},"174":{"start":{"line":414,"column":2},"end":{"line":422,"column":3}},"175":{"start":{"line":415,"column":4},"end":{"line":421,"column":5}},"176":{"start":{"line":416,"column":6},"end":{"line":416,"column":41}},"177":{"start":{"line":418,"column":6},"end":{"line":418,"column":16}},"178":{"start":{"line":419,"column":6},"end":{"line":419,"column":19}},"179":{"start":{"line":420,"column":6},"end":{"line":420,"column":12}},"180":{"start":{"line":424,"column":2},"end":{"line":430,"column":3}},"181":{"start":{"line":425,"column":4},"end":{"line":427,"column":5}},"182":{"start":{"line":426,"column":6},"end":{"line":426,"column":46}},"183":{"start":{"line":429,"column":4},"end":{"line":429,"column":16}},"184":{"start":{"line":433,"column":0},"end":{"line":435,"column":2}},"185":{"start":{"line":434,"column":2},"end":{"line":434,"column":77}},"186":{"start":{"line":442,"column":0},"end":{"line":453,"column":2}},"187":{"start":{"line":443,"column":2},"end":{"line":446,"column":5}},"188":{"start":{"line":444,"column":4},"end":{"line":444,"column":38}},"189":{"start":{"line":444,"column":15},"end":{"line":444,"column":36}},"190":{"start":{"line":445,"column":4},"end":{"line":445,"column":39}},"191":{"start":{"line":448,"column":2},"end":{"line":452,"column":3}},"192":{"start":{"line":449,"column":4},"end":{"line":449,"column":26}},"193":{"start":{"line":451,"column":4},"end":{"line":451,"column":18}},"194":{"start":{"line":462,"column":0},"end":{"line":493,"column":2}},"195":{"start":{"line":463,"column":2},"end":{"line":474,"column":3}},"196":{"start":{"line":465,"column":6},"end":{"line":465,"column":22}},"197":{"start":{"line":467,"column":6},"end":{"line":467,"column":12}},"198":{"start":{"line":469,"column":6},"end":{"line":472,"column":7}},"199":{"start":{"line":470,"column":8},"end":{"line":470,"column":30}},"200":{"start":{"line":471,"column":8},"end":{"line":471,"column":24}},"201":{"start":{"line":473,"column":6},"end":{"line":473,"column":12}},"202":{"start":{"line":476,"column":2},"end":{"line":485,"column":5}},"203":{"start":{"line":477,"column":4},"end":{"line":477,"column":20}},"204":{"start":{"line":479,"column":4},"end":{"line":479,"column":38}},"205":{"start":{"line":479,"column":15},"end":{"line":479,"column":36}},"206":{"start":{"line":481,"column":4},"end":{"line":483,"column":5}},"207":{"start":{"line":482,"column":6},"end":{"line":482,"column":40}},"208":{"start":{"line":484,"column":4},"end":{"line":484,"column":31}},"209":{"start":{"line":487,"column":2},"end":{"line":487,"column":32}},"210":{"start":{"line":488,"column":2},"end":{"line":492,"column":3}},"211":{"start":{"line":489,"column":4},"end":{"line":489,"column":26}},"212":{"start":{"line":491,"column":4},"end":{"line":491,"column":18}},"213":{"start":{"line":501,"column":0},"end":{"line":530,"column":2}},"214":{"start":{"line":502,"column":2},"end":{"line":513,"column":3}},"215":{"start":{"line":504,"column":6},"end":{"line":504,"column":22}},"216":{"start":{"line":506,"column":6},"end":{"line":506,"column":12}},"217":{"start":{"line":508,"column":6},"end":{"line":511,"column":7}},"218":{"start":{"line":509,"column":8},"end":{"line":509,"column":30}},"219":{"start":{"line":510,"column":8},"end":{"line":510,"column":24}},"220":{"start":{"line":512,"column":6},"end":{"line":512,"column":12}},"221":{"start":{"line":515,"column":2},"end":{"line":522,"column":5}},"222":{"start":{"line":516,"column":4},"end":{"line":516,"column":38}},"223":{"start":{"line":516,"column":15},"end":{"line":516,"column":36}},"224":{"start":{"line":517,"column":4},"end":{"line":521,"column":5}},"225":{"start":{"line":518,"column":6},"end":{"line":518,"column":53}},"226":{"start":{"line":520,"column":6},"end":{"line":520,"column":34}},"227":{"start":{"line":524,"column":2},"end":{"line":524,"column":41}},"228":{"start":{"line":525,"column":2},"end":{"line":529,"column":3}},"229":{"start":{"line":526,"column":4},"end":{"line":526,"column":26}},"230":{"start":{"line":528,"column":4},"end":{"line":528,"column":18}},"231":{"start":{"line":558,"column":0},"end":{"line":652,"column":2}},"232":{"start":{"line":559,"column":2},"end":{"line":564,"column":5}},"233":{"start":{"line":566,"column":2},"end":{"line":566,"column":68}},"234":{"start":{"line":566,"column":39},"end":{"line":566,"column":52}},"235":{"start":{"line":566,"column":53},"end":{"line":566,"column":66}},"236":{"start":{"line":567,"column":2},"end":{"line":567,"column":34}},"237":{"start":{"line":568,"column":2},"end":{"line":568,"column":62}},"238":{"start":{"line":569,"column":2},"end":{"line":569,"column":65}},"239":{"start":{"line":571,"column":2},"end":{"line":651,"column":6}},"240":{"start":{"line":573,"column":4},"end":{"line":573,"column":33}},"241":{"start":{"line":573,"column":19},"end":{"line":573,"column":31}},"242":{"start":{"line":576,"column":4},"end":{"line":576,"column":41}},"243":{"start":{"line":577,"column":4},"end":{"line":603,"column":7}},"244":{"start":{"line":578,"column":6},"end":{"line":578,"column":40}},"245":{"start":{"line":578,"column":17},"end":{"line":578,"column":38}},"246":{"start":{"line":579,"column":6},"end":{"line":602,"column":7}},"247":{"start":{"line":580,"column":8},"end":{"line":580,"column":20}},"248":{"start":{"line":582,"column":8},"end":{"line":582,"column":25}},"249":{"start":{"line":584,"column":8},"end":{"line":596,"column":9}},"250":{"start":{"line":585,"column":10},"end":{"line":585,"column":41}},"251":{"start":{"line":587,"column":10},"end":{"line":587,"column":37}},"252":{"start":{"line":591,"column":10},"end":{"line":595,"column":11}},"253":{"start":{"line":592,"column":12},"end":{"line":592,"column":82}},"254":{"start":{"line":594,"column":12},"end":{"line":594,"column":33}},"255":{"start":{"line":598,"column":8},"end":{"line":601,"column":11}},"256":{"start":{"line":599,"column":10},"end":{"line":599,"column":44}},"257":{"start":{"line":599,"column":21},"end":{"line":599,"column":42}},"258":{"start":{"line":600,"column":10},"end":{"line":600,"column":49}},"259":{"start":{"line":606,"column":4},"end":{"line":606,"column":52}},"260":{"start":{"line":608,"column":4},"end":{"line":650,"column":7}},"261":{"start":{"line":609,"column":6},"end":{"line":609,"column":40}},"262":{"start":{"line":609,"column":17},"end":{"line":609,"column":38}},"263":{"start":{"line":613,"column":6},"end":{"line":628,"column":7}},"264":{"start":{"line":614,"column":8},"end":{"line":625,"column":9}},"265":{"start":{"line":615,"column":10},"end":{"line":624,"column":11}},"266":{"start":{"line":616,"column":12},"end":{"line":616,"column":29}},"267":{"start":{"line":617,"column":12},"end":{"line":617,"column":76}},"268":{"start":{"line":617,"column":38},"end":{"line":617,"column":74}},"269":{"start":{"line":618,"column":12},"end":{"line":618,"column":67}},"270":{"start":{"line":619,"column":12},"end":{"line":622,"column":13}},"271":{"start":{"line":620,"column":14},"end":{"line":620,"column":48}},"272":{"start":{"line":621,"column":14},"end":{"line":621,"column":49}},"273":{"start":{"line":623,"column":12},"end":{"line":623,"column":79}},"274":{"start":{"line":627,"column":8},"end":{"line":627,"column":29}},"275":{"start":{"line":631,"column":6},"end":{"line":635,"column":7}},"276":{"start":{"line":632,"column":8},"end":{"line":632,"column":42}},"277":{"start":{"line":634,"column":8},"end":{"line":634,"column":29}},"278":{"start":{"line":638,"column":6},"end":{"line":638,"column":57}},"279":{"start":{"line":639,"column":6},"end":{"line":649,"column":9}},"280":{"start":{"line":640,"column":8},"end":{"line":640,"column":42}},"281":{"start":{"line":640,"column":19},"end":{"line":640,"column":40}},"282":{"start":{"line":641,"column":8},"end":{"line":648,"column":9}},"283":{"start":{"line":642,"column":10},"end":{"line":642,"column":45}},"284":{"start":{"line":644,"column":10},"end":{"line":644,"column":33}},"285":{"start":{"line":645,"column":10},"end":{"line":645,"column":91}},"286":{"start":{"line":645,"column":47},"end":{"line":645,"column":87}},"287":{"start":{"line":646,"column":10},"end":{"line":646,"column":60}},"288":{"start":{"line":646,"column":25},"end":{"line":646,"column":58}},"289":{"start":{"line":647,"column":10},"end":{"line":647,"column":60}},"290":{"start":{"line":654,"column":0},"end":{"line":656,"column":2}},"291":{"start":{"line":655,"column":2},"end":{"line":655,"column":77}},"292":{"start":{"line":669,"column":0},"end":{"line":696,"column":2}},"293":{"start":{"line":670,"column":2},"end":{"line":672,"column":5}},"294":{"start":{"line":674,"column":2},"end":{"line":674,"column":68}},"295":{"start":{"line":674,"column":39},"end":{"line":674,"column":52}},"296":{"start":{"line":674,"column":53},"end":{"line":674,"column":66}},"297":{"start":{"line":675,"column":2},"end":{"line":675,"column":34}},"298":{"start":{"line":676,"column":2},"end":{"line":676,"column":62}},"299":{"start":{"line":678,"column":2},"end":{"line":695,"column":5}},"300":{"start":{"line":679,"column":4},"end":{"line":679,"column":38}},"301":{"start":{"line":679,"column":15},"end":{"line":679,"column":36}},"302":{"start":{"line":681,"column":4},"end":{"line":689,"column":43}},"303":{"start":{"line":682,"column":6},"end":{"line":688,"column":9}},"304":{"start":{"line":683,"column":8},"end":{"line":687,"column":9}},"305":{"start":{"line":684,"column":10},"end":{"line":684,"column":26}},"306":{"start":{"line":685,"column":10},"end":{"line":685,"column":60}},"307":{"start":{"line":686,"column":10},"end":{"line":686,"column":36}},"308":{"start":{"line":689,"column":20},"end":{"line":689,"column":41}},"309":{"start":{"line":691,"column":4},"end":{"line":694,"column":7}},"310":{"start":{"line":692,"column":6},"end":{"line":692,"column":40}},"311":{"start":{"line":692,"column":17},"end":{"line":692,"column":38}},"312":{"start":{"line":693,"column":6},"end":{"line":693,"column":40}},"313":{"start":{"line":698,"column":0},"end":{"line":700,"column":2}},"314":{"start":{"line":699,"column":2},"end":{"line":699,"column":77}},"315":{"start":{"line":704,"column":0},"end":{"line":704,"column":27}}},"branchMap":{"1":{"line":33,"type":"if","locations":[{"start":{"line":33,"column":2},"end":{"line":33,"column":2}},{"start":{"line":33,"column":2},"end":{"line":33,"column":2}}]},"2":{"line":37,"type":"binary-expr","locations":[{"start":{"line":37,"column":14},"end":{"line":37,"column":21}},{"start":{"line":37,"column":25},"end":{"line":37,"column":27}}]},"3":{"line":39,"type":"binary-expr","locations":[{"start":{"line":39,"column":24},"end":{"line":39,"column":44}},{"start":{"line":39,"column":48},"end":{"line":39,"column":53}}]},"4":{"line":40,"type":"binary-expr","locations":[{"start":{"line":40,"column":20},"end":{"line":40,"column":36}},{"start":{"line":40,"column":40},"end":{"line":40,"column":45}}]},"5":{"line":41,"type":"binary-expr","locations":[{"start":{"line":41,"column":25},"end":{"line":41,"column":46}},{"start":{"line":41,"column":50},"end":{"line":41,"column":55}}]},"6":{"line":45,"type":"if","locations":[{"start":{"line":45,"column":2},"end":{"line":45,"column":2}},{"start":{"line":45,"column":2},"end":{"line":45,"column":2}}]},"7":{"line":45,"type":"binary-expr","locations":[{"start":{"line":45,"column":6},"end":{"line":45,"column":15}},{"start":{"line":45,"column":19},"end":{"line":45,"column":47}},{"start":{"line":45,"column":51},"end":{"line":45,"column":72}}]},"8":{"line":65,"type":"if","locations":[{"start":{"line":65,"column":2},"end":{"line":65,"column":2}},{"start":{"line":65,"column":2},"end":{"line":65,"column":2}}]},"9":{"line":76,"type":"if","locations":[{"start":{"line":76,"column":2},"end":{"line":76,"column":2}},{"start":{"line":76,"column":2},"end":{"line":76,"column":2}}]},"10":{"line":76,"type":"binary-expr","locations":[{"start":{"line":76,"column":41},"end":{"line":76,"column":55}},{"start":{"line":76,"column":59},"end":{"line":78,"column":3}}]},"11":{"line":77,"type":"if","locations":[{"start":{"line":77,"column":4},"end":{"line":77,"column":4}},{"start":{"line":77,"column":4},"end":{"line":77,"column":4}}]},"12":{"line":124,"type":"binary-expr","locations":[{"start":{"line":124,"column":17},"end":{"line":124,"column":19}},{"start":{"line":124,"column":23},"end":{"line":124,"column":37}}]},"13":{"line":126,"type":"binary-expr","locations":[{"start":{"line":126,"column":12},"end":{"line":126,"column":19}},{"start":{"line":126,"column":23},"end":{"line":126,"column":25}}]},"14":{"line":128,"type":"if","locations":[{"start":{"line":128,"column":2},"end":{"line":128,"column":2}},{"start":{"line":128,"column":2},"end":{"line":128,"column":2}}]},"15":{"line":133,"type":"if","locations":[{"start":{"line":133,"column":2},"end":{"line":133,"column":2}},{"start":{"line":133,"column":2},"end":{"line":133,"column":2}}]},"16":{"line":136,"type":"if","locations":[{"start":{"line":136,"column":2},"end":{"line":136,"column":2}},{"start":{"line":136,"column":2},"end":{"line":136,"column":2}}]},"17":{"line":147,"type":"if","locations":[{"start":{"line":147,"column":4},"end":{"line":147,"column":4}},{"start":{"line":147,"column":4},"end":{"line":147,"column":4}}]},"18":{"line":159,"type":"binary-expr","locations":[{"start":{"line":159,"column":17},"end":{"line":159,"column":19}},{"start":{"line":159,"column":23},"end":{"line":159,"column":37}}]},"19":{"line":164,"type":"if","locations":[{"start":{"line":164,"column":4},"end":{"line":164,"column":4}},{"start":{"line":164,"column":4},"end":{"line":164,"column":4}}]},"20":{"line":189,"type":"if","locations":[{"start":{"line":189,"column":2},"end":{"line":189,"column":2}},{"start":{"line":189,"column":2},"end":{"line":189,"column":2}}]},"21":{"line":232,"type":"if","locations":[{"start":{"line":232,"column":2},"end":{"line":232,"column":2}},{"start":{"line":232,"column":2},"end":{"line":232,"column":2}}]},"22":{"line":260,"type":"if","locations":[{"start":{"line":260,"column":2},"end":{"line":260,"column":2}},{"start":{"line":260,"column":2},"end":{"line":260,"column":2}}]},"23":{"line":271,"type":"if","locations":[{"start":{"line":271,"column":6},"end":{"line":271,"column":6}},{"start":{"line":271,"column":6},"end":{"line":271,"column":6}}]},"24":{"line":271,"type":"binary-expr","locations":[{"start":{"line":271,"column":10},"end":{"line":271,"column":38}},{"start":{"line":271,"column":42},"end":{"line":271,"column":70}},{"start":{"line":271,"column":74},"end":{"line":271,"column":103}},{"start":{"line":271,"column":107},"end":{"line":271,"column":128}},{"start":{"line":271,"column":132},"end":{"line":271,"column":149}}]},"25":{"line":276,"type":"if","locations":[{"start":{"line":276,"column":4},"end":{"line":276,"column":4}},{"start":{"line":276,"column":4},"end":{"line":276,"column":4}}]},"26":{"line":283,"type":"if","locations":[{"start":{"line":283,"column":6},"end":{"line":283,"column":6}},{"start":{"line":283,"column":6},"end":{"line":283,"column":6}}]},"27":{"line":283,"type":"binary-expr","locations":[{"start":{"line":283,"column":10},"end":{"line":283,"column":18}},{"start":{"line":283,"column":22},"end":{"line":283,"column":52}}]},"28":{"line":288,"type":"if","locations":[{"start":{"line":288,"column":4},"end":{"line":288,"column":4}},{"start":{"line":288,"column":4},"end":{"line":288,"column":4}}]},"29":{"line":295,"type":"if","locations":[{"start":{"line":295,"column":6},"end":{"line":295,"column":6}},{"start":{"line":295,"column":6},"end":{"line":295,"column":6}}]},"30":{"line":295,"type":"binary-expr","locations":[{"start":{"line":295,"column":10},"end":{"line":295,"column":18}},{"start":{"line":295,"column":23},"end":{"line":295,"column":53}},{"start":{"line":295,"column":57},"end":{"line":295,"column":88}},{"start":{"line":295,"column":92},"end":{"line":295,"column":122}},{"start":{"line":295,"column":126},"end":{"line":295,"column":157}}]},"31":{"line":300,"type":"if","locations":[{"start":{"line":300,"column":4},"end":{"line":300,"column":4}},{"start":{"line":300,"column":4},"end":{"line":300,"column":4}}]},"32":{"line":309,"type":"if","locations":[{"start":{"line":309,"column":4},"end":{"line":309,"column":4}},{"start":{"line":309,"column":4},"end":{"line":309,"column":4}}]},"33":{"line":316,"type":"if","locations":[{"start":{"line":316,"column":8},"end":{"line":316,"column":8}},{"start":{"line":316,"column":8},"end":{"line":316,"column":8}}]},"34":{"line":316,"type":"binary-expr","locations":[{"start":{"line":316,"column":12},"end":{"line":316,"column":32}},{"start":{"line":316,"column":36},"end":{"line":316,"column":55}},{"start":{"line":316,"column":59},"end":{"line":316,"column":116}}]},"35":{"line":320,"type":"if","locations":[{"start":{"line":320,"column":6},"end":{"line":320,"column":6}},{"start":{"line":320,"column":6},"end":{"line":320,"column":6}}]},"36":{"line":325,"type":"if","locations":[{"start":{"line":325,"column":8},"end":{"line":325,"column":8}},{"start":{"line":325,"column":8},"end":{"line":325,"column":8}}]},"37":{"line":342,"type":"binary-expr","locations":[{"start":{"line":342,"column":17},"end":{"line":342,"column":19}},{"start":{"line":342,"column":23},"end":{"line":342,"column":37}}]},"38":{"line":353,"type":"cond-expr","locations":[{"start":{"line":353,"column":63},"end":{"line":353,"column":74}},{"start":{"line":353,"column":77},"end":{"line":353,"column":90}}]},"39":{"line":354,"type":"if","locations":[{"start":{"line":354,"column":4},"end":{"line":354,"column":4}},{"start":{"line":354,"column":4},"end":{"line":354,"column":4}}]},"40":{"line":365,"type":"if","locations":[{"start":{"line":365,"column":2},"end":{"line":365,"column":2}},{"start":{"line":365,"column":2},"end":{"line":365,"column":2}}]},"41":{"line":379,"type":"if","locations":[{"start":{"line":379,"column":2},"end":{"line":379,"column":2}},{"start":{"line":379,"column":2},"end":{"line":379,"column":2}}]},"42":{"line":384,"type":"if","locations":[{"start":{"line":384,"column":4},"end":{"line":384,"column":4}},{"start":{"line":384,"column":4},"end":{"line":384,"column":4}}]},"43":{"line":386,"type":"if","locations":[{"start":{"line":386,"column":4},"end":{"line":386,"column":4}},{"start":{"line":386,"column":4},"end":{"line":386,"column":4}}]},"44":{"line":386,"type":"binary-expr","locations":[{"start":{"line":386,"column":8},"end":{"line":386,"column":26}},{"start":{"line":386,"column":30},"end":{"line":386,"column":65}}]},"45":{"line":387,"type":"if","locations":[{"start":{"line":387,"column":4},"end":{"line":387,"column":4}},{"start":{"line":387,"column":4},"end":{"line":387,"column":4}}]},"46":{"line":387,"type":"binary-expr","locations":[{"start":{"line":387,"column":8},"end":{"line":387,"column":26}},{"start":{"line":387,"column":30},"end":{"line":387,"column":65}}]},"47":{"line":399,"type":"if","locations":[{"start":{"line":399,"column":2},"end":{"line":399,"column":2}},{"start":{"line":399,"column":2},"end":{"line":399,"column":2}}]},"48":{"line":424,"type":"if","locations":[{"start":{"line":424,"column":2},"end":{"line":424,"column":2}},{"start":{"line":424,"column":2},"end":{"line":424,"column":2}}]},"49":{"line":444,"type":"if","locations":[{"start":{"line":444,"column":4},"end":{"line":444,"column":4}},{"start":{"line":444,"column":4},"end":{"line":444,"column":4}}]},"50":{"line":448,"type":"if","locations":[{"start":{"line":448,"column":2},"end":{"line":448,"column":2}},{"start":{"line":448,"column":2},"end":{"line":448,"column":2}}]},"51":{"line":463,"type":"switch","locations":[{"start":{"line":464,"column":4},"end":{"line":467,"column":12}},{"start":{"line":468,"column":4},"end":{"line":473,"column":12}}]},"52":{"line":469,"type":"if","locations":[{"start":{"line":469,"column":6},"end":{"line":469,"column":6}},{"start":{"line":469,"column":6},"end":{"line":469,"column":6}}]},"53":{"line":479,"type":"if","locations":[{"start":{"line":479,"column":4},"end":{"line":479,"column":4}},{"start":{"line":479,"column":4},"end":{"line":479,"column":4}}]},"54":{"line":488,"type":"if","locations":[{"start":{"line":488,"column":2},"end":{"line":488,"column":2}},{"start":{"line":488,"column":2},"end":{"line":488,"column":2}}]},"55":{"line":502,"type":"switch","locations":[{"start":{"line":503,"column":4},"end":{"line":506,"column":12}},{"start":{"line":507,"column":4},"end":{"line":512,"column":12}}]},"56":{"line":508,"type":"if","locations":[{"start":{"line":508,"column":6},"end":{"line":508,"column":6}},{"start":{"line":508,"column":6},"end":{"line":508,"column":6}}]},"57":{"line":516,"type":"if","locations":[{"start":{"line":516,"column":4},"end":{"line":516,"column":4}},{"start":{"line":516,"column":4},"end":{"line":516,"column":4}}]},"58":{"line":517,"type":"if","locations":[{"start":{"line":517,"column":4},"end":{"line":517,"column":4}},{"start":{"line":517,"column":4},"end":{"line":517,"column":4}}]},"59":{"line":525,"type":"if","locations":[{"start":{"line":525,"column":2},"end":{"line":525,"column":2}},{"start":{"line":525,"column":2},"end":{"line":525,"column":2}}]},"60":{"line":566,"type":"if","locations":[{"start":{"line":566,"column":2},"end":{"line":566,"column":2}},{"start":{"line":566,"column":2},"end":{"line":566,"column":2}}]},"61":{"line":567,"type":"binary-expr","locations":[{"start":{"line":567,"column":13},"end":{"line":567,"column":15}},{"start":{"line":567,"column":19},"end":{"line":567,"column":33}}]},"62":{"line":568,"type":"cond-expr","locations":[{"start":{"line":568,"column":40},"end":{"line":568,"column":53}},{"start":{"line":568,"column":56},"end":{"line":568,"column":61}}]},"63":{"line":569,"type":"cond-expr","locations":[{"start":{"line":569,"column":42},"end":{"line":569,"column":56}},{"start":{"line":569,"column":59},"end":{"line":569,"column":64}}]},"64":{"line":573,"type":"if","locations":[{"start":{"line":573,"column":4},"end":{"line":573,"column":4}},{"start":{"line":573,"column":4},"end":{"line":573,"column":4}}]},"65":{"line":578,"type":"if","locations":[{"start":{"line":578,"column":6},"end":{"line":578,"column":6}},{"start":{"line":578,"column":6},"end":{"line":578,"column":6}}]},"66":{"line":579,"type":"if","locations":[{"start":{"line":579,"column":6},"end":{"line":579,"column":6}},{"start":{"line":579,"column":6},"end":{"line":579,"column":6}}]},"67":{"line":599,"type":"if","locations":[{"start":{"line":599,"column":10},"end":{"line":599,"column":10}},{"start":{"line":599,"column":10},"end":{"line":599,"column":10}}]},"68":{"line":609,"type":"if","locations":[{"start":{"line":609,"column":6},"end":{"line":609,"column":6}},{"start":{"line":609,"column":6},"end":{"line":609,"column":6}}]},"69":{"line":615,"type":"if","locations":[{"start":{"line":615,"column":10},"end":{"line":615,"column":10}},{"start":{"line":615,"column":10},"end":{"line":615,"column":10}}]},"70":{"line":615,"type":"binary-expr","locations":[{"start":{"line":615,"column":14},"end":{"line":615,"column":47}},{"start":{"line":615,"column":52},"end":{"line":615,"column":57}},{"start":{"line":615,"column":61},"end":{"line":615,"column":78}}]},"71":{"line":617,"type":"if","locations":[{"start":{"line":617,"column":12},"end":{"line":617,"column":12}},{"start":{"line":617,"column":12},"end":{"line":617,"column":12}}]},"72":{"line":619,"type":"if","locations":[{"start":{"line":619,"column":12},"end":{"line":619,"column":12}},{"start":{"line":619,"column":12},"end":{"line":619,"column":12}}]},"73":{"line":640,"type":"if","locations":[{"start":{"line":640,"column":8},"end":{"line":640,"column":8}},{"start":{"line":640,"column":8},"end":{"line":640,"column":8}}]},"74":{"line":641,"type":"if","locations":[{"start":{"line":641,"column":8},"end":{"line":641,"column":8}},{"start":{"line":641,"column":8},"end":{"line":641,"column":8}}]},"75":{"line":646,"type":"if","locations":[{"start":{"line":646,"column":10},"end":{"line":646,"column":10}},{"start":{"line":646,"column":10},"end":{"line":646,"column":10}}]},"76":{"line":674,"type":"if","locations":[{"start":{"line":674,"column":2},"end":{"line":674,"column":2}},{"start":{"line":674,"column":2},"end":{"line":674,"column":2}}]},"77":{"line":675,"type":"binary-expr","locations":[{"start":{"line":675,"column":13},"end":{"line":675,"column":15}},{"start":{"line":675,"column":19},"end":{"line":675,"column":33}}]},"78":{"line":676,"type":"cond-expr","locations":[{"start":{"line":676,"column":40},"end":{"line":676,"column":53}},{"start":{"line":676,"column":56},"end":{"line":676,"column":61}}]},"79":{"line":679,"type":"if","locations":[{"start":{"line":679,"column":4},"end":{"line":679,"column":4}},{"start":{"line":679,"column":4},"end":{"line":679,"column":4}}]},"80":{"line":683,"type":"if","locations":[{"start":{"line":683,"column":8},"end":{"line":683,"column":8}},{"start":{"line":683,"column":8},"end":{"line":683,"column":8}}]},"81":{"line":683,"type":"binary-expr","locations":[{"start":{"line":683,"column":12},"end":{"line":683,"column":33}},{"start":{"line":683,"column":38},"end":{"line":683,"column":43}},{"start":{"line":683,"column":47},"end":{"line":683,"column":63}}]},"82":{"line":692,"type":"if","locations":[{"start":{"line":692,"column":6},"end":{"line":692,"column":6}},{"start":{"line":692,"column":6},"end":{"line":692,"column":6}}]}},"code":["var customUtils = require('./customUtils')","  , model = require('./model')","  , async = require('async')","  , Executor = require('./executor')","  , Index = require('./indexes')","  , util = require('util')","  , _ = require('underscore')","  , Persistence = require('./persistence')","  , Cursor = require('./cursor')","  ;","","","/**"," * Create a new collection"," * @param {String} options.filename Optional, datastore will be in-memory only if not provided"," * @param {Boolean} options.timestampData Optional, defaults to false. If set to true, createdAt and updatedAt will be created and populated automatically (if not specified by user)"," * @param {Boolean} options.inMemoryOnly Optional, defaults to false"," * @param {String} options.nodeWebkitAppName Optional, specify the name of your NW app if you want options.filename to be relative to the directory where"," *                                            Node Webkit stores application data such as cookies and local storage (the best place to store data in my opinion)"," * @param {Boolean} options.autoload Optional, defaults to false"," * @param {Function} options.onload Optional, if autoload is used this will be called after the load database with the error object as parameter. If you don't pass it the error will be thrown"," * @param {Function} options.afterSerialization/options.beforeDeserialization Optional, serialization hooks"," * @param {Number} options.corruptAlertThreshold Optional, threshold after which an alert is thrown if too much data is corrupt"," * @param {Function} options.compareStrings Optional, string comparison function that overrides default for sorting"," *"," * Event Emitter - Events"," * * compaction.done - Fired whenever a compaction operation was finished"," */","function Datastore (options) {","  var filename;","","  // Retrocompatibility with v0.6 and before","  if (typeof options === 'string') {","    filename = options;","    this.inMemoryOnly = false;   // Default","  } else {","    options = options || {};","    filename = options.filename;","    this.inMemoryOnly = options.inMemoryOnly || false;","    this.autoload = options.autoload || false;","    this.timestampData = options.timestampData || false;","  }","","  // Determine whether in memory or persistent","  if (!filename || typeof filename !== 'string' || filename.length === 0) {","    this.filename = null;","    this.inMemoryOnly = true;","  } else {","    this.filename = filename;","  }","","  // String comparison function","  this.compareStrings = options.compareStrings;","","  // Persistence handling","  this.persistence = new Persistence({ db: this, nodeWebkitAppName: options.nodeWebkitAppName","                                      , afterSerialization: options.afterSerialization","                                      , beforeDeserialization: options.beforeDeserialization","                                      , corruptAlertThreshold: options.corruptAlertThreshold","                                      });","","  // This new executor is ready if we don't use persistence","  // If we do, it will only be ready once loadDatabase is called","  this.executor = new Executor();","  if (this.inMemoryOnly) { this.executor.ready = true; }","","  // Indexed by field name, dot notation can be used","  // _id is always indexed and since _ids are generated randomly the underlying","  // binary is always well-balanced","  this.indexes = {};","  this.indexes._id = new Index({ fieldName: '_id', unique: true });","  this.ttlIndexes = {};","","  // Queue a load of the database right away and call the onload handler","  // By default (no onload handler), if there is an error there, no operation will be possible so warn the user by throwing an exception","  if (this.autoload) { this.loadDatabase(options.onload || function (err) {","    if (err) { throw err; }","  }); }","}","","util.inherits(Datastore, require('events').EventEmitter);","","","/**"," * Load the database from the datafile, and trigger the execution of buffered commands if any"," */","Datastore.prototype.loadDatabase = function () {","  this.executor.push({ this: this.persistence, fn: this.persistence.loadDatabase, arguments: arguments }, true);","};","","","/**"," * Get an array of all the data in the database"," */","Datastore.prototype.getAllData = function () {","  return this.indexes._id.getAll();","};","","","/**"," * Reset all currently defined indexes"," */","Datastore.prototype.resetIndexes = function (newData) {","  var self = this;","","  Object.keys(this.indexes).forEach(function (i) {","    self.indexes[i].reset(newData);","  });","};","","","/**"," * Ensure an index is kept for this field. Same parameters as lib/indexes"," * For now this function is synchronous, we need to test how much time it takes"," * We use an async API for consistency with the rest of the code"," * @param {String} options.fieldName"," * @param {Boolean} options.unique"," * @param {Boolean} options.sparse"," * @param {Number} options.expireAfterSeconds - Optional, if set this index becomes a TTL index (only works on Date fields, not arrays of Date)"," * @param {Function} cb Optional callback, signature: err"," */","Datastore.prototype.ensureIndex = function (options, cb) {","  var err","    , callback = cb || function () {};","","  options = options || {};","","  if (!options.fieldName) {","    err = new Error(\"Cannot create an index without a fieldName\");","    err.missingFieldName = true;","    return callback(err);","  }","  if (this.indexes[options.fieldName]) { return callback(null); }","","  this.indexes[options.fieldName] = new Index(options);","  if (options.expireAfterSeconds !== undefined) { this.ttlIndexes[options.fieldName] = options.expireAfterSeconds; }   // With this implementation index creation is not necessary to ensure TTL but we stick with MongoDB's API here","","  try {","    this.indexes[options.fieldName].insert(this.getAllData());","  } catch (e) {","    delete this.indexes[options.fieldName];","    return callback(e);","  }","","  // We may want to force all options to be persisted including defaults, not just the ones passed the index creation function","  this.persistence.persistNewState([{ $$indexCreated: options }], function (err) {","    if (err) { return callback(err); }","    return callback(null);","  });","};","","","/**"," * Remove an index"," * @param {String} fieldName"," * @param {Function} cb Optional callback, signature: err"," */","Datastore.prototype.removeIndex = function (fieldName, cb) {","  var callback = cb || function () {};","","  delete this.indexes[fieldName];","","  this.persistence.persistNewState([{ $$indexRemoved: fieldName }], function (err) {","    if (err) { return callback(err); }","    return callback(null);","  });","};","","","/**"," * Add one or several document(s) to all indexes"," */","Datastore.prototype.addToIndexes = function (doc) {","  var i, failingIndex, error","    , keys = Object.keys(this.indexes)","    ;","","  for (i = 0; i < keys.length; i += 1) {","    try {","      this.indexes[keys[i]].insert(doc);","    } catch (e) {","      failingIndex = i;","      error = e;","      break;","    }","  }","","  // If an error happened, we need to rollback the insert on all other indexes","  if (error) {","    for (i = 0; i < failingIndex; i += 1) {","      this.indexes[keys[i]].remove(doc);","    }","","    throw error;","  }","};","","","/**"," * Remove one or several document(s) from all indexes"," */","Datastore.prototype.removeFromIndexes = function (doc) {","  var self = this;","","  Object.keys(this.indexes).forEach(function (i) {","    self.indexes[i].remove(doc);","  });","};","","","/**"," * Update one or several documents in all indexes"," * To update multiple documents, oldDoc must be an array of { oldDoc, newDoc } pairs"," * If one update violates a constraint, all changes are rolled back"," */","Datastore.prototype.updateIndexes = function (oldDoc, newDoc) {","  var i, failingIndex, error","    , keys = Object.keys(this.indexes)","    ;","","  for (i = 0; i < keys.length; i += 1) {","    try {","      this.indexes[keys[i]].update(oldDoc, newDoc);","    } catch (e) {","      failingIndex = i;","      error = e;","      break;","    }","  }","","  // If an error happened, we need to rollback the update on all other indexes","  if (error) {","    for (i = 0; i < failingIndex; i += 1) {","      this.indexes[keys[i]].revertUpdate(oldDoc, newDoc);","    }","","    throw error;","  }","};","","","/**"," * Return the list of candidates for a given query"," * Crude implementation for now, we return the candidates given by the first usable index if any"," * We try the following query types, in this order: basic match, $in match, comparison match"," * One way to make it better would be to enable the use of multiple indexes if the first usable index"," * returns too much data. I may do it in the future."," *"," * Returned candidates will be scanned to find and remove all expired documents"," *"," * @param {Query} query"," * @param {Boolean} dontExpireStaleDocs Optional, defaults to false, if true don't remove stale docs. Useful for the remove function which shouldn't be impacted by expirations"," * @param {Function} callback Signature err, docs"," */","Datastore.prototype.getCandidates = function (query, dontExpireStaleDocs, callback) {","  var indexNames = Object.keys(this.indexes)","    , self = this","    , usableQueryKeys;","","  if (typeof dontExpireStaleDocs === 'function') {","    callback = dontExpireStaleDocs;","    dontExpireStaleDocs = false;","  }","","  async.waterfall([","  // STEP 1: get candidates list by checking indexes from most to least frequent usecase","  function (cb) {","    // For a basic match","    usableQueryKeys = [];","    Object.keys(query).forEach(function (k) {","      if (typeof query[k] === 'string' || typeof query[k] === 'number' || typeof query[k] === 'boolean' || util.isDate(query[k]) || query[k] === null) {","        usableQueryKeys.push(k);","      }","    });","    usableQueryKeys = _.intersection(usableQueryKeys, indexNames);","    if (usableQueryKeys.length > 0) {","      return cb(null, self.indexes[usableQueryKeys[0]].getMatching(query[usableQueryKeys[0]]));","    }","","    // For a $in match","    usableQueryKeys = [];","    Object.keys(query).forEach(function (k) {","      if (query[k] && query[k].hasOwnProperty('$in')) {","        usableQueryKeys.push(k);","      }","    });","    usableQueryKeys = _.intersection(usableQueryKeys, indexNames);","    if (usableQueryKeys.length > 0) {","      return cb(null, self.indexes[usableQueryKeys[0]].getMatching(query[usableQueryKeys[0]].$in));","    }","","    // For a comparison match","    usableQueryKeys = [];","    Object.keys(query).forEach(function (k) {","      if (query[k] && (query[k].hasOwnProperty('$lt') || query[k].hasOwnProperty('$lte') || query[k].hasOwnProperty('$gt') || query[k].hasOwnProperty('$gte'))) {","        usableQueryKeys.push(k);","      }","    });","    usableQueryKeys = _.intersection(usableQueryKeys, indexNames);","    if (usableQueryKeys.length > 0) {","      return cb(null, self.indexes[usableQueryKeys[0]].getBetweenBounds(query[usableQueryKeys[0]]));","    }","","    // By default, return all the DB data","    return cb(null, self.getAllData());","  }","  // STEP 2: remove all expired documents","  , function (docs) {","    if (dontExpireStaleDocs) { return callback(null, docs); }","","    var expiredDocsIds = [], validDocs = [], ttlIndexesFieldNames = Object.keys(self.ttlIndexes);","","    docs.forEach(function (doc) {","      var valid = true;","      ttlIndexesFieldNames.forEach(function (i) {","        if (doc[i] !== undefined && util.isDate(doc[i]) && Date.now() > doc[i].getTime() + self.ttlIndexes[i] * 1000) {","          valid = false;","        }","      });","      if (valid) { validDocs.push(doc); } else { expiredDocsIds.push(doc._id); }","    });","","    async.eachSeries(expiredDocsIds, function (_id, cb) {","      self._remove({ _id: _id }, {}, function (err) {","        if (err) { return callback(err); }","        return cb();","      });","    }, function (err) {","      return callback(null, validDocs);","    });","  }]);","};","","","/**"," * Insert a new document"," * @param {Function} cb Optional callback, signature: err, insertedDoc"," *"," * @api private Use Datastore.insert which has the same signature"," */","Datastore.prototype._insert = function (newDoc, cb) {","  var callback = cb || function () {}","    , preparedDoc","    ;","","  try {","    preparedDoc = this.prepareDocumentForInsertion(newDoc)","    this._insertInCache(preparedDoc);","  } catch (e) {","    return callback(e);","  }","","  this.persistence.persistNewState(util.isArray(preparedDoc) ? preparedDoc : [preparedDoc], function (err) {","    if (err) { return callback(err); }","    return callback(null, model.deepCopy(preparedDoc));","  });","};","","/**"," * Create a new _id that's not already in use"," */","Datastore.prototype.createNewId = function () {","  var tentativeId = customUtils.uid(16);","  // Try as many times as needed to get an unused _id. As explained in customUtils, the probability of this ever happening is extremely small, so this is O(1)","  if (this.indexes._id.getMatching(tentativeId).length > 0) {","    tentativeId = this.createNewId();","  }","  return tentativeId;","};","","/**"," * Prepare a document (or array of documents) to be inserted in a database"," * Meaning adds _id and timestamps if necessary on a copy of newDoc to avoid any side effect on user input"," * @api private"," */","Datastore.prototype.prepareDocumentForInsertion = function (newDoc) {","  var preparedDoc, self = this;","","  if (util.isArray(newDoc)) {","    preparedDoc = [];","    newDoc.forEach(function (doc) { preparedDoc.push(self.prepareDocumentForInsertion(doc)); });","  } else {","    preparedDoc = model.deepCopy(newDoc);","    if (preparedDoc._id === undefined) { preparedDoc._id = this.createNewId(); }","    var now = new Date();","    if (this.timestampData && preparedDoc.createdAt === undefined) { preparedDoc.createdAt = now; }","    if (this.timestampData && preparedDoc.updatedAt === undefined) { preparedDoc.updatedAt = now; }","    model.checkObject(preparedDoc);","  }","","  return preparedDoc;","};","","/**"," * If newDoc is an array of documents, this will insert all documents in the cache"," * @api private"," */","Datastore.prototype._insertInCache = function (preparedDoc) {","  if (util.isArray(preparedDoc)) {","    this._insertMultipleDocsInCache(preparedDoc);","  } else {","    this.addToIndexes(preparedDoc);","  }","};","","/**"," * If one insertion fails (e.g. because of a unique constraint), roll back all previous"," * inserts and throws the error"," * @api private"," */","Datastore.prototype._insertMultipleDocsInCache = function (preparedDocs) {","  var i, failingI, error;","","  for (i = 0; i < preparedDocs.length; i += 1) {","    try {","      this.addToIndexes(preparedDocs[i]);","    } catch (e) {","      error = e;","      failingI = i;","      break;","    }","  }","","  if (error) {","    for (i = 0; i < failingI; i += 1) {","      this.removeFromIndexes(preparedDocs[i]);","    }","","    throw error;","  }","};","","Datastore.prototype.insert = function () {","  this.executor.push({ this: this, fn: this._insert, arguments: arguments });","};","","","/**"," * Count all documents matching the query"," * @param {Object} query MongoDB-style query"," */","Datastore.prototype.count = function(query, callback) {","  var cursor = new Cursor(this, query, function(err, docs, callback) {","    if (err) { return callback(err); }","    return callback(null, docs.length);","  });","","  if (typeof callback === 'function') {","    cursor.exec(callback);","  } else {","    return cursor;","  }","};","","","/**"," * Find all documents matching the query"," * If no callback is passed, we return the cursor so that user can limit, skip and finally exec"," * @param {Object} query MongoDB-style query"," * @param {Object} projection MongoDB-style projection"," */","Datastore.prototype.find = function (query, projection, callback) {","  switch (arguments.length) {","    case 1:","      projection = {};","      // callback is undefined, will return a cursor","      break;","    case 2:","      if (typeof projection === 'function') {","        callback = projection;","        projection = {};","      }   // If not assume projection is an object and callback undefined","      break;","  }","","  var cursor = new Cursor(this, query, function(err, docs, callback) {","    var res = [], i;","","    if (err) { return callback(err); }","","    for (i = 0; i < docs.length; i += 1) {","      res.push(model.deepCopy(docs[i]));","    }","    return callback(null, res);","  });","","  cursor.projection(projection);","  if (typeof callback === 'function') {","    cursor.exec(callback);","  } else {","    return cursor;","  }","};","","","/**"," * Find one document matching the query"," * @param {Object} query MongoDB-style query"," * @param {Object} projection MongoDB-style projection"," */","Datastore.prototype.findOne = function (query, projection, callback) {","  switch (arguments.length) {","    case 1:","      projection = {};","      // callback is undefined, will return a cursor","      break;","    case 2:","      if (typeof projection === 'function') {","        callback = projection;","        projection = {};","      }   // If not assume projection is an object and callback undefined","      break;","  }","","  var cursor = new Cursor(this, query, function(err, docs, callback) {","    if (err) { return callback(err); }","    if (docs.length === 1) {","      return callback(null, model.deepCopy(docs[0]));","    } else {","      return callback(null, null);","    }","  });","","  cursor.projection(projection).limit(1);","  if (typeof callback === 'function') {","    cursor.exec(callback);","  } else {","    return cursor;","  }","};","","","/**"," * Update all docs matching query"," * @param {Object} query"," * @param {Object} updateQuery"," * @param {Object} options Optional options"," *                 options.multi If true, can update multiple documents (defaults to false)"," *                 options.upsert If true, document is inserted if the query doesn't match anything"," *                 options.returnUpdatedDocs Defaults to false, if true return as third argument the array of updated matched documents (even if no change actually took place)"," * @param {Function} cb Optional callback, signature: (err, numAffected, affectedDocuments, upsert)"," *                      If update was an upsert, upsert flag is set to true"," *                      affectedDocuments can be one of the following:"," *                        * For an upsert, the upserted document"," *                        * For an update with returnUpdatedDocs option false, null"," *                        * For an update with returnUpdatedDocs true and multi false, the updated document"," *                        * For an update with returnUpdatedDocs true and multi true, the array of updated documents"," *"," * WARNING: The API was changed between v1.7.4 and v1.8, for consistency and readability reasons. Prior and including to v1.7.4,"," *          the callback signature was (err, numAffected, updated) where updated was the updated document in case of an upsert"," *          or the array of updated documents for an update if the returnUpdatedDocs option was true. That meant that the type of"," *          affectedDocuments in a non multi update depended on whether there was an upsert or not, leaving only two ways for the"," *          user to check whether an upsert had occured: checking the type of affectedDocuments or running another find query on"," *          the whole dataset to check its size. Both options being ugly, the breaking change was necessary."," *"," * @api private Use Datastore.update which has the same signature"," */","Datastore.prototype._update = function (query, updateQuery, options, cb) {","  var callback","    , self = this","    , numReplaced = 0","    , multi, upsert","    , i","    ;","","  if (typeof options === 'function') { cb = options; options = {}; }","  callback = cb || function () {};","  multi = options.multi !== undefined ? options.multi : false;","  upsert = options.upsert !== undefined ? options.upsert : false;","","  async.waterfall([","  function (cb) {   // If upsert option is set, check whether we need to insert the doc","    if (!upsert) { return cb(); }","","    // Need to use an internal function not tied to the executor to avoid deadlock","    var cursor = new Cursor(self, query);","    cursor.limit(1)._exec(function (err, docs) {","      if (err) { return callback(err); }","      if (docs.length === 1) {","        return cb();","      } else {","        var toBeInserted;","","        try {","          model.checkObject(updateQuery);","          // updateQuery is a simple object with no modifier, use it as the document to insert","          toBeInserted = updateQuery;","        } catch (e) {","          // updateQuery contains modifiers, use the find query as the base,","          // strip it from all operators and update it according to updateQuery","          try {","            toBeInserted = model.modify(model.deepCopy(query, true), updateQuery);","          } catch (err) {","            return callback(err);","          }","        }","","        return self._insert(toBeInserted, function (err, newDoc) {","          if (err) { return callback(err); }","          return callback(null, 1, newDoc, true);","        });","      }","    });","  }","  , function () {   // Perform the update","    var modifiedDoc , modifications = [], createdAt;","","    self.getCandidates(query, function (err, candidates) {","      if (err) { return callback(err); }","","      // Preparing update (if an error is thrown here neither the datafile nor","      // the in-memory indexes are affected)","      try {","        for (i = 0; i < candidates.length; i += 1) {","          if (model.match(candidates[i], query) && (multi || numReplaced === 0)) {","            numReplaced += 1;","            if (self.timestampData) { createdAt = candidates[i].createdAt; }","            modifiedDoc = model.modify(candidates[i], updateQuery);","            if (self.timestampData) {","              modifiedDoc.createdAt = createdAt;","              modifiedDoc.updatedAt = new Date();","            }","            modifications.push({ oldDoc: candidates[i], newDoc: modifiedDoc });","          }","        }","      } catch (err) {","        return callback(err);","      }","","      // Change the docs in memory","      try {","        self.updateIndexes(modifications);","      } catch (err) {","        return callback(err);","      }","","      // Update the datafile","      var updatedDocs = _.pluck(modifications, 'newDoc');","      self.persistence.persistNewState(updatedDocs, function (err) {","        if (err) { return callback(err); }","        if (!options.returnUpdatedDocs) {","          return callback(null, numReplaced);","        } else {","          var updatedDocsDC = [];","          updatedDocs.forEach(function (doc) { updatedDocsDC.push(model.deepCopy(doc)); });","          if (! multi) { updatedDocsDC = updatedDocsDC[0]; }","          return callback(null, numReplaced, updatedDocsDC);","        }","      });","    });","  }]);","};","","Datastore.prototype.update = function () {","  this.executor.push({ this: this, fn: this._update, arguments: arguments });","};","","","/**"," * Remove all docs matching the query"," * For now very naive implementation (similar to update)"," * @param {Object} query"," * @param {Object} options Optional options"," *                 options.multi If true, can update multiple documents (defaults to false)"," * @param {Function} cb Optional callback, signature: err, numRemoved"," *"," * @api private Use Datastore.remove which has the same signature"," */","Datastore.prototype._remove = function (query, options, cb) {","  var callback","    , self = this, numRemoved = 0, removedDocs = [], multi","    ;","","  if (typeof options === 'function') { cb = options; options = {}; }","  callback = cb || function () {};","  multi = options.multi !== undefined ? options.multi : false;","","  this.getCandidates(query, true, function (err, candidates) {","    if (err) { return callback(err); }","","    try {","      candidates.forEach(function (d) {","        if (model.match(d, query) && (multi || numRemoved === 0)) {","          numRemoved += 1;","          removedDocs.push({ $$deleted: true, _id: d._id });","          self.removeFromIndexes(d);","        }","      });","    } catch (err) { return callback(err); }","","    self.persistence.persistNewState(removedDocs, function (err) {","      if (err) { return callback(err); }","      return callback(null, numRemoved);","    });","  });","};","","Datastore.prototype.remove = function () {","  this.executor.push({ this: this, fn: this._remove, arguments: arguments });","};","","","","module.exports = Datastore;",""],"l":{"1":1,"29":1,"30":0,"33":0,"34":0,"35":0,"37":0,"38":0,"39":0,"40":0,"41":0,"45":0,"46":0,"47":0,"49":0,"53":0,"56":0,"64":0,"65":0,"70":0,"71":0,"72":0,"76":0,"77":0,"81":1,"87":1,"88":0,"95":1,"96":0,"103":1,"104":0,"106":0,"107":0,"122":1,"123":0,"126":0,"128":0,"129":0,"130":0,"131":0,"133":0,"135":0,"136":0,"138":0,"139":0,"141":0,"142":0,"146":0,"147":0,"148":0,"158":1,"159":0,"161":0,"163":0,"164":0,"165":0,"173":1,"174":0,"178":0,"179":0,"180":0,"182":0,"183":0,"184":0,"189":0,"190":0,"191":0,"194":0,"202":1,"203":0,"205":0,"206":0,"216":1,"217":0,"221":0,"222":0,"223":0,"225":0,"226":0,"227":0,"232":0,"233":0,"234":0,"237":0,"255":1,"256":0,"260":0,"261":0,"262":0,"265":0,"269":0,"270":0,"271":0,"272":0,"275":0,"276":0,"277":0,"281":0,"282":0,"283":0,"284":0,"287":0,"288":0,"289":0,"293":0,"294":0,"295":0,"296":0,"299":0,"300":0,"301":0,"305":0,"309":0,"311":0,"313":0,"314":0,"315":0,"316":0,"317":0,"320":0,"323":0,"324":0,"325":0,"326":0,"329":0,"341":1,"342":0,"346":0,"347":0,"348":0,"350":0,"353":0,"354":0,"355":0,"362":1,"363":0,"365":0,"366":0,"368":0,"376":1,"377":0,"379":0,"380":0,"381":0,"383":0,"384":0,"385":0,"386":0,"387":0,"388":0,"391":0,"398":1,"399":0,"400":0,"402":0,"411":1,"412":0,"414":0,"415":0,"416":0,"418":0,"419":0,"420":0,"424":0,"425":0,"426":0,"429":0,"433":1,"434":0,"442":1,"443":0,"444":0,"445":0,"448":0,"449":0,"451":0,"462":1,"463":0,"465":0,"467":0,"469":0,"470":0,"471":0,"473":0,"476":0,"477":0,"479":0,"481":0,"482":0,"484":0,"487":0,"488":0,"489":0,"491":0,"501":1,"502":0,"504":0,"506":0,"508":0,"509":0,"510":0,"512":0,"515":0,"516":0,"517":0,"518":0,"520":0,"524":0,"525":0,"526":0,"528":0,"558":1,"559":0,"566":0,"567":0,"568":0,"569":0,"571":0,"573":0,"576":0,"577":0,"578":0,"579":0,"580":0,"582":0,"584":0,"585":0,"587":0,"591":0,"592":0,"594":0,"598":0,"599":0,"600":0,"606":0,"608":0,"609":0,"613":0,"614":0,"615":0,"616":0,"617":0,"618":0,"619":0,"620":0,"621":0,"623":0,"627":0,"631":0,"632":0,"634":0,"638":0,"639":0,"640":0,"641":0,"642":0,"644":0,"645":0,"646":0,"647":0,"654":1,"655":0,"669":1,"670":0,"674":0,"675":0,"676":0,"678":0,"679":0,"681":0,"682":0,"683":0,"684":0,"685":0,"686":0,"689":0,"691":0,"692":0,"693":0,"698":1,"699":0,"704":1}},"/home/travis/build/npmtest/node-npmtest-nedb/nedb/lib/customUtils.js":{"path":"/home/travis/build/npmtest/node-npmtest-nedb/nedb/lib/customUtils.js","s":{"1":1,"2":1,"3":0,"4":1},"b":{},"f":{"1":0},"fnMap":{"1":{"name":"uid","line":12,"loc":{"start":{"line":12,"column":0},"end":{"line":12,"column":19}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":2,"column":3}},"2":{"start":{"line":12,"column":0},"end":{"line":17,"column":1}},"3":{"start":{"line":13,"column":2},"end":{"line":16,"column":19}},"4":{"start":{"line":21,"column":0},"end":{"line":21,"column":25}}},"branchMap":{},"code":["var crypto = require('crypto')","  ;","","/**"," * Return a random alphanumerical string of length len"," * There is a very small probability (less than 1/1,000,000) for the length to be less than len"," * (il the base64 conversion yields too many pluses and slashes) but"," * that's not an issue here"," * The probability of a collision is extremely small (need 3*10^12 documents to have one chance in a million of a collision)"," * See http://en.wikipedia.org/wiki/Birthday_problem"," */","function uid (len) {","  return crypto.randomBytes(Math.ceil(Math.max(8, len * 2)))","    .toString('base64')","    .replace(/[+\\/]/g, '')","    .slice(0, len);","}","","","// Interface","module.exports.uid = uid;","",""],"l":{"1":1,"12":1,"13":0,"21":1}},"/home/travis/build/npmtest/node-npmtest-nedb/nedb/lib/model.js":{"path":"/home/travis/build/npmtest/node-npmtest-nedb/nedb/lib/model.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":1,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":1,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":1,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":1,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":1,"55":0,"56":1,"57":0,"58":0,"59":0,"60":0,"61":0,"62":1,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":1,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":1,"107":0,"108":1,"109":0,"110":1,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":1,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":1,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":1,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":1,"174":0,"175":0,"176":0,"177":0,"178":0,"179":0,"180":0,"181":1,"182":0,"183":0,"184":0,"185":0,"186":1,"187":0,"188":0,"189":0,"190":0,"191":1,"192":9,"193":0,"194":0,"195":0,"196":0,"197":0,"198":0,"199":0,"200":0,"201":1,"202":9,"203":1,"204":0,"205":0,"206":0,"207":0,"208":0,"209":0,"210":0,"211":0,"212":0,"213":0,"214":0,"215":0,"216":0,"217":0,"218":0,"219":0,"220":0,"221":0,"222":0,"223":0,"224":0,"225":0,"226":0,"227":0,"228":0,"229":1,"230":0,"231":0,"232":0,"233":0,"234":0,"235":0,"236":0,"237":0,"238":0,"239":0,"240":0,"241":0,"242":0,"243":0,"244":0,"245":0,"246":1,"247":0,"248":0,"249":0,"250":0,"251":0,"252":0,"253":0,"254":0,"255":0,"256":0,"257":0,"258":0,"259":0,"260":0,"261":0,"262":0,"263":0,"264":0,"265":0,"266":1,"267":0,"268":0,"269":0,"270":0,"271":0,"272":1,"273":0,"274":1,"275":0,"276":1,"277":0,"278":1,"279":0,"280":1,"281":0,"282":0,"283":0,"284":1,"285":0,"286":0,"287":0,"288":0,"289":0,"290":0,"291":0,"292":1,"293":0,"294":0,"295":0,"296":1,"297":0,"298":0,"299":0,"300":0,"301":0,"302":1,"303":0,"304":0,"305":0,"306":0,"307":0,"308":0,"309":1,"310":0,"311":0,"312":0,"313":0,"314":0,"315":1,"316":0,"317":0,"318":0,"319":0,"320":0,"321":0,"322":0,"323":0,"324":0,"325":1,"326":1,"327":1,"328":0,"329":0,"330":0,"331":0,"332":0,"333":0,"334":0,"335":1,"336":0,"337":0,"338":0,"339":0,"340":0,"341":0,"342":0,"343":1,"344":0,"345":1,"346":0,"347":0,"348":0,"349":0,"350":0,"351":0,"352":0,"353":1,"354":0,"355":0,"356":0,"357":0,"358":0,"359":0,"360":0,"361":0,"362":0,"363":0,"364":0,"365":0,"366":0,"367":0,"368":0,"369":1,"370":0,"371":0,"372":0,"373":0,"374":0,"375":0,"376":0,"377":0,"378":0,"379":0,"380":0,"381":0,"382":0,"383":0,"384":0,"385":0,"386":0,"387":0,"388":0,"389":0,"390":0,"391":0,"392":0,"393":0,"394":0,"395":0,"396":0,"397":0,"398":0,"399":0,"400":0,"401":0,"402":0,"403":1,"404":1,"405":1,"406":1,"407":1,"408":1,"409":1,"410":1,"411":1,"412":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0,0,0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0,0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0,0,0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0,0],"24":[0,0,0,0,0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,0],"48":[0,0],"49":[0,0],"50":[0,0],"51":[0,0],"52":[0,0],"53":[0,0],"54":[0,0],"55":[0,0],"56":[0,0],"57":[0,0],"58":[0,0],"59":[0,0],"60":[0,0],"61":[0,0,0,0],"62":[0,0],"63":[0,0,0],"64":[0,0],"65":[0,0,0],"66":[0,0],"67":[0,0],"68":[0,0],"69":[0,0],"70":[0,0],"71":[0,0],"72":[0,0],"73":[0,0],"74":[0,0],"75":[0,0,0],"76":[0,0],"77":[0,0],"78":[0,0],"79":[0,0],"80":[0,0],"81":[0,0],"82":[0,0],"83":[0,0],"84":[0,0],"85":[0,0],"86":[0,0],"87":[0,0],"88":[0,0],"89":[0,0],"90":[0,0],"91":[0,0],"92":[0,0],"93":[0,0],"94":[0,0],"95":[0,0],"96":[0,0],"97":[0,0],"98":[0,0],"99":[0,0],"100":[0,0],"101":[0,0],"102":[0,0],"103":[0,0],"104":[0,0],"105":[0,0],"106":[0,0],"107":[0,0],"108":[0,0],"109":[0,0],"110":[0,0],"111":[0,0],"112":[0,0],"113":[0,0,0,0,0,0,0,0],"114":[0,0],"115":[0,0],"116":[0,0,0],"117":[0,0],"118":[0,0,0,0,0],"119":[0,0],"120":[0,0],"121":[0,0],"122":[0,0],"123":[0,0],"124":[0,0,0,0,0,0],"125":[0,0],"126":[0,0],"127":[0,0],"128":[0,0],"129":[0,0],"130":[0,0],"131":[0,0],"132":[0,0],"133":[0,0],"134":[0,0],"135":[0,0],"136":[0,0],"137":[0,0],"138":[0,0],"139":[0,0],"140":[0,0],"141":[0,0],"142":[0,0],"143":[0,0],"144":[0,0],"145":[0,0],"146":[0,0],"147":[0,0],"148":[0,0],"149":[0,0],"150":[0,0],"151":[0,0],"152":[0,0],"153":[0,0],"154":[0,0],"155":[0,0],"156":[0,0],"157":[0,0],"158":[0,0],"159":[0,0,0],"160":[0,0],"161":[0,0],"162":[0,0],"163":[0,0,0,0],"164":[0,0],"165":[0,0],"166":[0,0],"167":[0,0],"168":[0,0],"169":[0,0],"170":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":9,"29":0,"30":9,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0},"fnMap":{"1":{"name":"checkKey","line":26,"loc":{"start":{"line":26,"column":0},"end":{"line":26,"column":25}}},"2":{"name":"checkObject","line":45,"loc":{"start":{"line":45,"column":0},"end":{"line":45,"column":27}}},"3":{"name":"(anonymous_3)","line":47,"loc":{"start":{"line":47,"column":16},"end":{"line":47,"column":29}}},"4":{"name":"(anonymous_4)","line":53,"loc":{"start":{"line":53,"column":29},"end":{"line":53,"column":42}}},"5":{"name":"serialize","line":69,"loc":{"start":{"line":69,"column":0},"end":{"line":69,"column":25}}},"6":{"name":"(anonymous_6)","line":72,"loc":{"start":{"line":72,"column":28},"end":{"line":72,"column":44}}},"7":{"name":"deserialize","line":93,"loc":{"start":{"line":93,"column":0},"end":{"line":93,"column":31}}},"8":{"name":"(anonymous_8)","line":94,"loc":{"start":{"line":94,"column":29},"end":{"line":94,"column":45}}},"9":{"name":"deepCopy","line":109,"loc":{"start":{"line":109,"column":0},"end":{"line":109,"column":36}}},"10":{"name":"(anonymous_10)","line":122,"loc":{"start":{"line":122,"column":16},"end":{"line":122,"column":29}}},"11":{"name":"(anonymous_11)","line":128,"loc":{"start":{"line":128,"column":29},"end":{"line":128,"column":42}}},"12":{"name":"isPrimitiveType","line":144,"loc":{"start":{"line":144,"column":0},"end":{"line":144,"column":31}}},"13":{"name":"compareNSB","line":159,"loc":{"start":{"line":159,"column":0},"end":{"line":159,"column":27}}},"14":{"name":"compareArrays","line":165,"loc":{"start":{"line":165,"column":0},"end":{"line":165,"column":30}}},"15":{"name":"compareThings","line":189,"loc":{"start":{"line":189,"column":0},"end":{"line":189,"column":47}}},"16":{"name":"(anonymous_16)","line":252,"loc":{"start":{"line":252,"column":33},"end":{"line":252,"column":62}}},"17":{"name":"(anonymous_17)","line":260,"loc":{"start":{"line":260,"column":35},"end":{"line":260,"column":64}}},"18":{"name":"(anonymous_18)","line":271,"loc":{"start":{"line":271,"column":34},"end":{"line":271,"column":63}}},"19":{"name":"(anonymous_19)","line":285,"loc":{"start":{"line":285,"column":24},"end":{"line":285,"column":37}}},"20":{"name":"(anonymous_20)","line":315,"loc":{"start":{"line":315,"column":38},"end":{"line":315,"column":67}}},"21":{"name":"(anonymous_21)","line":327,"loc":{"start":{"line":327,"column":24},"end":{"line":327,"column":37}}},"22":{"name":"(anonymous_22)","line":331,"loc":{"start":{"line":331,"column":23},"end":{"line":331,"column":36}}},"23":{"name":"(anonymous_23)","line":342,"loc":{"start":{"line":342,"column":33},"end":{"line":342,"column":62}}},"24":{"name":"(anonymous_24)","line":358,"loc":{"start":{"line":358,"column":34},"end":{"line":358,"column":63}}},"25":{"name":"(anonymous_25)","line":375,"loc":{"start":{"line":375,"column":33},"end":{"line":375,"column":62}}},"26":{"name":"(anonymous_26)","line":392,"loc":{"start":{"line":392,"column":33},"end":{"line":392,"column":62}}},"27":{"name":"(anonymous_27)","line":403,"loc":{"start":{"line":403,"column":33},"end":{"line":403,"column":62}}},"28":{"name":"createModifierFunction","line":412,"loc":{"start":{"line":412,"column":0},"end":{"line":412,"column":43}}},"29":{"name":"(anonymous_29)","line":413,"loc":{"start":{"line":413,"column":9},"end":{"line":413,"column":38}}},"30":{"name":"(anonymous_30)","line":429,"loc":{"start":{"line":429,"column":47},"end":{"line":429,"column":67}}},"31":{"name":"modify","line":437,"loc":{"start":{"line":437,"column":0},"end":{"line":437,"column":35}}},"32":{"name":"(anonymous_32)","line":439,"loc":{"start":{"line":439,"column":31},"end":{"line":439,"column":47}}},"33":{"name":"(anonymous_33)","line":440,"loc":{"start":{"line":440,"column":46},"end":{"line":440,"column":59}}},"34":{"name":"(anonymous_34)","line":458,"loc":{"start":{"line":458,"column":22},"end":{"line":458,"column":35}}},"35":{"name":"(anonymous_35)","line":470,"loc":{"start":{"line":470,"column":19},"end":{"line":470,"column":32}}},"36":{"name":"getDotValue","line":493,"loc":{"start":{"line":493,"column":0},"end":{"line":493,"column":34}}},"37":{"name":"areThingsEqual","line":528,"loc":{"start":{"line":528,"column":0},"end":{"line":528,"column":31}}},"38":{"name":"areComparable","line":563,"loc":{"start":{"line":563,"column":0},"end":{"line":563,"column":30}}},"39":{"name":"(anonymous_39)","line":580,"loc":{"start":{"line":580,"column":26},"end":{"line":580,"column":42}}},"40":{"name":"(anonymous_40)","line":584,"loc":{"start":{"line":584,"column":27},"end":{"line":584,"column":43}}},"41":{"name":"(anonymous_41)","line":588,"loc":{"start":{"line":588,"column":26},"end":{"line":588,"column":42}}},"42":{"name":"(anonymous_42)","line":592,"loc":{"start":{"line":592,"column":27},"end":{"line":592,"column":43}}},"43":{"name":"(anonymous_43)","line":596,"loc":{"start":{"line":596,"column":26},"end":{"line":596,"column":42}}},"44":{"name":"(anonymous_44)","line":601,"loc":{"start":{"line":601,"column":26},"end":{"line":601,"column":42}}},"45":{"name":"(anonymous_45)","line":613,"loc":{"start":{"line":613,"column":27},"end":{"line":613,"column":43}}},"46":{"name":"(anonymous_46)","line":619,"loc":{"start":{"line":619,"column":29},"end":{"line":619,"column":45}}},"47":{"name":"(anonymous_47)","line":629,"loc":{"start":{"line":629,"column":30},"end":{"line":629,"column":55}}},"48":{"name":"(anonymous_48)","line":644,"loc":{"start":{"line":644,"column":28},"end":{"line":644,"column":50}}},"49":{"name":"(anonymous_49)","line":650,"loc":{"start":{"line":650,"column":33},"end":{"line":650,"column":55}}},"50":{"name":"(anonymous_50)","line":671,"loc":{"start":{"line":671,"column":23},"end":{"line":671,"column":45}}},"51":{"name":"(anonymous_51)","line":689,"loc":{"start":{"line":689,"column":24},"end":{"line":689,"column":46}}},"52":{"name":"(anonymous_52)","line":707,"loc":{"start":{"line":707,"column":24},"end":{"line":707,"column":46}}},"53":{"name":"(anonymous_53)","line":717,"loc":{"start":{"line":717,"column":26},"end":{"line":717,"column":45}}},"54":{"name":"match","line":734,"loc":{"start":{"line":734,"column":0},"end":{"line":734,"column":28}}},"55":{"name":"matchQueryPart","line":766,"loc":{"start":{"line":766,"column":0},"end":{"line":766,"column":69}}},"56":{"name":"(anonymous_56)","line":796,"loc":{"start":{"line":796,"column":29},"end":{"line":796,"column":45}}},"57":{"name":"(anonymous_57)","line":797,"loc":{"start":{"line":797,"column":44},"end":{"line":797,"column":57}}}},"statementMap":{"1":{"start":{"line":8,"column":0},"end":{"line":15,"column":3}},"2":{"start":{"line":26,"column":0},"end":{"line":38,"column":1}},"3":{"start":{"line":27,"column":2},"end":{"line":29,"column":3}},"4":{"start":{"line":28,"column":4},"end":{"line":28,"column":21}},"5":{"start":{"line":31,"column":2},"end":{"line":33,"column":3}},"6":{"start":{"line":32,"column":4},"end":{"line":32,"column":69}},"7":{"start":{"line":35,"column":2},"end":{"line":37,"column":3}},"8":{"start":{"line":36,"column":4},"end":{"line":36,"column":54}},"9":{"start":{"line":45,"column":0},"end":{"line":58,"column":1}},"10":{"start":{"line":46,"column":2},"end":{"line":50,"column":3}},"11":{"start":{"line":47,"column":4},"end":{"line":49,"column":7}},"12":{"start":{"line":48,"column":6},"end":{"line":48,"column":21}},"13":{"start":{"line":52,"column":2},"end":{"line":57,"column":3}},"14":{"start":{"line":53,"column":4},"end":{"line":56,"column":7}},"15":{"start":{"line":54,"column":6},"end":{"line":54,"column":26}},"16":{"start":{"line":55,"column":6},"end":{"line":55,"column":26}},"17":{"start":{"line":69,"column":0},"end":{"line":86,"column":1}},"18":{"start":{"line":70,"column":2},"end":{"line":70,"column":10}},"19":{"start":{"line":72,"column":2},"end":{"line":83,"column":5}},"20":{"start":{"line":73,"column":4},"end":{"line":73,"column":19}},"21":{"start":{"line":75,"column":4},"end":{"line":75,"column":46}},"22":{"start":{"line":75,"column":27},"end":{"line":75,"column":44}},"23":{"start":{"line":76,"column":4},"end":{"line":76,"column":36}},"24":{"start":{"line":76,"column":22},"end":{"line":76,"column":34}},"25":{"start":{"line":80,"column":4},"end":{"line":80,"column":88}},"26":{"start":{"line":80,"column":49},"end":{"line":80,"column":86}},"27":{"start":{"line":82,"column":4},"end":{"line":82,"column":13}},"28":{"start":{"line":85,"column":2},"end":{"line":85,"column":13}},"29":{"start":{"line":93,"column":0},"end":{"line":101,"column":1}},"30":{"start":{"line":94,"column":2},"end":{"line":100,"column":5}},"31":{"start":{"line":95,"column":4},"end":{"line":95,"column":47}},"32":{"start":{"line":95,"column":26},"end":{"line":95,"column":45}},"33":{"start":{"line":96,"column":4},"end":{"line":96,"column":109}},"34":{"start":{"line":96,"column":98},"end":{"line":96,"column":107}},"35":{"start":{"line":97,"column":4},"end":{"line":97,"column":43}},"36":{"start":{"line":97,"column":25},"end":{"line":97,"column":41}},"37":{"start":{"line":99,"column":4},"end":{"line":99,"column":13}},"38":{"start":{"line":109,"column":0},"end":{"line":137,"column":1}},"39":{"start":{"line":110,"column":2},"end":{"line":110,"column":10}},"40":{"start":{"line":112,"column":2},"end":{"line":118,"column":3}},"41":{"start":{"line":117,"column":4},"end":{"line":117,"column":15}},"42":{"start":{"line":120,"column":2},"end":{"line":124,"column":3}},"43":{"start":{"line":121,"column":4},"end":{"line":121,"column":13}},"44":{"start":{"line":122,"column":4},"end":{"line":122,"column":69}},"45":{"start":{"line":122,"column":31},"end":{"line":122,"column":65}},"46":{"start":{"line":123,"column":4},"end":{"line":123,"column":15}},"47":{"start":{"line":126,"column":2},"end":{"line":134,"column":3}},"48":{"start":{"line":127,"column":4},"end":{"line":127,"column":13}},"49":{"start":{"line":128,"column":4},"end":{"line":132,"column":7}},"50":{"start":{"line":129,"column":6},"end":{"line":131,"column":7}},"51":{"start":{"line":130,"column":8},"end":{"line":130,"column":46}},"52":{"start":{"line":133,"column":4},"end":{"line":133,"column":15}},"53":{"start":{"line":136,"column":2},"end":{"line":136,"column":19}},"54":{"start":{"line":144,"column":0},"end":{"line":151,"column":1}},"55":{"start":{"line":145,"column":2},"end":{"line":150,"column":26}},"56":{"start":{"line":159,"column":0},"end":{"line":163,"column":1}},"57":{"start":{"line":160,"column":2},"end":{"line":160,"column":27}},"58":{"start":{"line":160,"column":15},"end":{"line":160,"column":25}},"59":{"start":{"line":161,"column":2},"end":{"line":161,"column":26}},"60":{"start":{"line":161,"column":15},"end":{"line":161,"column":24}},"61":{"start":{"line":162,"column":2},"end":{"line":162,"column":11}},"62":{"start":{"line":165,"column":0},"end":{"line":176,"column":1}},"63":{"start":{"line":166,"column":2},"end":{"line":166,"column":14}},"64":{"start":{"line":168,"column":2},"end":{"line":172,"column":3}},"65":{"start":{"line":169,"column":4},"end":{"line":169,"column":37}},"66":{"start":{"line":171,"column":4},"end":{"line":171,"column":36}},"67":{"start":{"line":171,"column":22},"end":{"line":171,"column":34}},"68":{"start":{"line":175,"column":2},"end":{"line":175,"column":40}},"69":{"start":{"line":189,"column":0},"end":{"line":232,"column":1}},"70":{"start":{"line":190,"column":2},"end":{"line":191,"column":53}},"71":{"start":{"line":194,"column":2},"end":{"line":194,"column":59}},"72":{"start":{"line":194,"column":25},"end":{"line":194,"column":57}},"73":{"start":{"line":195,"column":2},"end":{"line":195,"column":58}},"74":{"start":{"line":195,"column":25},"end":{"line":195,"column":56}},"75":{"start":{"line":198,"column":2},"end":{"line":198,"column":49}},"76":{"start":{"line":198,"column":20},"end":{"line":198,"column":47}},"77":{"start":{"line":199,"column":2},"end":{"line":199,"column":48}},"78":{"start":{"line":199,"column":20},"end":{"line":199,"column":46}},"79":{"start":{"line":202,"column":2},"end":{"line":202,"column":86}},"80":{"start":{"line":202,"column":31},"end":{"line":202,"column":84}},"81":{"start":{"line":203,"column":2},"end":{"line":203,"column":85}},"82":{"start":{"line":203,"column":31},"end":{"line":203,"column":83}},"83":{"start":{"line":206,"column":2},"end":{"line":206,"column":90}},"84":{"start":{"line":206,"column":31},"end":{"line":206,"column":88}},"85":{"start":{"line":207,"column":2},"end":{"line":207,"column":89}},"86":{"start":{"line":207,"column":31},"end":{"line":207,"column":87}},"87":{"start":{"line":210,"column":2},"end":{"line":210,"column":88}},"88":{"start":{"line":210,"column":32},"end":{"line":210,"column":86}},"89":{"start":{"line":211,"column":2},"end":{"line":211,"column":87}},"90":{"start":{"line":211,"column":32},"end":{"line":211,"column":85}},"91":{"start":{"line":214,"column":2},"end":{"line":214,"column":92}},"92":{"start":{"line":214,"column":24},"end":{"line":214,"column":90}},"93":{"start":{"line":215,"column":2},"end":{"line":215,"column":91}},"94":{"start":{"line":215,"column":24},"end":{"line":215,"column":89}},"95":{"start":{"line":218,"column":2},"end":{"line":218,"column":77}},"96":{"start":{"line":218,"column":25},"end":{"line":218,"column":75}},"97":{"start":{"line":219,"column":2},"end":{"line":219,"column":76}},"98":{"start":{"line":219,"column":25},"end":{"line":219,"column":74}},"99":{"start":{"line":222,"column":2},"end":{"line":222,"column":32}},"100":{"start":{"line":223,"column":2},"end":{"line":223,"column":32}},"101":{"start":{"line":225,"column":2},"end":{"line":229,"column":3}},"102":{"start":{"line":226,"column":4},"end":{"line":226,"column":51}},"103":{"start":{"line":228,"column":4},"end":{"line":228,"column":36}},"104":{"start":{"line":228,"column":22},"end":{"line":228,"column":34}},"105":{"start":{"line":231,"column":2},"end":{"line":231,"column":48}},"106":{"start":{"line":252,"column":0},"end":{"line":254,"column":2}},"107":{"start":{"line":253,"column":2},"end":{"line":253,"column":21}},"108":{"start":{"line":260,"column":0},"end":{"line":262,"column":2}},"109":{"start":{"line":261,"column":2},"end":{"line":261,"column":20}},"110":{"start":{"line":271,"column":0},"end":{"line":307,"column":2}},"111":{"start":{"line":273,"column":2},"end":{"line":273,"column":54}},"112":{"start":{"line":273,"column":36},"end":{"line":273,"column":52}},"113":{"start":{"line":275,"column":2},"end":{"line":275,"column":99}},"114":{"start":{"line":275,"column":35},"end":{"line":275,"column":97}},"115":{"start":{"line":277,"column":2},"end":{"line":279,"column":3}},"116":{"start":{"line":278,"column":4},"end":{"line":278,"column":21}},"117":{"start":{"line":281,"column":2},"end":{"line":306,"column":3}},"118":{"start":{"line":282,"column":4},"end":{"line":282,"column":196}},"119":{"start":{"line":282,"column":109},"end":{"line":282,"column":194}},"120":{"start":{"line":283,"column":4},"end":{"line":283,"column":89}},"121":{"start":{"line":283,"column":38},"end":{"line":283,"column":87}},"122":{"start":{"line":285,"column":4},"end":{"line":287,"column":7}},"123":{"start":{"line":286,"column":6},"end":{"line":286,"column":25}},"124":{"start":{"line":289,"column":4},"end":{"line":289,"column":83}},"125":{"start":{"line":289,"column":74},"end":{"line":289,"column":81}},"126":{"start":{"line":291,"column":4},"end":{"line":303,"column":5}},"127":{"start":{"line":292,"column":6},"end":{"line":292,"column":22}},"128":{"start":{"line":294,"column":6},"end":{"line":294,"column":44}},"129":{"start":{"line":295,"column":6},"end":{"line":301,"column":7}},"130":{"start":{"line":296,"column":8},"end":{"line":296,"column":46}},"131":{"start":{"line":297,"column":8},"end":{"line":297,"column":16}},"132":{"start":{"line":298,"column":13},"end":{"line":301,"column":7}},"133":{"start":{"line":299,"column":8},"end":{"line":299,"column":18}},"134":{"start":{"line":300,"column":8},"end":{"line":300,"column":40}},"135":{"start":{"line":302,"column":6},"end":{"line":302,"column":48}},"136":{"start":{"line":305,"column":4},"end":{"line":305,"column":27}},"137":{"start":{"line":315,"column":0},"end":{"line":336,"column":2}},"138":{"start":{"line":316,"column":2},"end":{"line":316,"column":22}},"139":{"start":{"line":319,"column":2},"end":{"line":319,"column":54}},"140":{"start":{"line":319,"column":36},"end":{"line":319,"column":52}},"141":{"start":{"line":321,"column":2},"end":{"line":321,"column":103}},"142":{"start":{"line":321,"column":35},"end":{"line":321,"column":101}},"143":{"start":{"line":323,"column":2},"end":{"line":335,"column":3}},"144":{"start":{"line":324,"column":4},"end":{"line":324,"column":112}},"145":{"start":{"line":324,"column":41},"end":{"line":324,"column":110}},"146":{"start":{"line":325,"column":4},"end":{"line":325,"column":89}},"147":{"start":{"line":325,"column":38},"end":{"line":325,"column":87}},"148":{"start":{"line":327,"column":4},"end":{"line":329,"column":7}},"149":{"start":{"line":328,"column":6},"end":{"line":328,"column":57}},"150":{"start":{"line":331,"column":4},"end":{"line":333,"column":7}},"151":{"start":{"line":332,"column":6},"end":{"line":332,"column":62}},"152":{"start":{"line":332,"column":43},"end":{"line":332,"column":60}},"153":{"start":{"line":334,"column":4},"end":{"line":334,"column":45}},"154":{"start":{"line":334,"column":20},"end":{"line":334,"column":43}},"155":{"start":{"line":342,"column":0},"end":{"line":352,"column":2}},"156":{"start":{"line":343,"column":2},"end":{"line":343,"column":100}},"157":{"start":{"line":343,"column":35},"end":{"line":343,"column":98}},"158":{"start":{"line":344,"column":2},"end":{"line":344,"column":106}},"159":{"start":{"line":344,"column":35},"end":{"line":344,"column":104}},"160":{"start":{"line":345,"column":2},"end":{"line":345,"column":30}},"161":{"start":{"line":345,"column":21},"end":{"line":345,"column":28}},"162":{"start":{"line":347,"column":2},"end":{"line":351,"column":3}},"163":{"start":{"line":348,"column":4},"end":{"line":348,"column":60}},"164":{"start":{"line":350,"column":4},"end":{"line":350,"column":37}},"165":{"start":{"line":358,"column":0},"end":{"line":369,"column":2}},"166":{"start":{"line":359,"column":2},"end":{"line":359,"column":13}},"167":{"start":{"line":361,"column":2},"end":{"line":361,"column":101}},"168":{"start":{"line":361,"column":35},"end":{"line":361,"column":99}},"169":{"start":{"line":363,"column":2},"end":{"line":363,"column":19}},"170":{"start":{"line":364,"column":2},"end":{"line":368,"column":3}},"171":{"start":{"line":365,"column":4},"end":{"line":367,"column":5}},"172":{"start":{"line":366,"column":6},"end":{"line":366,"column":23}},"173":{"start":{"line":375,"column":0},"end":{"line":387,"column":2}},"174":{"start":{"line":376,"column":2},"end":{"line":376,"column":82}},"175":{"start":{"line":376,"column":35},"end":{"line":376,"column":80}},"176":{"start":{"line":378,"column":2},"end":{"line":386,"column":3}},"177":{"start":{"line":379,"column":4},"end":{"line":383,"column":5}},"178":{"start":{"line":380,"column":6},"end":{"line":380,"column":25}},"179":{"start":{"line":382,"column":6},"end":{"line":382,"column":74}},"180":{"start":{"line":385,"column":4},"end":{"line":385,"column":24}},"181":{"start":{"line":392,"column":0},"end":{"line":398,"column":2}},"182":{"start":{"line":393,"column":2},"end":{"line":397,"column":3}},"183":{"start":{"line":394,"column":4},"end":{"line":394,"column":23}},"184":{"start":{"line":395,"column":9},"end":{"line":397,"column":3}},"185":{"start":{"line":396,"column":4},"end":{"line":396,"column":23}},"186":{"start":{"line":403,"column":0},"end":{"line":409,"column":2}},"187":{"start":{"line":404,"column":2},"end":{"line":408,"column":3}},"188":{"start":{"line":405,"column":4},"end":{"line":405,"column":23}},"189":{"start":{"line":406,"column":9},"end":{"line":408,"column":3}},"190":{"start":{"line":407,"column":4},"end":{"line":407,"column":23}},"191":{"start":{"line":412,"column":0},"end":{"line":426,"column":1}},"192":{"start":{"line":413,"column":2},"end":{"line":425,"column":4}},"193":{"start":{"line":414,"column":4},"end":{"line":414,"column":74}},"194":{"start":{"line":416,"column":4},"end":{"line":424,"column":5}},"195":{"start":{"line":417,"column":6},"end":{"line":417,"column":61}},"196":{"start":{"line":419,"column":6},"end":{"line":422,"column":7}},"197":{"start":{"line":420,"column":8},"end":{"line":420,"column":46}},"198":{"start":{"line":420,"column":37},"end":{"line":420,"column":44}},"199":{"start":{"line":421,"column":8},"end":{"line":421,"column":32}},"200":{"start":{"line":423,"column":6},"end":{"line":423,"column":82}},"201":{"start":{"line":429,"column":0},"end":{"line":431,"column":3}},"202":{"start":{"line":430,"column":2},"end":{"line":430,"column":65}},"203":{"start":{"line":437,"column":0},"end":{"line":481,"column":1}},"204":{"start":{"line":438,"column":2},"end":{"line":442,"column":5}},"205":{"start":{"line":439,"column":49},"end":{"line":439,"column":64}},"206":{"start":{"line":440,"column":61},"end":{"line":440,"column":78}},"207":{"start":{"line":444,"column":2},"end":{"line":444,"column":123}},"208":{"start":{"line":444,"column":67},"end":{"line":444,"column":121}},"209":{"start":{"line":446,"column":2},"end":{"line":448,"column":3}},"210":{"start":{"line":447,"column":4},"end":{"line":447,"column":66}},"211":{"start":{"line":450,"column":2},"end":{"line":474,"column":3}},"212":{"start":{"line":452,"column":4},"end":{"line":452,"column":35}},"213":{"start":{"line":453,"column":4},"end":{"line":453,"column":25}},"214":{"start":{"line":456,"column":4},"end":{"line":456,"column":29}},"215":{"start":{"line":457,"column":4},"end":{"line":457,"column":27}},"216":{"start":{"line":458,"column":4},"end":{"line":473,"column":7}},"217":{"start":{"line":459,"column":6},"end":{"line":459,"column":15}},"218":{"start":{"line":461,"column":6},"end":{"line":461,"column":78}},"219":{"start":{"line":461,"column":35},"end":{"line":461,"column":76}},"220":{"start":{"line":465,"column":6},"end":{"line":467,"column":7}},"221":{"start":{"line":466,"column":8},"end":{"line":466,"column":75}},"222":{"start":{"line":469,"column":6},"end":{"line":469,"column":41}},"223":{"start":{"line":470,"column":6},"end":{"line":472,"column":9}},"224":{"start":{"line":471,"column":8},"end":{"line":471,"column":59}},"225":{"start":{"line":477,"column":2},"end":{"line":477,"column":22}},"226":{"start":{"line":479,"column":2},"end":{"line":479,"column":87}},"227":{"start":{"line":479,"column":32},"end":{"line":479,"column":85}},"228":{"start":{"line":480,"column":2},"end":{"line":480,"column":16}},"229":{"start":{"line":493,"column":0},"end":{"line":519,"column":1}},"230":{"start":{"line":494,"column":2},"end":{"line":495,"column":14}},"231":{"start":{"line":497,"column":2},"end":{"line":497,"column":33}},"232":{"start":{"line":497,"column":14},"end":{"line":497,"column":31}},"233":{"start":{"line":499,"column":2},"end":{"line":499,"column":46}},"234":{"start":{"line":499,"column":33},"end":{"line":499,"column":44}},"235":{"start":{"line":501,"column":2},"end":{"line":501,"column":61}},"236":{"start":{"line":501,"column":33},"end":{"line":501,"column":59}},"237":{"start":{"line":503,"column":2},"end":{"line":518,"column":3}},"238":{"start":{"line":505,"column":4},"end":{"line":505,"column":36}},"239":{"start":{"line":506,"column":4},"end":{"line":508,"column":5}},"240":{"start":{"line":507,"column":6},"end":{"line":507,"column":68}},"241":{"start":{"line":511,"column":4},"end":{"line":511,"column":23}},"242":{"start":{"line":512,"column":4},"end":{"line":514,"column":5}},"243":{"start":{"line":513,"column":7},"end":{"line":513,"column":74}},"244":{"start":{"line":515,"column":4},"end":{"line":515,"column":16}},"245":{"start":{"line":517,"column":4},"end":{"line":517,"column":64}},"246":{"start":{"line":528,"column":0},"end":{"line":557,"column":1}},"247":{"start":{"line":529,"column":2},"end":{"line":529,"column":24}},"248":{"start":{"line":532,"column":2},"end":{"line":533,"column":113}},"249":{"start":{"line":533,"column":96},"end":{"line":533,"column":111}},"250":{"start":{"line":536,"column":2},"end":{"line":536,"column":115}},"251":{"start":{"line":536,"column":42},"end":{"line":536,"column":113}},"252":{"start":{"line":540,"column":2},"end":{"line":540,"column":142}},"253":{"start":{"line":540,"column":127},"end":{"line":540,"column":140}},"254":{"start":{"line":544,"column":2},"end":{"line":549,"column":3}},"255":{"start":{"line":545,"column":4},"end":{"line":545,"column":27}},"256":{"start":{"line":546,"column":4},"end":{"line":546,"column":27}},"257":{"start":{"line":548,"column":4},"end":{"line":548,"column":17}},"258":{"start":{"line":551,"column":2},"end":{"line":551,"column":54}},"259":{"start":{"line":551,"column":39},"end":{"line":551,"column":52}},"260":{"start":{"line":552,"column":2},"end":{"line":555,"column":3}},"261":{"start":{"line":553,"column":4},"end":{"line":553,"column":57}},"262":{"start":{"line":553,"column":42},"end":{"line":553,"column":55}},"263":{"start":{"line":554,"column":4},"end":{"line":554,"column":68}},"264":{"start":{"line":554,"column":53},"end":{"line":554,"column":66}},"265":{"start":{"line":556,"column":2},"end":{"line":556,"column":14}},"266":{"start":{"line":563,"column":0},"end":{"line":572,"column":1}},"267":{"start":{"line":564,"column":2},"end":{"line":567,"column":3}},"268":{"start":{"line":566,"column":4},"end":{"line":566,"column":17}},"269":{"start":{"line":569,"column":2},"end":{"line":569,"column":46}},"270":{"start":{"line":569,"column":31},"end":{"line":569,"column":44}},"271":{"start":{"line":571,"column":2},"end":{"line":571,"column":14}},"272":{"start":{"line":580,"column":0},"end":{"line":582,"column":2}},"273":{"start":{"line":581,"column":2},"end":{"line":581,"column":38}},"274":{"start":{"line":584,"column":0},"end":{"line":586,"column":2}},"275":{"start":{"line":585,"column":2},"end":{"line":585,"column":39}},"276":{"start":{"line":588,"column":0},"end":{"line":590,"column":2}},"277":{"start":{"line":589,"column":2},"end":{"line":589,"column":38}},"278":{"start":{"line":592,"column":0},"end":{"line":594,"column":2}},"279":{"start":{"line":593,"column":2},"end":{"line":593,"column":39}},"280":{"start":{"line":596,"column":0},"end":{"line":599,"column":2}},"281":{"start":{"line":597,"column":2},"end":{"line":597,"column":39}},"282":{"start":{"line":597,"column":25},"end":{"line":597,"column":37}},"283":{"start":{"line":598,"column":2},"end":{"line":598,"column":31}},"284":{"start":{"line":601,"column":0},"end":{"line":611,"column":2}},"285":{"start":{"line":602,"column":2},"end":{"line":602,"column":8}},"286":{"start":{"line":604,"column":2},"end":{"line":604,"column":84}},"287":{"start":{"line":604,"column":26},"end":{"line":604,"column":82}},"288":{"start":{"line":606,"column":2},"end":{"line":608,"column":3}},"289":{"start":{"line":607,"column":4},"end":{"line":607,"column":49}},"290":{"start":{"line":607,"column":35},"end":{"line":607,"column":47}},"291":{"start":{"line":610,"column":2},"end":{"line":610,"column":15}},"292":{"start":{"line":613,"column":0},"end":{"line":617,"column":2}},"293":{"start":{"line":614,"column":2},"end":{"line":614,"column":85}},"294":{"start":{"line":614,"column":26},"end":{"line":614,"column":83}},"295":{"start":{"line":616,"column":2},"end":{"line":616,"column":40}},"296":{"start":{"line":619,"column":0},"end":{"line":627,"column":2}},"297":{"start":{"line":620,"column":2},"end":{"line":620,"column":99}},"298":{"start":{"line":620,"column":27},"end":{"line":620,"column":97}},"299":{"start":{"line":622,"column":2},"end":{"line":626,"column":3}},"300":{"start":{"line":623,"column":4},"end":{"line":623,"column":16}},"301":{"start":{"line":625,"column":4},"end":{"line":625,"column":21}},"302":{"start":{"line":629,"column":0},"end":{"line":641,"column":2}},"303":{"start":{"line":630,"column":2},"end":{"line":634,"column":3}},"304":{"start":{"line":631,"column":4},"end":{"line":631,"column":18}},"305":{"start":{"line":633,"column":4},"end":{"line":633,"column":19}},"306":{"start":{"line":636,"column":2},"end":{"line":640,"column":3}},"307":{"start":{"line":637,"column":4},"end":{"line":637,"column":18}},"308":{"start":{"line":639,"column":4},"end":{"line":639,"column":18}},"309":{"start":{"line":644,"column":0},"end":{"line":649,"column":2}},"310":{"start":{"line":645,"column":4},"end":{"line":645,"column":45}},"311":{"start":{"line":645,"column":30},"end":{"line":645,"column":43}},"312":{"start":{"line":646,"column":4},"end":{"line":646,"column":89}},"313":{"start":{"line":646,"column":27},"end":{"line":646,"column":87}},"314":{"start":{"line":648,"column":4},"end":{"line":648,"column":33}},"315":{"start":{"line":650,"column":0},"end":{"line":661,"column":2}},"316":{"start":{"line":651,"column":2},"end":{"line":651,"column":43}},"317":{"start":{"line":651,"column":28},"end":{"line":651,"column":41}},"318":{"start":{"line":652,"column":2},"end":{"line":652,"column":21}},"319":{"start":{"line":653,"column":2},"end":{"line":653,"column":21}},"320":{"start":{"line":654,"column":2},"end":{"line":659,"column":3}},"321":{"start":{"line":655,"column":4},"end":{"line":658,"column":5}},"322":{"start":{"line":656,"column":6},"end":{"line":656,"column":20}},"323":{"start":{"line":657,"column":6},"end":{"line":657,"column":12}},"324":{"start":{"line":660,"column":2},"end":{"line":660,"column":16}},"325":{"start":{"line":662,"column":0},"end":{"line":662,"column":38}},"326":{"start":{"line":663,"column":0},"end":{"line":663,"column":43}},"327":{"start":{"line":671,"column":0},"end":{"line":681,"column":2}},"328":{"start":{"line":672,"column":2},"end":{"line":672,"column":8}},"329":{"start":{"line":674,"column":2},"end":{"line":674,"column":86}},"330":{"start":{"line":674,"column":30},"end":{"line":674,"column":84}},"331":{"start":{"line":676,"column":2},"end":{"line":678,"column":3}},"332":{"start":{"line":677,"column":4},"end":{"line":677,"column":46}},"333":{"start":{"line":677,"column":32},"end":{"line":677,"column":44}},"334":{"start":{"line":680,"column":2},"end":{"line":680,"column":15}},"335":{"start":{"line":689,"column":0},"end":{"line":699,"column":2}},"336":{"start":{"line":690,"column":2},"end":{"line":690,"column":8}},"337":{"start":{"line":692,"column":2},"end":{"line":692,"column":87}},"338":{"start":{"line":692,"column":30},"end":{"line":692,"column":85}},"339":{"start":{"line":694,"column":2},"end":{"line":696,"column":3}},"340":{"start":{"line":695,"column":4},"end":{"line":695,"column":48}},"341":{"start":{"line":695,"column":33},"end":{"line":695,"column":46}},"342":{"start":{"line":698,"column":2},"end":{"line":698,"column":14}},"343":{"start":{"line":707,"column":0},"end":{"line":709,"column":2}},"344":{"start":{"line":708,"column":2},"end":{"line":708,"column":28}},"345":{"start":{"line":717,"column":0},"end":{"line":726,"column":2}},"346":{"start":{"line":718,"column":2},"end":{"line":718,"column":13}},"347":{"start":{"line":720,"column":2},"end":{"line":720,"column":88}},"348":{"start":{"line":720,"column":27},"end":{"line":720,"column":86}},"349":{"start":{"line":722,"column":2},"end":{"line":722,"column":24}},"350":{"start":{"line":723,"column":2},"end":{"line":723,"column":87}},"351":{"start":{"line":723,"column":30},"end":{"line":723,"column":85}},"352":{"start":{"line":725,"column":2},"end":{"line":725,"column":16}},"353":{"start":{"line":734,"column":0},"end":{"line":759,"column":1}},"354":{"start":{"line":735,"column":2},"end":{"line":735,"column":41}},"355":{"start":{"line":740,"column":2},"end":{"line":742,"column":3}},"356":{"start":{"line":741,"column":4},"end":{"line":741,"column":64}},"357":{"start":{"line":745,"column":2},"end":{"line":745,"column":33}},"358":{"start":{"line":746,"column":2},"end":{"line":756,"column":3}},"359":{"start":{"line":747,"column":4},"end":{"line":747,"column":28}},"360":{"start":{"line":748,"column":4},"end":{"line":748,"column":33}},"361":{"start":{"line":750,"column":4},"end":{"line":755,"column":5}},"362":{"start":{"line":751,"column":6},"end":{"line":751,"column":99}},"363":{"start":{"line":751,"column":41},"end":{"line":751,"column":97}},"364":{"start":{"line":752,"column":6},"end":{"line":752,"column":73}},"365":{"start":{"line":752,"column":58},"end":{"line":752,"column":71}},"366":{"start":{"line":754,"column":6},"end":{"line":754,"column":71}},"367":{"start":{"line":754,"column":56},"end":{"line":754,"column":69}},"368":{"start":{"line":758,"column":2},"end":{"line":758,"column":14}},"369":{"start":{"line":766,"column":0},"end":{"line":822,"column":1}},"370":{"start":{"line":767,"column":2},"end":{"line":768,"column":44}},"371":{"start":{"line":771,"column":2},"end":{"line":790,"column":3}},"372":{"start":{"line":773,"column":4},"end":{"line":775,"column":5}},"373":{"start":{"line":774,"column":6},"end":{"line":774,"column":61}},"374":{"start":{"line":778,"column":4},"end":{"line":783,"column":5}},"375":{"start":{"line":779,"column":6},"end":{"line":779,"column":37}},"376":{"start":{"line":780,"column":6},"end":{"line":782,"column":7}},"377":{"start":{"line":781,"column":8},"end":{"line":781,"column":106}},"378":{"start":{"line":781,"column":49},"end":{"line":781,"column":104}},"379":{"start":{"line":786,"column":4},"end":{"line":788,"column":5}},"380":{"start":{"line":787,"column":6},"end":{"line":787,"column":79}},"381":{"start":{"line":787,"column":65},"end":{"line":787,"column":77}},"382":{"start":{"line":789,"column":4},"end":{"line":789,"column":17}},"383":{"start":{"line":794,"column":2},"end":{"line":812,"column":3}},"384":{"start":{"line":795,"column":4},"end":{"line":795,"column":35}},"385":{"start":{"line":796,"column":4},"end":{"line":796,"column":66}},"386":{"start":{"line":796,"column":47},"end":{"line":796,"column":62}},"387":{"start":{"line":797,"column":4},"end":{"line":797,"column":80}},"388":{"start":{"line":797,"column":59},"end":{"line":797,"column":76}},"389":{"start":{"line":799,"column":4},"end":{"line":801,"column":5}},"390":{"start":{"line":800,"column":6},"end":{"line":800,"column":68}},"391":{"start":{"line":804,"column":4},"end":{"line":811,"column":5}},"392":{"start":{"line":805,"column":6},"end":{"line":809,"column":7}},"393":{"start":{"line":806,"column":8},"end":{"line":806,"column":105}},"394":{"start":{"line":806,"column":45},"end":{"line":806,"column":103}},"395":{"start":{"line":808,"column":8},"end":{"line":808,"column":91}},"396":{"start":{"line":808,"column":76},"end":{"line":808,"column":89}},"397":{"start":{"line":810,"column":6},"end":{"line":810,"column":18}},"398":{"start":{"line":815,"column":2},"end":{"line":815,"column":93}},"399":{"start":{"line":815,"column":35},"end":{"line":815,"column":91}},"400":{"start":{"line":819,"column":2},"end":{"line":819,"column":62}},"401":{"start":{"line":819,"column":47},"end":{"line":819,"column":60}},"402":{"start":{"line":821,"column":2},"end":{"line":821,"column":14}},"403":{"start":{"line":826,"column":0},"end":{"line":826,"column":37}},"404":{"start":{"line":827,"column":0},"end":{"line":827,"column":41}},"405":{"start":{"line":828,"column":0},"end":{"line":828,"column":35}},"406":{"start":{"line":829,"column":0},"end":{"line":829,"column":41}},"407":{"start":{"line":830,"column":0},"end":{"line":830,"column":49}},"408":{"start":{"line":831,"column":0},"end":{"line":831,"column":31}},"409":{"start":{"line":832,"column":0},"end":{"line":832,"column":41}},"410":{"start":{"line":833,"column":0},"end":{"line":833,"column":29}},"411":{"start":{"line":834,"column":0},"end":{"line":834,"column":47}},"412":{"start":{"line":835,"column":0},"end":{"line":835,"column":45}}},"branchMap":{"1":{"line":27,"type":"if","locations":[{"start":{"line":27,"column":2},"end":{"line":27,"column":2}},{"start":{"line":27,"column":2},"end":{"line":27,"column":2}}]},"2":{"line":31,"type":"if","locations":[{"start":{"line":31,"column":2},"end":{"line":31,"column":2}},{"start":{"line":31,"column":2},"end":{"line":31,"column":2}}]},"3":{"line":31,"type":"binary-expr","locations":[{"start":{"line":31,"column":6},"end":{"line":31,"column":18}},{"start":{"line":31,"column":22},"end":{"line":31,"column":64}},{"start":{"line":31,"column":68},"end":{"line":31,"column":102}},{"start":{"line":31,"column":106},"end":{"line":31,"column":131}},{"start":{"line":31,"column":135},"end":{"line":31,"column":160}}]},"4":{"line":31,"type":"binary-expr","locations":[{"start":{"line":31,"column":24},"end":{"line":31,"column":38}},{"start":{"line":31,"column":42},"end":{"line":31,"column":63}}]},"5":{"line":31,"type":"binary-expr","locations":[{"start":{"line":31,"column":70},"end":{"line":31,"column":87}},{"start":{"line":31,"column":91},"end":{"line":31,"column":101}}]},"6":{"line":35,"type":"if","locations":[{"start":{"line":35,"column":2},"end":{"line":35,"column":2}},{"start":{"line":35,"column":2},"end":{"line":35,"column":2}}]},"7":{"line":46,"type":"if","locations":[{"start":{"line":46,"column":2},"end":{"line":46,"column":2}},{"start":{"line":46,"column":2},"end":{"line":46,"column":2}}]},"8":{"line":52,"type":"if","locations":[{"start":{"line":52,"column":2},"end":{"line":52,"column":2}},{"start":{"line":52,"column":2},"end":{"line":52,"column":2}}]},"9":{"line":52,"type":"binary-expr","locations":[{"start":{"line":52,"column":6},"end":{"line":52,"column":29}},{"start":{"line":52,"column":33},"end":{"line":52,"column":45}}]},"10":{"line":75,"type":"if","locations":[{"start":{"line":75,"column":4},"end":{"line":75,"column":4}},{"start":{"line":75,"column":4},"end":{"line":75,"column":4}}]},"11":{"line":76,"type":"if","locations":[{"start":{"line":76,"column":4},"end":{"line":76,"column":4}},{"start":{"line":76,"column":4},"end":{"line":76,"column":4}}]},"12":{"line":80,"type":"if","locations":[{"start":{"line":80,"column":4},"end":{"line":80,"column":4}},{"start":{"line":80,"column":4},"end":{"line":80,"column":4}}]},"13":{"line":95,"type":"if","locations":[{"start":{"line":95,"column":4},"end":{"line":95,"column":4}},{"start":{"line":95,"column":4},"end":{"line":95,"column":4}}]},"14":{"line":96,"type":"if","locations":[{"start":{"line":96,"column":4},"end":{"line":96,"column":4}},{"start":{"line":96,"column":4},"end":{"line":96,"column":4}}]},"15":{"line":96,"type":"binary-expr","locations":[{"start":{"line":96,"column":8},"end":{"line":96,"column":29}},{"start":{"line":96,"column":33},"end":{"line":96,"column":54}},{"start":{"line":96,"column":58},"end":{"line":96,"column":80}},{"start":{"line":96,"column":84},"end":{"line":96,"column":94}}]},"16":{"line":97,"type":"if","locations":[{"start":{"line":97,"column":4},"end":{"line":97,"column":4}},{"start":{"line":97,"column":4},"end":{"line":97,"column":4}}]},"17":{"line":97,"type":"binary-expr","locations":[{"start":{"line":97,"column":8},"end":{"line":97,"column":9}},{"start":{"line":97,"column":13},"end":{"line":97,"column":21}}]},"18":{"line":112,"type":"if","locations":[{"start":{"line":112,"column":2},"end":{"line":112,"column":2}},{"start":{"line":112,"column":2},"end":{"line":112,"column":2}}]},"19":{"line":112,"type":"binary-expr","locations":[{"start":{"line":112,"column":7},"end":{"line":112,"column":31}},{"start":{"line":113,"column":7},"end":{"line":113,"column":30}},{"start":{"line":114,"column":7},"end":{"line":114,"column":30}},{"start":{"line":115,"column":7},"end":{"line":115,"column":19}},{"start":{"line":116,"column":8},"end":{"line":116,"column":24}}]},"20":{"line":120,"type":"if","locations":[{"start":{"line":120,"column":2},"end":{"line":120,"column":2}},{"start":{"line":120,"column":2},"end":{"line":120,"column":2}}]},"21":{"line":126,"type":"if","locations":[{"start":{"line":126,"column":2},"end":{"line":126,"column":2}},{"start":{"line":126,"column":2},"end":{"line":126,"column":2}}]},"22":{"line":129,"type":"if","locations":[{"start":{"line":129,"column":6},"end":{"line":129,"column":6}},{"start":{"line":129,"column":6},"end":{"line":129,"column":6}}]},"23":{"line":129,"type":"binary-expr","locations":[{"start":{"line":129,"column":10},"end":{"line":129,"column":21}},{"start":{"line":129,"column":26},"end":{"line":129,"column":38}},{"start":{"line":129,"column":42},"end":{"line":129,"column":63}}]},"24":{"line":145,"type":"binary-expr","locations":[{"start":{"line":145,"column":11},"end":{"line":145,"column":35}},{"start":{"line":146,"column":7},"end":{"line":146,"column":30}},{"start":{"line":147,"column":7},"end":{"line":147,"column":30}},{"start":{"line":148,"column":7},"end":{"line":148,"column":19}},{"start":{"line":149,"column":7},"end":{"line":149,"column":23}},{"start":{"line":150,"column":7},"end":{"line":150,"column":24}}]},"25":{"line":160,"type":"if","locations":[{"start":{"line":160,"column":2},"end":{"line":160,"column":2}},{"start":{"line":160,"column":2},"end":{"line":160,"column":2}}]},"26":{"line":161,"type":"if","locations":[{"start":{"line":161,"column":2},"end":{"line":161,"column":2}},{"start":{"line":161,"column":2},"end":{"line":161,"column":2}}]},"27":{"line":171,"type":"if","locations":[{"start":{"line":171,"column":4},"end":{"line":171,"column":4}},{"start":{"line":171,"column":4},"end":{"line":171,"column":4}}]},"28":{"line":191,"type":"binary-expr","locations":[{"start":{"line":191,"column":23},"end":{"line":191,"column":38}},{"start":{"line":191,"column":42},"end":{"line":191,"column":52}}]},"29":{"line":194,"type":"if","locations":[{"start":{"line":194,"column":2},"end":{"line":194,"column":2}},{"start":{"line":194,"column":2},"end":{"line":194,"column":2}}]},"30":{"line":194,"type":"cond-expr","locations":[{"start":{"line":194,"column":50},"end":{"line":194,"column":51}},{"start":{"line":194,"column":54},"end":{"line":194,"column":56}}]},"31":{"line":195,"type":"if","locations":[{"start":{"line":195,"column":2},"end":{"line":195,"column":2}},{"start":{"line":195,"column":2},"end":{"line":195,"column":2}}]},"32":{"line":195,"type":"cond-expr","locations":[{"start":{"line":195,"column":50},"end":{"line":195,"column":51}},{"start":{"line":195,"column":54},"end":{"line":195,"column":55}}]},"33":{"line":198,"type":"if","locations":[{"start":{"line":198,"column":2},"end":{"line":198,"column":2}},{"start":{"line":198,"column":2},"end":{"line":198,"column":2}}]},"34":{"line":198,"type":"cond-expr","locations":[{"start":{"line":198,"column":40},"end":{"line":198,"column":41}},{"start":{"line":198,"column":44},"end":{"line":198,"column":46}}]},"35":{"line":199,"type":"if","locations":[{"start":{"line":199,"column":2},"end":{"line":199,"column":2}},{"start":{"line":199,"column":2},"end":{"line":199,"column":2}}]},"36":{"line":199,"type":"cond-expr","locations":[{"start":{"line":199,"column":40},"end":{"line":199,"column":41}},{"start":{"line":199,"column":44},"end":{"line":199,"column":45}}]},"37":{"line":202,"type":"if","locations":[{"start":{"line":202,"column":2},"end":{"line":202,"column":2}},{"start":{"line":202,"column":2},"end":{"line":202,"column":2}}]},"38":{"line":202,"type":"cond-expr","locations":[{"start":{"line":202,"column":62},"end":{"line":202,"column":78}},{"start":{"line":202,"column":81},"end":{"line":202,"column":83}}]},"39":{"line":203,"type":"if","locations":[{"start":{"line":203,"column":2},"end":{"line":203,"column":2}},{"start":{"line":203,"column":2},"end":{"line":203,"column":2}}]},"40":{"line":203,"type":"cond-expr","locations":[{"start":{"line":203,"column":62},"end":{"line":203,"column":78}},{"start":{"line":203,"column":81},"end":{"line":203,"column":82}}]},"41":{"line":206,"type":"if","locations":[{"start":{"line":206,"column":2},"end":{"line":206,"column":2}},{"start":{"line":206,"column":2},"end":{"line":206,"column":2}}]},"42":{"line":206,"type":"cond-expr","locations":[{"start":{"line":206,"column":62},"end":{"line":206,"column":82}},{"start":{"line":206,"column":85},"end":{"line":206,"column":87}}]},"43":{"line":207,"type":"if","locations":[{"start":{"line":207,"column":2},"end":{"line":207,"column":2}},{"start":{"line":207,"column":2},"end":{"line":207,"column":2}}]},"44":{"line":207,"type":"cond-expr","locations":[{"start":{"line":207,"column":62},"end":{"line":207,"column":82}},{"start":{"line":207,"column":85},"end":{"line":207,"column":86}}]},"45":{"line":210,"type":"if","locations":[{"start":{"line":210,"column":2},"end":{"line":210,"column":2}},{"start":{"line":210,"column":2},"end":{"line":210,"column":2}}]},"46":{"line":210,"type":"cond-expr","locations":[{"start":{"line":210,"column":64},"end":{"line":210,"column":80}},{"start":{"line":210,"column":83},"end":{"line":210,"column":85}}]},"47":{"line":211,"type":"if","locations":[{"start":{"line":211,"column":2},"end":{"line":211,"column":2}},{"start":{"line":211,"column":2},"end":{"line":211,"column":2}}]},"48":{"line":211,"type":"cond-expr","locations":[{"start":{"line":211,"column":64},"end":{"line":211,"column":80}},{"start":{"line":211,"column":83},"end":{"line":211,"column":84}}]},"49":{"line":214,"type":"if","locations":[{"start":{"line":214,"column":2},"end":{"line":214,"column":2}},{"start":{"line":214,"column":2},"end":{"line":214,"column":2}}]},"50":{"line":214,"type":"cond-expr","locations":[{"start":{"line":214,"column":48},"end":{"line":214,"column":84}},{"start":{"line":214,"column":87},"end":{"line":214,"column":89}}]},"51":{"line":215,"type":"if","locations":[{"start":{"line":215,"column":2},"end":{"line":215,"column":2}},{"start":{"line":215,"column":2},"end":{"line":215,"column":2}}]},"52":{"line":215,"type":"cond-expr","locations":[{"start":{"line":215,"column":48},"end":{"line":215,"column":84}},{"start":{"line":215,"column":87},"end":{"line":215,"column":88}}]},"53":{"line":218,"type":"if","locations":[{"start":{"line":218,"column":2},"end":{"line":218,"column":2}},{"start":{"line":218,"column":2},"end":{"line":218,"column":2}}]},"54":{"line":218,"type":"cond-expr","locations":[{"start":{"line":218,"column":50},"end":{"line":218,"column":69}},{"start":{"line":218,"column":72},"end":{"line":218,"column":74}}]},"55":{"line":219,"type":"if","locations":[{"start":{"line":219,"column":2},"end":{"line":219,"column":2}},{"start":{"line":219,"column":2},"end":{"line":219,"column":2}}]},"56":{"line":219,"type":"cond-expr","locations":[{"start":{"line":219,"column":50},"end":{"line":219,"column":69}},{"start":{"line":219,"column":72},"end":{"line":219,"column":73}}]},"57":{"line":228,"type":"if","locations":[{"start":{"line":228,"column":4},"end":{"line":228,"column":4}},{"start":{"line":228,"column":4},"end":{"line":228,"column":4}}]},"58":{"line":273,"type":"if","locations":[{"start":{"line":273,"column":2},"end":{"line":273,"column":2}},{"start":{"line":273,"column":2},"end":{"line":273,"column":2}}]},"59":{"line":275,"type":"if","locations":[{"start":{"line":275,"column":2},"end":{"line":275,"column":2}},{"start":{"line":275,"column":2},"end":{"line":275,"column":2}}]},"60":{"line":277,"type":"if","locations":[{"start":{"line":277,"column":2},"end":{"line":277,"column":2}},{"start":{"line":277,"column":2},"end":{"line":277,"column":2}}]},"61":{"line":277,"type":"binary-expr","locations":[{"start":{"line":277,"column":6},"end":{"line":277,"column":20}},{"start":{"line":277,"column":24},"end":{"line":277,"column":49}},{"start":{"line":277,"column":53},"end":{"line":277,"column":65}},{"start":{"line":277,"column":69},"end":{"line":277,"column":94}}]},"62":{"line":281,"type":"if","locations":[{"start":{"line":281,"column":2},"end":{"line":281,"column":2}},{"start":{"line":281,"column":2},"end":{"line":281,"column":2}}]},"63":{"line":281,"type":"binary-expr","locations":[{"start":{"line":281,"column":6},"end":{"line":281,"column":20}},{"start":{"line":281,"column":24},"end":{"line":281,"column":49}},{"start":{"line":281,"column":53},"end":{"line":281,"column":64}}]},"64":{"line":282,"type":"if","locations":[{"start":{"line":282,"column":4},"end":{"line":282,"column":4}},{"start":{"line":282,"column":4},"end":{"line":282,"column":4}}]},"65":{"line":282,"type":"binary-expr","locations":[{"start":{"line":282,"column":8},"end":{"line":282,"column":38}},{"start":{"line":282,"column":43},"end":{"line":282,"column":74}},{"start":{"line":282,"column":78},"end":{"line":282,"column":104}}]},"66":{"line":283,"type":"if","locations":[{"start":{"line":283,"column":4},"end":{"line":283,"column":4}},{"start":{"line":283,"column":4},"end":{"line":283,"column":4}}]},"67":{"line":289,"type":"if","locations":[{"start":{"line":289,"column":4},"end":{"line":289,"column":4}},{"start":{"line":289,"column":4},"end":{"line":289,"column":4}}]},"68":{"line":289,"type":"binary-expr","locations":[{"start":{"line":289,"column":8},"end":{"line":289,"column":34}},{"start":{"line":289,"column":38},"end":{"line":289,"column":70}}]},"69":{"line":291,"type":"if","locations":[{"start":{"line":291,"column":4},"end":{"line":291,"column":4}},{"start":{"line":291,"column":4},"end":{"line":291,"column":4}}]},"70":{"line":295,"type":"if","locations":[{"start":{"line":295,"column":6},"end":{"line":295,"column":6}},{"start":{"line":295,"column":6},"end":{"line":295,"column":6}}]},"71":{"line":298,"type":"if","locations":[{"start":{"line":298,"column":13},"end":{"line":298,"column":13}},{"start":{"line":298,"column":13},"end":{"line":298,"column":13}}]},"72":{"line":319,"type":"if","locations":[{"start":{"line":319,"column":2},"end":{"line":319,"column":2}},{"start":{"line":319,"column":2},"end":{"line":319,"column":2}}]},"73":{"line":321,"type":"if","locations":[{"start":{"line":321,"column":2},"end":{"line":321,"column":2}},{"start":{"line":321,"column":2},"end":{"line":321,"column":2}}]},"74":{"line":323,"type":"if","locations":[{"start":{"line":323,"column":2},"end":{"line":323,"column":2}},{"start":{"line":323,"column":2},"end":{"line":323,"column":2}}]},"75":{"line":323,"type":"binary-expr","locations":[{"start":{"line":323,"column":6},"end":{"line":323,"column":20}},{"start":{"line":323,"column":24},"end":{"line":323,"column":49}},{"start":{"line":323,"column":53},"end":{"line":323,"column":64}}]},"76":{"line":324,"type":"if","locations":[{"start":{"line":324,"column":4},"end":{"line":324,"column":4}},{"start":{"line":324,"column":4},"end":{"line":324,"column":4}}]},"77":{"line":325,"type":"if","locations":[{"start":{"line":325,"column":4},"end":{"line":325,"column":4}},{"start":{"line":325,"column":4},"end":{"line":325,"column":4}}]},"78":{"line":332,"type":"if","locations":[{"start":{"line":332,"column":6},"end":{"line":332,"column":6}},{"start":{"line":332,"column":6},"end":{"line":332,"column":6}}]},"79":{"line":334,"type":"if","locations":[{"start":{"line":334,"column":4},"end":{"line":334,"column":4}},{"start":{"line":334,"column":4},"end":{"line":334,"column":4}}]},"80":{"line":343,"type":"if","locations":[{"start":{"line":343,"column":2},"end":{"line":343,"column":2}},{"start":{"line":343,"column":2},"end":{"line":343,"column":2}}]},"81":{"line":344,"type":"if","locations":[{"start":{"line":344,"column":2},"end":{"line":344,"column":2}},{"start":{"line":344,"column":2},"end":{"line":344,"column":2}}]},"82":{"line":345,"type":"if","locations":[{"start":{"line":345,"column":2},"end":{"line":345,"column":2}},{"start":{"line":345,"column":2},"end":{"line":345,"column":2}}]},"83":{"line":347,"type":"if","locations":[{"start":{"line":347,"column":2},"end":{"line":347,"column":2}},{"start":{"line":347,"column":2},"end":{"line":347,"column":2}}]},"84":{"line":361,"type":"if","locations":[{"start":{"line":361,"column":2},"end":{"line":361,"column":2}},{"start":{"line":361,"column":2},"end":{"line":361,"column":2}}]},"85":{"line":365,"type":"if","locations":[{"start":{"line":365,"column":4},"end":{"line":365,"column":4}},{"start":{"line":365,"column":4},"end":{"line":365,"column":4}}]},"86":{"line":376,"type":"if","locations":[{"start":{"line":376,"column":2},"end":{"line":376,"column":2}},{"start":{"line":376,"column":2},"end":{"line":376,"column":2}}]},"87":{"line":378,"type":"if","locations":[{"start":{"line":378,"column":2},"end":{"line":378,"column":2}},{"start":{"line":378,"column":2},"end":{"line":378,"column":2}}]},"88":{"line":379,"type":"if","locations":[{"start":{"line":379,"column":4},"end":{"line":379,"column":4}},{"start":{"line":379,"column":4},"end":{"line":379,"column":4}}]},"89":{"line":393,"type":"if","locations":[{"start":{"line":393,"column":2},"end":{"line":393,"column":2}},{"start":{"line":393,"column":2},"end":{"line":393,"column":2}}]},"90":{"line":395,"type":"if","locations":[{"start":{"line":395,"column":9},"end":{"line":395,"column":9}},{"start":{"line":395,"column":9},"end":{"line":395,"column":9}}]},"91":{"line":404,"type":"if","locations":[{"start":{"line":404,"column":2},"end":{"line":404,"column":2}},{"start":{"line":404,"column":2},"end":{"line":404,"column":2}}]},"92":{"line":406,"type":"if","locations":[{"start":{"line":406,"column":9},"end":{"line":406,"column":9}},{"start":{"line":406,"column":9},"end":{"line":406,"column":9}}]},"93":{"line":414,"type":"cond-expr","locations":[{"start":{"line":414,"column":49},"end":{"line":414,"column":65}},{"start":{"line":414,"column":68},"end":{"line":414,"column":73}}]},"94":{"line":416,"type":"if","locations":[{"start":{"line":416,"column":4},"end":{"line":416,"column":4}},{"start":{"line":416,"column":4},"end":{"line":416,"column":4}}]},"95":{"line":419,"type":"if","locations":[{"start":{"line":419,"column":6},"end":{"line":419,"column":6}},{"start":{"line":419,"column":6},"end":{"line":419,"column":6}}]},"96":{"line":420,"type":"if","locations":[{"start":{"line":420,"column":8},"end":{"line":420,"column":8}},{"start":{"line":420,"column":8},"end":{"line":420,"column":8}}]},"97":{"line":444,"type":"if","locations":[{"start":{"line":444,"column":2},"end":{"line":444,"column":2}},{"start":{"line":444,"column":2},"end":{"line":444,"column":2}}]},"98":{"line":444,"type":"binary-expr","locations":[{"start":{"line":444,"column":6},"end":{"line":444,"column":32}},{"start":{"line":444,"column":36},"end":{"line":444,"column":63}}]},"99":{"line":446,"type":"if","locations":[{"start":{"line":446,"column":2},"end":{"line":446,"column":2}},{"start":{"line":446,"column":2},"end":{"line":446,"column":2}}]},"100":{"line":446,"type":"binary-expr","locations":[{"start":{"line":446,"column":6},"end":{"line":446,"column":35}},{"start":{"line":446,"column":39},"end":{"line":446,"column":84}}]},"101":{"line":450,"type":"if","locations":[{"start":{"line":450,"column":2},"end":{"line":450,"column":2}},{"start":{"line":450,"column":2},"end":{"line":450,"column":2}}]},"102":{"line":461,"type":"if","locations":[{"start":{"line":461,"column":6},"end":{"line":461,"column":6}},{"start":{"line":461,"column":6},"end":{"line":461,"column":6}}]},"103":{"line":465,"type":"if","locations":[{"start":{"line":465,"column":6},"end":{"line":465,"column":6}},{"start":{"line":465,"column":6},"end":{"line":465,"column":6}}]},"104":{"line":479,"type":"if","locations":[{"start":{"line":479,"column":2},"end":{"line":479,"column":2}},{"start":{"line":479,"column":2},"end":{"line":479,"column":2}}]},"105":{"line":494,"type":"cond-expr","locations":[{"start":{"line":494,"column":47},"end":{"line":494,"column":63}},{"start":{"line":494,"column":66},"end":{"line":494,"column":71}}]},"106":{"line":497,"type":"if","locations":[{"start":{"line":497,"column":2},"end":{"line":497,"column":2}},{"start":{"line":497,"column":2},"end":{"line":497,"column":2}}]},"107":{"line":499,"type":"if","locations":[{"start":{"line":499,"column":2},"end":{"line":499,"column":2}},{"start":{"line":499,"column":2},"end":{"line":499,"column":2}}]},"108":{"line":501,"type":"if","locations":[{"start":{"line":501,"column":2},"end":{"line":501,"column":2}},{"start":{"line":501,"column":2},"end":{"line":501,"column":2}}]},"109":{"line":503,"type":"if","locations":[{"start":{"line":503,"column":2},"end":{"line":503,"column":2}},{"start":{"line":503,"column":2},"end":{"line":503,"column":2}}]},"110":{"line":506,"type":"if","locations":[{"start":{"line":506,"column":4},"end":{"line":506,"column":4}},{"start":{"line":506,"column":4},"end":{"line":506,"column":4}}]},"111":{"line":506,"type":"binary-expr","locations":[{"start":{"line":506,"column":8},"end":{"line":506,"column":29}},{"start":{"line":506,"column":33},"end":{"line":506,"column":42}}]},"112":{"line":532,"type":"if","locations":[{"start":{"line":532,"column":2},"end":{"line":532,"column":2}},{"start":{"line":532,"column":2},"end":{"line":532,"column":2}}]},"113":{"line":532,"type":"binary-expr","locations":[{"start":{"line":532,"column":6},"end":{"line":532,"column":16}},{"start":{"line":532,"column":20},"end":{"line":532,"column":41}},{"start":{"line":532,"column":45},"end":{"line":532,"column":67}},{"start":{"line":532,"column":71},"end":{"line":532,"column":92}},{"start":{"line":533,"column":6},"end":{"line":533,"column":16}},{"start":{"line":533,"column":20},"end":{"line":533,"column":41}},{"start":{"line":533,"column":45},"end":{"line":533,"column":67}},{"start":{"line":533,"column":71},"end":{"line":533,"column":92}}]},"114":{"line":536,"type":"if","locations":[{"start":{"line":536,"column":2},"end":{"line":536,"column":2}},{"start":{"line":536,"column":2},"end":{"line":536,"column":2}}]},"115":{"line":536,"type":"binary-expr","locations":[{"start":{"line":536,"column":6},"end":{"line":536,"column":20}},{"start":{"line":536,"column":24},"end":{"line":536,"column":38}}]},"116":{"line":536,"type":"binary-expr","locations":[{"start":{"line":536,"column":49},"end":{"line":536,"column":63}},{"start":{"line":536,"column":67},"end":{"line":536,"column":81}},{"start":{"line":536,"column":85},"end":{"line":536,"column":112}}]},"117":{"line":540,"type":"if","locations":[{"start":{"line":540,"column":2},"end":{"line":540,"column":2}},{"start":{"line":540,"column":2},"end":{"line":540,"column":2}}]},"118":{"line":540,"type":"binary-expr","locations":[{"start":{"line":540,"column":7},"end":{"line":540,"column":44}},{"start":{"line":540,"column":49},"end":{"line":540,"column":64}},{"start":{"line":540,"column":68},"end":{"line":540,"column":83}},{"start":{"line":540,"column":89},"end":{"line":540,"column":104}},{"start":{"line":540,"column":108},"end":{"line":540,"column":123}}]},"119":{"line":540,"type":"binary-expr","locations":[{"start":{"line":540,"column":9},"end":{"line":540,"column":24}},{"start":{"line":540,"column":28},"end":{"line":540,"column":43}}]},"120":{"line":551,"type":"if","locations":[{"start":{"line":551,"column":2},"end":{"line":551,"column":2}},{"start":{"line":551,"column":2},"end":{"line":551,"column":2}}]},"121":{"line":553,"type":"if","locations":[{"start":{"line":553,"column":4},"end":{"line":553,"column":4}},{"start":{"line":553,"column":4},"end":{"line":553,"column":4}}]},"122":{"line":554,"type":"if","locations":[{"start":{"line":554,"column":4},"end":{"line":554,"column":4}},{"start":{"line":554,"column":4},"end":{"line":554,"column":4}}]},"123":{"line":564,"type":"if","locations":[{"start":{"line":564,"column":2},"end":{"line":564,"column":2}},{"start":{"line":564,"column":2},"end":{"line":564,"column":2}}]},"124":{"line":564,"type":"binary-expr","locations":[{"start":{"line":564,"column":6},"end":{"line":564,"column":27}},{"start":{"line":564,"column":31},"end":{"line":564,"column":52}},{"start":{"line":564,"column":56},"end":{"line":564,"column":71}},{"start":{"line":565,"column":6},"end":{"line":565,"column":27}},{"start":{"line":565,"column":31},"end":{"line":565,"column":52}},{"start":{"line":565,"column":56},"end":{"line":565,"column":71}}]},"125":{"line":569,"type":"if","locations":[{"start":{"line":569,"column":2},"end":{"line":569,"column":2}},{"start":{"line":569,"column":2},"end":{"line":569,"column":2}}]},"126":{"line":581,"type":"binary-expr","locations":[{"start":{"line":581,"column":9},"end":{"line":581,"column":28}},{"start":{"line":581,"column":32},"end":{"line":581,"column":37}}]},"127":{"line":585,"type":"binary-expr","locations":[{"start":{"line":585,"column":9},"end":{"line":585,"column":28}},{"start":{"line":585,"column":32},"end":{"line":585,"column":38}}]},"128":{"line":589,"type":"binary-expr","locations":[{"start":{"line":589,"column":9},"end":{"line":589,"column":28}},{"start":{"line":589,"column":32},"end":{"line":589,"column":37}}]},"129":{"line":593,"type":"binary-expr","locations":[{"start":{"line":593,"column":9},"end":{"line":593,"column":28}},{"start":{"line":593,"column":32},"end":{"line":593,"column":38}}]},"130":{"line":597,"type":"if","locations":[{"start":{"line":597,"column":2},"end":{"line":597,"column":2}},{"start":{"line":597,"column":2},"end":{"line":597,"column":2}}]},"131":{"line":604,"type":"if","locations":[{"start":{"line":604,"column":2},"end":{"line":604,"column":2}},{"start":{"line":604,"column":2},"end":{"line":604,"column":2}}]},"132":{"line":607,"type":"if","locations":[{"start":{"line":607,"column":4},"end":{"line":607,"column":4}},{"start":{"line":607,"column":4},"end":{"line":607,"column":4}}]},"133":{"line":614,"type":"if","locations":[{"start":{"line":614,"column":2},"end":{"line":614,"column":2}},{"start":{"line":614,"column":2},"end":{"line":614,"column":2}}]},"134":{"line":620,"type":"if","locations":[{"start":{"line":620,"column":2},"end":{"line":620,"column":2}},{"start":{"line":620,"column":2},"end":{"line":620,"column":2}}]},"135":{"line":622,"type":"if","locations":[{"start":{"line":622,"column":2},"end":{"line":622,"column":2}},{"start":{"line":622,"column":2},"end":{"line":622,"column":2}}]},"136":{"line":630,"type":"if","locations":[{"start":{"line":630,"column":2},"end":{"line":630,"column":2}},{"start":{"line":630,"column":2},"end":{"line":630,"column":2}}]},"137":{"line":630,"type":"binary-expr","locations":[{"start":{"line":630,"column":6},"end":{"line":630,"column":12}},{"start":{"line":630,"column":16},"end":{"line":630,"column":29}}]},"138":{"line":636,"type":"if","locations":[{"start":{"line":636,"column":2},"end":{"line":636,"column":2}},{"start":{"line":636,"column":2},"end":{"line":636,"column":2}}]},"139":{"line":645,"type":"if","locations":[{"start":{"line":645,"column":4},"end":{"line":645,"column":4}},{"start":{"line":645,"column":4},"end":{"line":645,"column":4}}]},"140":{"line":646,"type":"if","locations":[{"start":{"line":646,"column":4},"end":{"line":646,"column":4}},{"start":{"line":646,"column":4},"end":{"line":646,"column":4}}]},"141":{"line":651,"type":"if","locations":[{"start":{"line":651,"column":2},"end":{"line":651,"column":2}},{"start":{"line":651,"column":2},"end":{"line":651,"column":2}}]},"142":{"line":655,"type":"if","locations":[{"start":{"line":655,"column":4},"end":{"line":655,"column":4}},{"start":{"line":655,"column":4},"end":{"line":655,"column":4}}]},"143":{"line":674,"type":"if","locations":[{"start":{"line":674,"column":2},"end":{"line":674,"column":2}},{"start":{"line":674,"column":2},"end":{"line":674,"column":2}}]},"144":{"line":677,"type":"if","locations":[{"start":{"line":677,"column":4},"end":{"line":677,"column":4}},{"start":{"line":677,"column":4},"end":{"line":677,"column":4}}]},"145":{"line":692,"type":"if","locations":[{"start":{"line":692,"column":2},"end":{"line":692,"column":2}},{"start":{"line":692,"column":2},"end":{"line":692,"column":2}}]},"146":{"line":695,"type":"if","locations":[{"start":{"line":695,"column":4},"end":{"line":695,"column":4}},{"start":{"line":695,"column":4},"end":{"line":695,"column":4}}]},"147":{"line":720,"type":"if","locations":[{"start":{"line":720,"column":2},"end":{"line":720,"column":2}},{"start":{"line":720,"column":2},"end":{"line":720,"column":2}}]},"148":{"line":723,"type":"if","locations":[{"start":{"line":723,"column":2},"end":{"line":723,"column":2}},{"start":{"line":723,"column":2},"end":{"line":723,"column":2}}]},"149":{"line":740,"type":"if","locations":[{"start":{"line":740,"column":2},"end":{"line":740,"column":2}},{"start":{"line":740,"column":2},"end":{"line":740,"column":2}}]},"150":{"line":740,"type":"binary-expr","locations":[{"start":{"line":740,"column":6},"end":{"line":740,"column":26}},{"start":{"line":740,"column":30},"end":{"line":740,"column":52}}]},"151":{"line":750,"type":"if","locations":[{"start":{"line":750,"column":4},"end":{"line":750,"column":4}},{"start":{"line":750,"column":4},"end":{"line":750,"column":4}}]},"152":{"line":751,"type":"if","locations":[{"start":{"line":751,"column":6},"end":{"line":751,"column":6}},{"start":{"line":751,"column":6},"end":{"line":751,"column":6}}]},"153":{"line":752,"type":"if","locations":[{"start":{"line":752,"column":6},"end":{"line":752,"column":6}},{"start":{"line":752,"column":6},"end":{"line":752,"column":6}}]},"154":{"line":754,"type":"if","locations":[{"start":{"line":754,"column":6},"end":{"line":754,"column":6}},{"start":{"line":754,"column":6},"end":{"line":754,"column":6}}]},"155":{"line":771,"type":"if","locations":[{"start":{"line":771,"column":2},"end":{"line":771,"column":2}},{"start":{"line":771,"column":2},"end":{"line":771,"column":2}}]},"156":{"line":771,"type":"binary-expr","locations":[{"start":{"line":771,"column":6},"end":{"line":771,"column":28}},{"start":{"line":771,"column":32},"end":{"line":771,"column":48}}]},"157":{"line":773,"type":"if","locations":[{"start":{"line":773,"column":4},"end":{"line":773,"column":4}},{"start":{"line":773,"column":4},"end":{"line":773,"column":4}}]},"158":{"line":778,"type":"if","locations":[{"start":{"line":778,"column":4},"end":{"line":778,"column":4}},{"start":{"line":778,"column":4},"end":{"line":778,"column":4}}]},"159":{"line":778,"type":"binary-expr","locations":[{"start":{"line":778,"column":8},"end":{"line":778,"column":27}},{"start":{"line":778,"column":31},"end":{"line":778,"column":61}},{"start":{"line":778,"column":65},"end":{"line":778,"column":91}}]},"160":{"line":781,"type":"if","locations":[{"start":{"line":781,"column":8},"end":{"line":781,"column":8}},{"start":{"line":781,"column":8},"end":{"line":781,"column":8}}]},"161":{"line":787,"type":"if","locations":[{"start":{"line":787,"column":6},"end":{"line":787,"column":6}},{"start":{"line":787,"column":6},"end":{"line":787,"column":6}}]},"162":{"line":794,"type":"if","locations":[{"start":{"line":794,"column":2},"end":{"line":794,"column":2}},{"start":{"line":794,"column":2},"end":{"line":794,"column":2}}]},"163":{"line":794,"type":"binary-expr","locations":[{"start":{"line":794,"column":6},"end":{"line":794,"column":25}},{"start":{"line":794,"column":29},"end":{"line":794,"column":59}},{"start":{"line":794,"column":63},"end":{"line":794,"column":89}},{"start":{"line":794,"column":93},"end":{"line":794,"column":118}}]},"164":{"line":799,"type":"if","locations":[{"start":{"line":799,"column":4},"end":{"line":799,"column":4}},{"start":{"line":799,"column":4},"end":{"line":799,"column":4}}]},"165":{"line":799,"type":"binary-expr","locations":[{"start":{"line":799,"column":8},"end":{"line":799,"column":37}},{"start":{"line":799,"column":41},"end":{"line":799,"column":86}}]},"166":{"line":804,"type":"if","locations":[{"start":{"line":804,"column":4},"end":{"line":804,"column":4}},{"start":{"line":804,"column":4},"end":{"line":804,"column":4}}]},"167":{"line":806,"type":"if","locations":[{"start":{"line":806,"column":8},"end":{"line":806,"column":8}},{"start":{"line":806,"column":8},"end":{"line":806,"column":8}}]},"168":{"line":808,"type":"if","locations":[{"start":{"line":808,"column":8},"end":{"line":808,"column":8}},{"start":{"line":808,"column":8},"end":{"line":808,"column":8}}]},"169":{"line":815,"type":"if","locations":[{"start":{"line":815,"column":2},"end":{"line":815,"column":2}},{"start":{"line":815,"column":2},"end":{"line":815,"column":2}}]},"170":{"line":819,"type":"if","locations":[{"start":{"line":819,"column":2},"end":{"line":819,"column":2}},{"start":{"line":819,"column":2},"end":{"line":819,"column":2}}]}},"code":["/**"," * Handle models (i.e. docs)"," * Serialization/deserialization"," * Copying"," * Querying, update"," */","","var util = require('util')","  , _ = require('underscore')","  , modifierFunctions = {}","  , lastStepModifierFunctions = {}","  , comparisonFunctions = {}","  , logicalOperators = {}","  , arrayComparisonFunctions = {}","  ;","","","/**"," * Check a key, throw an error if the key is non valid"," * @param {String} k key"," * @param {Model} v value, needed to treat the Date edge case"," * Non-treatable edge cases here: if part of the object if of the form { $$date: number } or { $$deleted: true }"," * Its serialized-then-deserialized version it will transformed into a Date object"," * But you really need to want it to trigger such behaviour, even when warned not to use '$' at the beginning of the field names..."," */","function checkKey (k, v) {","  if (typeof k === 'number') {","    k = k.toString();","  }","","  if (k[0] === '$' && !(k === '$$date' && typeof v === 'number') && !(k === '$$deleted' && v === true) && !(k === '$$indexCreated') && !(k === '$$indexRemoved')) {","    throw new Error('Field names cannot begin with the $ character');","  }","","  if (k.indexOf('.') !== -1) {","    throw new Error('Field names cannot contain a .');","  }","}","","","/**"," * Check a DB object and throw an error if it's not valid"," * Works by applying the above checkKey function to all fields recursively"," */","function checkObject (obj) {","  if (util.isArray(obj)) {","    obj.forEach(function (o) {","      checkObject(o);","    });","  }","","  if (typeof obj === 'object' && obj !== null) {","    Object.keys(obj).forEach(function (k) {","      checkKey(k, obj[k]);","      checkObject(obj[k]);","    });","  }","}","","","/**"," * Serialize an object to be persisted to a one-line string"," * For serialization/deserialization, we use the native JSON parser and not eval or Function"," * That gives us less freedom but data entered in the database may come from users"," * so eval and the like are not safe"," * Accepted primitive types: Number, String, Boolean, Date, null"," * Accepted secondary types: Objects, Arrays"," */","function serialize (obj) {","  var res;","","  res = JSON.stringify(obj, function (k, v) {","    checkKey(k, v);","","    if (v === undefined) { return undefined; }","    if (v === null) { return null; }","","    // Hackish way of checking if object is Date (this way it works between execution contexts in node-webkit).","    // We can't use value directly because for dates it is already string in this function (date.toJSON was already called), so we use this","    if (typeof this[k].getTime === 'function') { return { $$date: this[k].getTime() }; }","","    return v;","  });","","  return res;","}","","","/**"," * From a one-line representation of an object generate by the serialize function"," * Return the object itself"," */","function deserialize (rawData) {","  return JSON.parse(rawData, function (k, v) {","    if (k === '$$date') { return new Date(v); }","    if (typeof v === 'string' || typeof v === 'number' || typeof v === 'boolean' || v === null) { return v; }","    if (v && v.$$date) { return v.$$date; }","","    return v;","  });","}","","","/**"," * Deep copy a DB object"," * The optional strictKeys flag (defaulting to false) indicates whether to copy everything or only fields"," * where the keys are valid, i.e. don't begin with $ and don't contain a ."," */","function deepCopy (obj, strictKeys) {","  var res;","","  if ( typeof obj === 'boolean' ||","       typeof obj === 'number' ||","       typeof obj === 'string' ||","       obj === null ||","       (util.isDate(obj)) ) {","    return obj;","  }","","  if (util.isArray(obj)) {","    res = [];","    obj.forEach(function (o) { res.push(deepCopy(o, strictKeys)); });","    return res;","  }","","  if (typeof obj === 'object') {","    res = {};","    Object.keys(obj).forEach(function (k) {","      if (!strictKeys || (k[0] !== '$' && k.indexOf('.') === -1)) {","        res[k] = deepCopy(obj[k], strictKeys);","      }","    });","    return res;","  }","","  return undefined;   // For now everything else is undefined. We should probably throw an error instead","}","","","/**"," * Tells if an object is a primitive type or a \"real\" object"," * Arrays are considered primitive"," */","function isPrimitiveType (obj) {","  return ( typeof obj === 'boolean' ||","       typeof obj === 'number' ||","       typeof obj === 'string' ||","       obj === null ||","       util.isDate(obj) ||","       util.isArray(obj));","}","","","/**"," * Utility functions for comparing things"," * Assumes type checking was already done (a and b already have the same type)"," * compareNSB works for numbers, strings and booleans"," */","function compareNSB (a, b) {","  if (a < b) { return -1; }","  if (a > b) { return 1; }","  return 0;","}","","function compareArrays (a, b) {","  var i, comp;","","  for (i = 0; i < Math.min(a.length, b.length); i += 1) {","    comp = compareThings(a[i], b[i]);","","    if (comp !== 0) { return comp; }","  }","","  // Common section was identical, longest one wins","  return compareNSB(a.length, b.length);","}","","","/**"," * Compare { things U undefined }"," * Things are defined as any native types (string, number, boolean, null, date) and objects"," * We need to compare with undefined as it will be used in indexes"," * In the case of objects and arrays, we deep-compare"," * If two objects dont have the same type, the (arbitrary) type hierarchy is: undefined, null, number, strings, boolean, dates, arrays, objects"," * Return -1 if a < b, 1 if a > b and 0 if a = b (note that equality here is NOT the same as defined in areThingsEqual!)"," *"," * @param {Function} _compareStrings String comparing function, returning -1, 0 or 1, overriding default string comparison (useful for languages with accented letters)"," */","function compareThings (a, b, _compareStrings) {","  var aKeys, bKeys, comp, i","    , compareStrings = _compareStrings || compareNSB;","","  // undefined","  if (a === undefined) { return b === undefined ? 0 : -1; }","  if (b === undefined) { return a === undefined ? 0 : 1; }","","  // null","  if (a === null) { return b === null ? 0 : -1; }","  if (b === null) { return a === null ? 0 : 1; }","","  // Numbers","  if (typeof a === 'number') { return typeof b === 'number' ? compareNSB(a, b) : -1; }","  if (typeof b === 'number') { return typeof a === 'number' ? compareNSB(a, b) : 1; }","","  // Strings","  if (typeof a === 'string') { return typeof b === 'string' ? compareStrings(a, b) : -1; }","  if (typeof b === 'string') { return typeof a === 'string' ? compareStrings(a, b) : 1; }","","  // Booleans","  if (typeof a === 'boolean') { return typeof b === 'boolean' ? compareNSB(a, b) : -1; }","  if (typeof b === 'boolean') { return typeof a === 'boolean' ? compareNSB(a, b) : 1; }","","  // Dates","  if (util.isDate(a)) { return util.isDate(b) ? compareNSB(a.getTime(), b.getTime()) : -1; }","  if (util.isDate(b)) { return util.isDate(a) ? compareNSB(a.getTime(), b.getTime()) : 1; }","","  // Arrays (first element is most significant and so on)","  if (util.isArray(a)) { return util.isArray(b) ? compareArrays(a, b) : -1; }","  if (util.isArray(b)) { return util.isArray(a) ? compareArrays(a, b) : 1; }","","  // Objects","  aKeys = Object.keys(a).sort();","  bKeys = Object.keys(b).sort();","","  for (i = 0; i < Math.min(aKeys.length, bKeys.length); i += 1) {","    comp = compareThings(a[aKeys[i]], b[bKeys[i]]);","","    if (comp !== 0) { return comp; }","  }","","  return compareNSB(aKeys.length, bKeys.length);","}","","","","// ==============================================================","// Updating documents","// ==============================================================","","/**"," * The signature of modifier functions is as follows"," * Their structure is always the same: recursively follow the dot notation while creating"," * the nested documents if needed, then apply the \"last step modifier\""," * @param {Object} obj The model to modify"," * @param {String} field Can contain dots, in that case that means we will set a subfield recursively"," * @param {Model} value"," */","","/**"," * Set a field to a new value"," */","lastStepModifierFunctions.$set = function (obj, field, value) {","  obj[field] = value;","};","","","/**"," * Unset a field"," */","lastStepModifierFunctions.$unset = function (obj, field, value) {","  delete obj[field];","};","","","/**"," * Push an element to the end of an array field"," * Optional modifier $each instead of value to push several values"," * Optional modifier $slice to slice the resulting array, see https://docs.mongodb.org/manual/reference/operator/update/slice/"," * Différeence with MongoDB: if $slice is specified and not $each, we act as if value is an empty array"," */","lastStepModifierFunctions.$push = function (obj, field, value) {","  // Create the array if it doesn't exist","  if (!obj.hasOwnProperty(field)) { obj[field] = []; }","","  if (!util.isArray(obj[field])) { throw new Error(\"Can't $push an element on non-array values\"); }","","  if (value !== null && typeof value === 'object' && value.$slice && value.$each === undefined) {","    value.$each = [];","  }","","  if (value !== null && typeof value === 'object' && value.$each) {","    if (Object.keys(value).length >= 3 || (Object.keys(value).length === 2 && value.$slice === undefined)) { throw new Error(\"Can only use $slice in cunjunction with $each when $push to array\"); }","    if (!util.isArray(value.$each)) { throw new Error(\"$each requires an array value\"); }","","    value.$each.forEach(function (v) {","      obj[field].push(v);","    });","","    if (value.$slice === undefined || typeof value.$slice !== 'number') { return; }","","    if (value.$slice === 0) {","      obj[field] = [];","    } else {","      var start, end, n = obj[field].length;","      if (value.$slice < 0) {","        start = Math.max(0, n + value.$slice);","        end = n;","      } else if (value.$slice > 0) {","        start = 0;","        end = Math.min(n, value.$slice);","      }","      obj[field] = obj[field].slice(start, end);","    }","  } else {","    obj[field].push(value);","  }","};","","","/**"," * Add an element to an array field only if it is not already in it"," * No modification if the element is already in the array"," * Note that it doesn't check whether the original array contains duplicates"," */","lastStepModifierFunctions.$addToSet = function (obj, field, value) {","  var addToSet = true;","","  // Create the array if it doesn't exist","  if (!obj.hasOwnProperty(field)) { obj[field] = []; }","","  if (!util.isArray(obj[field])) { throw new Error(\"Can't $addToSet an element on non-array values\"); }","","  if (value !== null && typeof value === 'object' && value.$each) {","    if (Object.keys(value).length > 1) { throw new Error(\"Can't use another field in conjunction with $each\"); }","    if (!util.isArray(value.$each)) { throw new Error(\"$each requires an array value\"); }","","    value.$each.forEach(function (v) {","      lastStepModifierFunctions.$addToSet(obj, field, v);","    });","  } else {","    obj[field].forEach(function (v) {","      if (compareThings(v, value) === 0) { addToSet = false; }","    });","    if (addToSet) { obj[field].push(value); }","  }","};","","","/**"," * Remove the first or last element of an array"," */","lastStepModifierFunctions.$pop = function (obj, field, value) {","  if (!util.isArray(obj[field])) { throw new Error(\"Can't $pop an element from non-array values\"); }","  if (typeof value !== 'number') { throw new Error(value + \" isn't an integer, can't use it with $pop\"); }","  if (value === 0) { return; }","","  if (value > 0) {","    obj[field] = obj[field].slice(0, obj[field].length - 1);","  } else {","    obj[field] = obj[field].slice(1);","  }","};","","","/**"," * Removes all instances of a value from an existing array"," */","lastStepModifierFunctions.$pull = function (obj, field, value) {","  var arr, i;","","  if (!util.isArray(obj[field])) { throw new Error(\"Can't $pull an element from non-array values\"); }","","  arr = obj[field];","  for (i = arr.length - 1; i >= 0; i -= 1) {","    if (match(arr[i], value)) {","      arr.splice(i, 1);","    }","  }","};","","","/**"," * Increment a numeric field's value"," */","lastStepModifierFunctions.$inc = function (obj, field, value) {","  if (typeof value !== 'number') { throw new Error(value + \" must be a number\"); }","","  if (typeof obj[field] !== 'number') {","    if (!_.has(obj, field)) {","      obj[field] = value;","    } else {","      throw new Error(\"Don't use the $inc modifier on non-number fields\");","    }","  } else {","    obj[field] += value;","  }","};","","/**"," * Updates the value of the field, only if specified field is greater than the current value of the field"," */","lastStepModifierFunctions.$max = function (obj, field, value) {","  if (typeof obj[field] === 'undefined') {","    obj[field] = value;","  } else if (value > obj[field]) {","    obj[field] = value;","  }","};","","/**"," * Updates the value of the field, only if specified field is smaller than the current value of the field"," */","lastStepModifierFunctions.$min = function (obj, field, value) {","  if (typeof obj[field] === 'undefined') { ","    obj[field] = value;","  } else if (value < obj[field]) {","    obj[field] = value;","  }","};","","// Given its name, create the complete modifier function","function createModifierFunction (modifier) {","  return function (obj, field, value) {","    var fieldParts = typeof field === 'string' ? field.split('.') : field;","","    if (fieldParts.length === 1) {","      lastStepModifierFunctions[modifier](obj, field, value);","    } else {","      if (obj[fieldParts[0]] === undefined) {","        if (modifier === '$unset') { return; }   // Bad looking specific fix, needs to be generalized modifiers that behave like $unset are implemented","        obj[fieldParts[0]] = {};","      }","      modifierFunctions[modifier](obj[fieldParts[0]], fieldParts.slice(1), value);","    }","  };","}","","// Actually create all modifier functions","Object.keys(lastStepModifierFunctions).forEach(function (modifier) {","  modifierFunctions[modifier] = createModifierFunction(modifier);","});","","","/**"," * Modify a DB object according to an update query"," */","function modify (obj, updateQuery) {","  var keys = Object.keys(updateQuery)","    , firstChars = _.map(keys, function (item) { return item[0]; })","    , dollarFirstChars = _.filter(firstChars, function (c) { return c === '$'; })","    , newDoc, modifiers","    ;","","  if (keys.indexOf('_id') !== -1 && updateQuery._id !== obj._id) { throw new Error(\"You cannot change a document's _id\"); }","","  if (dollarFirstChars.length !== 0 && dollarFirstChars.length !== firstChars.length) {","    throw new Error(\"You cannot mix modifiers and normal fields\");","  }","","  if (dollarFirstChars.length === 0) {","    // Simply replace the object with the update query contents","    newDoc = deepCopy(updateQuery);","    newDoc._id = obj._id;","  } else {","    // Apply modifiers","    modifiers = _.uniq(keys);","    newDoc = deepCopy(obj);","    modifiers.forEach(function (m) {","      var keys;","","      if (!modifierFunctions[m]) { throw new Error(\"Unknown modifier \" + m); }","","      // Can't rely on Object.keys throwing on non objects since ES6","      // Not 100% satisfying as non objects can be interpreted as objects but no false negatives so we can live with it","      if (typeof updateQuery[m] !== 'object') {","        throw new Error(\"Modifier \" + m + \"'s argument must be an object\");","      }","","      keys = Object.keys(updateQuery[m]);","      keys.forEach(function (k) {","        modifierFunctions[m](newDoc, k, updateQuery[m][k]);","      });","    });","  }","","  // Check result is valid and return it","  checkObject(newDoc);","","  if (obj._id !== newDoc._id) { throw new Error(\"You can't change a document's _id\"); }","  return newDoc;","};","","","// ==============================================================","// Finding documents","// ==============================================================","","/**"," * Get a value from object with dot notation"," * @param {Object} obj"," * @param {String} field"," */","function getDotValue (obj, field) {","  var fieldParts = typeof field === 'string' ? field.split('.') : field","    , i, objs;","","  if (!obj) { return undefined; }   // field cannot be empty so that means we should return undefined so that nothing can match","","  if (fieldParts.length === 0) { return obj; }","","  if (fieldParts.length === 1) { return obj[fieldParts[0]]; }","","  if (util.isArray(obj[fieldParts[0]])) {","    // If the next field is an integer, return only this item of the array","    i = parseInt(fieldParts[1], 10);","    if (typeof i === 'number' && !isNaN(i)) {","      return getDotValue(obj[fieldParts[0]][i], fieldParts.slice(2))","    }","","    // Return the array of values","    objs = new Array();","    for (i = 0; i < obj[fieldParts[0]].length; i += 1) {","       objs.push(getDotValue(obj[fieldParts[0]][i], fieldParts.slice(1)));","    }","    return objs;","  } else {","    return getDotValue(obj[fieldParts[0]], fieldParts.slice(1));","  }","}","","","/**"," * Check whether 'things' are equal"," * Things are defined as any native types (string, number, boolean, null, date) and objects"," * In the case of object, we check deep equality"," * Returns true if they are, false otherwise"," */","function areThingsEqual (a, b) {","  var aKeys , bKeys , i;","","  // Strings, booleans, numbers, null","  if (a === null || typeof a === 'string' || typeof a === 'boolean' || typeof a === 'number' ||","      b === null || typeof b === 'string' || typeof b === 'boolean' || typeof b === 'number') { return a === b; }","","  // Dates","  if (util.isDate(a) || util.isDate(b)) { return util.isDate(a) && util.isDate(b) && a.getTime() === b.getTime(); }","","  // Arrays (no match since arrays are used as a $in)","  // undefined (no match since they mean field doesn't exist and can't be serialized)","  if ((!(util.isArray(a) && util.isArray(b)) && (util.isArray(a) || util.isArray(b))) || a === undefined || b === undefined) { return false; }","","  // General objects (check for deep equality)","  // a and b should be objects at this point","  try {","    aKeys = Object.keys(a);","    bKeys = Object.keys(b);","  } catch (e) {","    return false;","  }","","  if (aKeys.length !== bKeys.length) { return false; }","  for (i = 0; i < aKeys.length; i += 1) {","    if (bKeys.indexOf(aKeys[i]) === -1) { return false; }","    if (!areThingsEqual(a[aKeys[i]], b[aKeys[i]])) { return false; }","  }","  return true;","}","","","/**"," * Check that two values are comparable"," */","function areComparable (a, b) {","  if (typeof a !== 'string' && typeof a !== 'number' && !util.isDate(a) &&","      typeof b !== 'string' && typeof b !== 'number' && !util.isDate(b)) {","    return false;","  }","","  if (typeof a !== typeof b) { return false; }","","  return true;","}","","","/**"," * Arithmetic and comparison operators"," * @param {Native value} a Value in the object"," * @param {Native value} b Value in the query"," */","comparisonFunctions.$lt = function (a, b) {","  return areComparable(a, b) && a < b;","};","","comparisonFunctions.$lte = function (a, b) {","  return areComparable(a, b) && a <= b;","};","","comparisonFunctions.$gt = function (a, b) {","  return areComparable(a, b) && a > b;","};","","comparisonFunctions.$gte = function (a, b) {","  return areComparable(a, b) && a >= b;","};","","comparisonFunctions.$ne = function (a, b) {","  if (a === undefined) { return true; }","  return !areThingsEqual(a, b);","};","","comparisonFunctions.$in = function (a, b) {","  var i;","","  if (!util.isArray(b)) { throw new Error(\"$in operator called with a non-array\"); }","","  for (i = 0; i < b.length; i += 1) {","    if (areThingsEqual(a, b[i])) { return true; }","  }","","  return false;","};","","comparisonFunctions.$nin = function (a, b) {","  if (!util.isArray(b)) { throw new Error(\"$nin operator called with a non-array\"); }","","  return !comparisonFunctions.$in(a, b);","};","","comparisonFunctions.$regex = function (a, b) {","  if (!util.isRegExp(b)) { throw new Error(\"$regex operator called with non regular expression\"); }","","  if (typeof a !== 'string') {","    return false","  } else {","    return b.test(a);","  }","};","","comparisonFunctions.$exists = function (value, exists) {","  if (exists || exists === '') {   // This will be true for all values of exists except false, null, undefined and 0","    exists = true;                 // That's strange behaviour (we should only use true/false) but that's the way Mongo does it...","  } else {","    exists = false;","  }","","  if (value === undefined) {","    return !exists","  } else {","    return exists;","  }","};","","// Specific to arrays","comparisonFunctions.$size = function (obj, value) {","    if (!util.isArray(obj)) { return false; }","    if (value % 1 !== 0) { throw new Error(\"$size operator called without an integer\"); }","","    return (obj.length == value);","};","comparisonFunctions.$elemMatch = function (obj, value) {","  if (!util.isArray(obj)) { return false; }","  var i = obj.length;","  var result = false;   // Initialize result","  while (i--) {","    if (match(obj[i], value)) {   // If match for array element, return true","      result = true;","      break;","    }","  }","  return result;","};","arrayComparisonFunctions.$size = true;","arrayComparisonFunctions.$elemMatch = true;","","","/**"," * Match any of the subqueries"," * @param {Model} obj"," * @param {Array of Queries} query"," */","logicalOperators.$or = function (obj, query) {","  var i;","","  if (!util.isArray(query)) { throw new Error(\"$or operator used without an array\"); }","","  for (i = 0; i < query.length; i += 1) {","    if (match(obj, query[i])) { return true; }","  }","","  return false;","};","","","/**"," * Match all of the subqueries"," * @param {Model} obj"," * @param {Array of Queries} query"," */","logicalOperators.$and = function (obj, query) {","  var i;","","  if (!util.isArray(query)) { throw new Error(\"$and operator used without an array\"); }","","  for (i = 0; i < query.length; i += 1) {","    if (!match(obj, query[i])) { return false; }","  }","","  return true;","};","","","/**"," * Inverted match of the query"," * @param {Model} obj"," * @param {Query} query"," */","logicalOperators.$not = function (obj, query) {","  return !match(obj, query);","};","","","/**"," * Use a function to match"," * @param {Model} obj"," * @param {Query} query"," */","logicalOperators.$where = function (obj, fn) {","  var result;","","  if (!_.isFunction(fn)) { throw new Error(\"$where operator used without a function\"); }","","  result = fn.call(obj);","  if (!_.isBoolean(result)) { throw new Error(\"$where function must return boolean\"); }","","  return result;","};","","","/**"," * Tell if a given document matches a query"," * @param {Object} obj Document to check"," * @param {Object} query"," */","function match (obj, query) {","  var queryKeys, queryKey, queryValue, i;","","  // Primitive query against a primitive type","  // This is a bit of a hack since we construct an object with an arbitrary key only to dereference it later","  // But I don't have time for a cleaner implementation now","  if (isPrimitiveType(obj) || isPrimitiveType(query)) {","    return matchQueryPart({ needAKey: obj }, 'needAKey', query);","  }","","  // Normal query","  queryKeys = Object.keys(query);","  for (i = 0; i < queryKeys.length; i += 1) {","    queryKey = queryKeys[i];","    queryValue = query[queryKey];","","    if (queryKey[0] === '$') {","      if (!logicalOperators[queryKey]) { throw new Error(\"Unknown logical operator \" + queryKey); }","      if (!logicalOperators[queryKey](obj, queryValue)) { return false; }","    } else {","      if (!matchQueryPart(obj, queryKey, queryValue)) { return false; }","    }","  }","","  return true;","};","","","/**"," * Match an object against a specific { key: value } part of a query"," * if the treatObjAsValue flag is set, don't try to match every part separately, but the array as a whole"," */","function matchQueryPart (obj, queryKey, queryValue, treatObjAsValue) {","  var objValue = getDotValue(obj, queryKey)","    , i, keys, firstChars, dollarFirstChars;","","  // Check if the value is an array if we don't force a treatment as value","  if (util.isArray(objValue) && !treatObjAsValue) {","    // If the queryValue is an array, try to perform an exact match","    if (util.isArray(queryValue)) {","      return matchQueryPart(obj, queryKey, queryValue, true);","    }","","    // Check if we are using an array-specific comparison function","    if (queryValue !== null && typeof queryValue === 'object' && !util.isRegExp(queryValue)) {","      keys = Object.keys(queryValue);","      for (i = 0; i < keys.length; i += 1) {","        if (arrayComparisonFunctions[keys[i]]) { return matchQueryPart(obj, queryKey, queryValue, true); }","      }","    }","","    // If not, treat it as an array of { obj, query } where there needs to be at least one match","    for (i = 0; i < objValue.length; i += 1) {","      if (matchQueryPart({ k: objValue[i] }, 'k', queryValue)) { return true; }   // k here could be any string","    }","    return false;","  }","","  // queryValue is an actual object. Determine whether it contains comparison operators","  // or only normal fields. Mixed objects are not allowed","  if (queryValue !== null && typeof queryValue === 'object' && !util.isRegExp(queryValue) && !util.isArray(queryValue)) {","    keys = Object.keys(queryValue);","    firstChars = _.map(keys, function (item) { return item[0]; });","    dollarFirstChars = _.filter(firstChars, function (c) { return c === '$'; });","","    if (dollarFirstChars.length !== 0 && dollarFirstChars.length !== firstChars.length) {","      throw new Error(\"You cannot mix operators and normal fields\");","    }","","    // queryValue is an object of this form: { $comparisonOperator1: value1, ... }","    if (dollarFirstChars.length > 0) {","      for (i = 0; i < keys.length; i += 1) {","        if (!comparisonFunctions[keys[i]]) { throw new Error(\"Unknown comparison function \" + keys[i]); }","","        if (!comparisonFunctions[keys[i]](objValue, queryValue[keys[i]])) { return false; }","      }","      return true;","    }","  }","","  // Using regular expressions with basic querying","  if (util.isRegExp(queryValue)) { return comparisonFunctions.$regex(objValue, queryValue); }","","  // queryValue is either a native value or a normal object","  // Basic matching is possible","  if (!areThingsEqual(objValue, queryValue)) { return false; }","","  return true;","}","","","// Interface","module.exports.serialize = serialize;","module.exports.deserialize = deserialize;","module.exports.deepCopy = deepCopy;","module.exports.checkObject = checkObject;","module.exports.isPrimitiveType = isPrimitiveType;","module.exports.modify = modify;","module.exports.getDotValue = getDotValue;","module.exports.match = match;","module.exports.areThingsEqual = areThingsEqual;","module.exports.compareThings = compareThings;",""],"l":{"8":1,"26":1,"27":0,"28":0,"31":0,"32":0,"35":0,"36":0,"45":1,"46":0,"47":0,"48":0,"52":0,"53":0,"54":0,"55":0,"69":1,"70":0,"72":0,"73":0,"75":0,"76":0,"80":0,"82":0,"85":0,"93":1,"94":0,"95":0,"96":0,"97":0,"99":0,"109":1,"110":0,"112":0,"117":0,"120":0,"121":0,"122":0,"123":0,"126":0,"127":0,"128":0,"129":0,"130":0,"133":0,"136":0,"144":1,"145":0,"159":1,"160":0,"161":0,"162":0,"165":1,"166":0,"168":0,"169":0,"171":0,"175":0,"189":1,"190":0,"194":0,"195":0,"198":0,"199":0,"202":0,"203":0,"206":0,"207":0,"210":0,"211":0,"214":0,"215":0,"218":0,"219":0,"222":0,"223":0,"225":0,"226":0,"228":0,"231":0,"252":1,"253":0,"260":1,"261":0,"271":1,"273":0,"275":0,"277":0,"278":0,"281":0,"282":0,"283":0,"285":0,"286":0,"289":0,"291":0,"292":0,"294":0,"295":0,"296":0,"297":0,"298":0,"299":0,"300":0,"302":0,"305":0,"315":1,"316":0,"319":0,"321":0,"323":0,"324":0,"325":0,"327":0,"328":0,"331":0,"332":0,"334":0,"342":1,"343":0,"344":0,"345":0,"347":0,"348":0,"350":0,"358":1,"359":0,"361":0,"363":0,"364":0,"365":0,"366":0,"375":1,"376":0,"378":0,"379":0,"380":0,"382":0,"385":0,"392":1,"393":0,"394":0,"395":0,"396":0,"403":1,"404":0,"405":0,"406":0,"407":0,"412":1,"413":9,"414":0,"416":0,"417":0,"419":0,"420":0,"421":0,"423":0,"429":1,"430":9,"437":1,"438":0,"439":0,"440":0,"444":0,"446":0,"447":0,"450":0,"452":0,"453":0,"456":0,"457":0,"458":0,"459":0,"461":0,"465":0,"466":0,"469":0,"470":0,"471":0,"477":0,"479":0,"480":0,"493":1,"494":0,"497":0,"499":0,"501":0,"503":0,"505":0,"506":0,"507":0,"511":0,"512":0,"513":0,"515":0,"517":0,"528":1,"529":0,"532":0,"533":0,"536":0,"540":0,"544":0,"545":0,"546":0,"548":0,"551":0,"552":0,"553":0,"554":0,"556":0,"563":1,"564":0,"566":0,"569":0,"571":0,"580":1,"581":0,"584":1,"585":0,"588":1,"589":0,"592":1,"593":0,"596":1,"597":0,"598":0,"601":1,"602":0,"604":0,"606":0,"607":0,"610":0,"613":1,"614":0,"616":0,"619":1,"620":0,"622":0,"623":0,"625":0,"629":1,"630":0,"631":0,"633":0,"636":0,"637":0,"639":0,"644":1,"645":0,"646":0,"648":0,"650":1,"651":0,"652":0,"653":0,"654":0,"655":0,"656":0,"657":0,"660":0,"662":1,"663":1,"671":1,"672":0,"674":0,"676":0,"677":0,"680":0,"689":1,"690":0,"692":0,"694":0,"695":0,"698":0,"707":1,"708":0,"717":1,"718":0,"720":0,"722":0,"723":0,"725":0,"734":1,"735":0,"740":0,"741":0,"745":0,"746":0,"747":0,"748":0,"750":0,"751":0,"752":0,"754":0,"758":0,"766":1,"767":0,"771":0,"773":0,"774":0,"778":0,"779":0,"780":0,"781":0,"786":0,"787":0,"789":0,"794":0,"795":0,"796":0,"797":0,"799":0,"800":0,"804":0,"805":0,"806":0,"808":0,"810":0,"815":0,"819":0,"821":0,"826":1,"827":1,"828":1,"829":1,"830":1,"831":1,"832":1,"833":1,"834":1,"835":1}},"/home/travis/build/npmtest/node-npmtest-nedb/nedb/lib/executor.js":{"path":"/home/travis/build/npmtest/node-npmtest-nedb/nedb/lib/executor.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":1,"23":0,"24":0,"25":0,"26":1,"27":0,"28":0,"29":0,"30":0,"31":0,"32":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0},"fnMap":{"1":{"name":"Executor","line":8,"loc":{"start":{"line":8,"column":0},"end":{"line":8,"column":21}}},"2":{"name":"(anonymous_2)","line":13,"loc":{"start":{"line":13,"column":27},"end":{"line":13,"column":47}}},"3":{"name":"(anonymous_3)","line":23,"loc":{"start":{"line":23,"column":46},"end":{"line":23,"column":58}}},"4":{"name":"(anonymous_4)","line":33,"loc":{"start":{"line":33,"column":46},"end":{"line":33,"column":58}}},"5":{"name":"(anonymous_5)","line":36,"loc":{"start":{"line":36,"column":24},"end":{"line":36,"column":36}}},"6":{"name":"(anonymous_6)","line":55,"loc":{"start":{"line":55,"column":26},"end":{"line":55,"column":56}}},"7":{"name":"(anonymous_7)","line":68,"loc":{"start":{"line":68,"column":35},"end":{"line":68,"column":47}}}},"statementMap":{"1":{"start":{"line":5,"column":0},"end":{"line":6,"column":3}},"2":{"start":{"line":8,"column":0},"end":{"line":42,"column":1}},"3":{"start":{"line":9,"column":2},"end":{"line":9,"column":19}},"4":{"start":{"line":10,"column":2},"end":{"line":10,"column":21}},"5":{"start":{"line":13,"column":2},"end":{"line":41,"column":8}},"6":{"start":{"line":14,"column":4},"end":{"line":14,"column":26}},"7":{"start":{"line":17,"column":4},"end":{"line":17,"column":96}},"8":{"start":{"line":17,"column":57},"end":{"line":17,"column":94}},"9":{"start":{"line":18,"column":4},"end":{"line":18,"column":60}},"10":{"start":{"line":21,"column":4},"end":{"line":37,"column":5}},"11":{"start":{"line":23,"column":6},"end":{"line":30,"column":8}},"12":{"start":{"line":24,"column":8},"end":{"line":28,"column":9}},"13":{"start":{"line":25,"column":11},"end":{"line":25,"column":28}},"14":{"start":{"line":27,"column":10},"end":{"line":27,"column":31}},"15":{"start":{"line":29,"column":8},"end":{"line":29,"column":39}},"16":{"start":{"line":31,"column":11},"end":{"line":37,"column":5}},"17":{"start":{"line":33,"column":6},"end":{"line":33,"column":68}},"18":{"start":{"line":33,"column":60},"end":{"line":33,"column":65}},"19":{"start":{"line":36,"column":6},"end":{"line":36,"column":47}},"20":{"start":{"line":36,"column":38},"end":{"line":36,"column":43}},"21":{"start":{"line":40,"column":4},"end":{"line":40,"column":43}},"22":{"start":{"line":55,"column":0},"end":{"line":61,"column":2}},"23":{"start":{"line":56,"column":2},"end":{"line":60,"column":3}},"24":{"start":{"line":57,"column":4},"end":{"line":57,"column":26}},"25":{"start":{"line":59,"column":4},"end":{"line":59,"column":27}},"26":{"start":{"line":68,"column":0},"end":{"line":73,"column":2}},"27":{"start":{"line":69,"column":2},"end":{"line":69,"column":8}},"28":{"start":{"line":70,"column":2},"end":{"line":70,"column":20}},"29":{"start":{"line":71,"column":2},"end":{"line":71,"column":82}},"30":{"start":{"line":71,"column":48},"end":{"line":71,"column":80}},"31":{"start":{"line":72,"column":2},"end":{"line":72,"column":19}},"32":{"start":{"line":78,"column":0},"end":{"line":78,"column":26}}},"branchMap":{"1":{"line":21,"type":"if","locations":[{"start":{"line":21,"column":4},"end":{"line":21,"column":4}},{"start":{"line":21,"column":4},"end":{"line":21,"column":4}}]},"2":{"line":24,"type":"if","locations":[{"start":{"line":24,"column":8},"end":{"line":24,"column":8}},{"start":{"line":24,"column":8},"end":{"line":24,"column":8}}]},"3":{"line":31,"type":"if","locations":[{"start":{"line":31,"column":11},"end":{"line":31,"column":11}},{"start":{"line":31,"column":11},"end":{"line":31,"column":11}}]},"4":{"line":31,"type":"binary-expr","locations":[{"start":{"line":31,"column":15},"end":{"line":31,"column":23}},{"start":{"line":31,"column":27},"end":{"line":31,"column":54}}]},"5":{"line":56,"type":"if","locations":[{"start":{"line":56,"column":2},"end":{"line":56,"column":2}},{"start":{"line":56,"column":2},"end":{"line":56,"column":2}}]},"6":{"line":56,"type":"binary-expr","locations":[{"start":{"line":56,"column":6},"end":{"line":56,"column":16}},{"start":{"line":56,"column":20},"end":{"line":56,"column":32}}]}},"code":["/**"," * Responsible for sequentially executing actions on the database"," */","","var async = require('async')","  ;","","function Executor () {","  this.buffer = [];","  this.ready = false;","","  // This queue will execute all commands, one-by-one in order","  this.queue = async.queue(function (task, cb) {","    var newArguments = [];","","    // task.arguments is an array-like object on which adding a new field doesn't work, so we transform it into a real array","    for (var i = 0; i < task.arguments.length; i += 1) { newArguments.push(task.arguments[i]); }","    var lastArg = task.arguments[task.arguments.length - 1];","","    // Always tell the queue task is complete. Execute callback if any was given.","    if (typeof lastArg === 'function') {","      // Callback was supplied","      newArguments[newArguments.length - 1] = function () {","        if (typeof setImmediate === 'function') {","           setImmediate(cb);","        } else {","          process.nextTick(cb);","        }","        lastArg.apply(null, arguments);","      };","    } else if (!lastArg && task.arguments.length !== 0) {","      // false/undefined/null supplied as callbback","      newArguments[newArguments.length - 1] = function () { cb(); };","    } else {","      // Nothing supplied as callback","      newArguments.push(function () { cb(); });","    }","","","    task.fn.apply(task.this, newArguments);","  }, 1);","}","","","/**"," * If executor is ready, queue task (and process it immediately if executor was idle)"," * If not, buffer task for later processing"," * @param {Object} task"," *                 task.this - Object to use as this"," *                 task.fn - Function to execute"," *                 task.arguments - Array of arguments, IMPORTANT: only the last argument may be a function (the callback)"," *                                                                 and the last argument cannot be false/undefined/null"," * @param {Boolean} forceQueuing Optional (defaults to false) force executor to queue task even if it is not ready"," */","Executor.prototype.push = function (task, forceQueuing) {","  if (this.ready || forceQueuing) {","    this.queue.push(task);","  } else {","    this.buffer.push(task);","  }","};","","","/**"," * Queue all tasks in buffer (in the same order they came in)"," * Automatically sets executor as ready"," */","Executor.prototype.processBuffer = function () {","  var i;","  this.ready = true;","  for (i = 0; i < this.buffer.length; i += 1) { this.queue.push(this.buffer[i]); }","  this.buffer = [];","};","","","","// Interface","module.exports = Executor;",""],"l":{"5":1,"8":1,"9":0,"10":0,"13":0,"14":0,"17":0,"18":0,"21":0,"23":0,"24":0,"25":0,"27":0,"29":0,"31":0,"33":0,"36":0,"40":0,"55":1,"56":0,"57":0,"59":0,"68":1,"69":0,"70":0,"71":0,"72":0,"78":1}},"/home/travis/build/npmtest/node-npmtest-nedb/nedb/lib/indexes.js":{"path":"/home/travis/build/npmtest/node-npmtest-nedb/nedb/lib/indexes.js","s":{"1":1,"2":1,"3":0,"4":1,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":1,"17":0,"18":0,"19":0,"20":0,"21":0,"22":1,"23":0,"24":0,"25":0,"26":1,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":1,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":1,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":1,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":1,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":1,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":1,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":1,"116":0,"117":1,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0},"fnMap":{"1":{"name":"checkValueEquality","line":10,"loc":{"start":{"line":10,"column":0},"end":{"line":10,"column":35}}},"2":{"name":"projectForUnique","line":17,"loc":{"start":{"line":17,"column":0},"end":{"line":17,"column":32}}},"3":{"name":"Index","line":36,"loc":{"start":{"line":36,"column":0},"end":{"line":36,"column":25}}},"4":{"name":"(anonymous_4)","line":52,"loc":{"start":{"line":52,"column":24},"end":{"line":52,"column":43}}},"5":{"name":"(anonymous_5)","line":64,"loc":{"start":{"line":64,"column":25},"end":{"line":64,"column":40}}},"6":{"name":"(anonymous_6)","line":109,"loc":{"start":{"line":109,"column":37},"end":{"line":109,"column":53}}},"7":{"name":"(anonymous_7)","line":138,"loc":{"start":{"line":138,"column":25},"end":{"line":138,"column":40}}},"8":{"name":"(anonymous_8)","line":141,"loc":{"start":{"line":141,"column":39},"end":{"line":141,"column":52}}},"9":{"name":"(anonymous_9)","line":150,"loc":{"start":{"line":150,"column":42},"end":{"line":150,"column":58}}},"10":{"name":"(anonymous_10)","line":162,"loc":{"start":{"line":162,"column":25},"end":{"line":162,"column":51}}},"11":{"name":"(anonymous_11)","line":184,"loc":{"start":{"line":184,"column":37},"end":{"line":184,"column":54}}},"12":{"name":"(anonymous_12)","line":219,"loc":{"start":{"line":219,"column":31},"end":{"line":219,"column":57}}},"13":{"name":"(anonymous_13)","line":225,"loc":{"start":{"line":225,"column":19},"end":{"line":225,"column":35}}},"14":{"name":"(anonymous_14)","line":238,"loc":{"start":{"line":238,"column":30},"end":{"line":238,"column":47}}},"15":{"name":"(anonymous_15)","line":246,"loc":{"start":{"line":246,"column":18},"end":{"line":246,"column":31}}},"16":{"name":"(anonymous_16)","line":247,"loc":{"start":{"line":247,"column":34},"end":{"line":247,"column":49}}},"17":{"name":"(anonymous_17)","line":252,"loc":{"start":{"line":252,"column":30},"end":{"line":252,"column":45}}},"18":{"name":"(anonymous_18)","line":267,"loc":{"start":{"line":267,"column":35},"end":{"line":267,"column":52}}},"19":{"name":"(anonymous_19)","line":276,"loc":{"start":{"line":276,"column":25},"end":{"line":276,"column":37}}},"20":{"name":"(anonymous_20)","line":279,"loc":{"start":{"line":279,"column":31},"end":{"line":279,"column":47}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":10,"column":0},"end":{"line":12,"column":1}},"3":{"start":{"line":11,"column":2},"end":{"line":11,"column":17}},"4":{"start":{"line":17,"column":0},"end":{"line":25,"column":1}},"5":{"start":{"line":18,"column":2},"end":{"line":18,"column":39}},"6":{"start":{"line":18,"column":22},"end":{"line":18,"column":37}},"7":{"start":{"line":19,"column":2},"end":{"line":19,"column":58}},"8":{"start":{"line":19,"column":33},"end":{"line":19,"column":56}},"9":{"start":{"line":20,"column":2},"end":{"line":20,"column":60}},"10":{"start":{"line":20,"column":34},"end":{"line":20,"column":58}},"11":{"start":{"line":21,"column":2},"end":{"line":21,"column":58}},"12":{"start":{"line":21,"column":33},"end":{"line":21,"column":56}},"13":{"start":{"line":22,"column":2},"end":{"line":22,"column":60}},"14":{"start":{"line":22,"column":27},"end":{"line":22,"column":58}},"15":{"start":{"line":24,"column":2},"end":{"line":24,"column":13}},"16":{"start":{"line":36,"column":0},"end":{"line":44,"column":1}},"17":{"start":{"line":37,"column":2},"end":{"line":37,"column":37}},"18":{"start":{"line":38,"column":2},"end":{"line":38,"column":40}},"19":{"start":{"line":39,"column":2},"end":{"line":39,"column":40}},"20":{"start":{"line":41,"column":2},"end":{"line":41,"column":119}},"21":{"start":{"line":43,"column":2},"end":{"line":43,"column":15}},"22":{"start":{"line":52,"column":0},"end":{"line":56,"column":2}},"23":{"start":{"line":53,"column":2},"end":{"line":53,"column":53}},"24":{"start":{"line":55,"column":2},"end":{"line":55,"column":40}},"25":{"start":{"line":55,"column":17},"end":{"line":55,"column":38}},"26":{"start":{"line":64,"column":0},"end":{"line":100,"column":2}},"27":{"start":{"line":65,"column":2},"end":{"line":67,"column":5}},"28":{"start":{"line":69,"column":2},"end":{"line":69,"column":66}},"29":{"start":{"line":69,"column":27},"end":{"line":69,"column":56}},"30":{"start":{"line":69,"column":57},"end":{"line":69,"column":64}},"31":{"start":{"line":71,"column":2},"end":{"line":71,"column":47}},"32":{"start":{"line":74,"column":2},"end":{"line":74,"column":51}},"33":{"start":{"line":74,"column":42},"end":{"line":74,"column":49}},"34":{"start":{"line":76,"column":2},"end":{"line":99,"column":3}},"35":{"start":{"line":77,"column":4},"end":{"line":77,"column":31}},"36":{"start":{"line":80,"column":4},"end":{"line":80,"column":41}},"37":{"start":{"line":82,"column":4},"end":{"line":90,"column":5}},"38":{"start":{"line":83,"column":6},"end":{"line":89,"column":7}},"39":{"start":{"line":84,"column":8},"end":{"line":84,"column":39}},"40":{"start":{"line":86,"column":8},"end":{"line":86,"column":18}},"41":{"start":{"line":87,"column":8},"end":{"line":87,"column":21}},"42":{"start":{"line":88,"column":8},"end":{"line":88,"column":14}},"43":{"start":{"line":92,"column":4},"end":{"line":98,"column":5}},"44":{"start":{"line":93,"column":6},"end":{"line":95,"column":7}},"45":{"start":{"line":94,"column":8},"end":{"line":94,"column":39}},"46":{"start":{"line":97,"column":6},"end":{"line":97,"column":18}},"47":{"start":{"line":109,"column":0},"end":{"line":129,"column":2}},"48":{"start":{"line":110,"column":2},"end":{"line":110,"column":25}},"49":{"start":{"line":112,"column":2},"end":{"line":120,"column":3}},"50":{"start":{"line":113,"column":4},"end":{"line":119,"column":5}},"51":{"start":{"line":114,"column":6},"end":{"line":114,"column":27}},"52":{"start":{"line":116,"column":6},"end":{"line":116,"column":16}},"53":{"start":{"line":117,"column":6},"end":{"line":117,"column":19}},"54":{"start":{"line":118,"column":6},"end":{"line":118,"column":12}},"55":{"start":{"line":122,"column":2},"end":{"line":128,"column":3}},"56":{"start":{"line":123,"column":4},"end":{"line":125,"column":5}},"57":{"start":{"line":124,"column":6},"end":{"line":124,"column":27}},"58":{"start":{"line":127,"column":4},"end":{"line":127,"column":16}},"59":{"start":{"line":138,"column":0},"end":{"line":154,"column":2}},"60":{"start":{"line":139,"column":2},"end":{"line":139,"column":23}},"61":{"start":{"line":141,"column":2},"end":{"line":141,"column":83}},"62":{"start":{"line":141,"column":27},"end":{"line":141,"column":73}},"63":{"start":{"line":141,"column":54},"end":{"line":141,"column":69}},"64":{"start":{"line":141,"column":74},"end":{"line":141,"column":81}},"65":{"start":{"line":143,"column":2},"end":{"line":143,"column":47}},"66":{"start":{"line":145,"column":2},"end":{"line":145,"column":51}},"67":{"start":{"line":145,"column":42},"end":{"line":145,"column":49}},"68":{"start":{"line":147,"column":2},"end":{"line":153,"column":3}},"69":{"start":{"line":148,"column":4},"end":{"line":148,"column":31}},"70":{"start":{"line":150,"column":4},"end":{"line":152,"column":7}},"71":{"start":{"line":151,"column":6},"end":{"line":151,"column":34}},"72":{"start":{"line":162,"column":0},"end":{"line":173,"column":2}},"73":{"start":{"line":163,"column":2},"end":{"line":163,"column":72}},"74":{"start":{"line":163,"column":30},"end":{"line":163,"column":62}},"75":{"start":{"line":163,"column":63},"end":{"line":163,"column":70}},"76":{"start":{"line":165,"column":2},"end":{"line":165,"column":22}},"77":{"start":{"line":167,"column":2},"end":{"line":172,"column":3}},"78":{"start":{"line":168,"column":4},"end":{"line":168,"column":24}},"79":{"start":{"line":170,"column":4},"end":{"line":170,"column":24}},"80":{"start":{"line":171,"column":4},"end":{"line":171,"column":12}},"81":{"start":{"line":184,"column":0},"end":{"line":213,"column":2}},"82":{"start":{"line":185,"column":2},"end":{"line":185,"column":25}},"83":{"start":{"line":187,"column":2},"end":{"line":189,"column":3}},"84":{"start":{"line":188,"column":4},"end":{"line":188,"column":33}},"85":{"start":{"line":191,"column":2},"end":{"line":199,"column":3}},"86":{"start":{"line":192,"column":4},"end":{"line":198,"column":5}},"87":{"start":{"line":193,"column":6},"end":{"line":193,"column":35}},"88":{"start":{"line":195,"column":6},"end":{"line":195,"column":16}},"89":{"start":{"line":196,"column":6},"end":{"line":196,"column":19}},"90":{"start":{"line":197,"column":6},"end":{"line":197,"column":12}},"91":{"start":{"line":202,"column":2},"end":{"line":212,"column":3}},"92":{"start":{"line":203,"column":4},"end":{"line":205,"column":5}},"93":{"start":{"line":204,"column":6},"end":{"line":204,"column":35}},"94":{"start":{"line":207,"column":4},"end":{"line":209,"column":5}},"95":{"start":{"line":208,"column":6},"end":{"line":208,"column":35}},"96":{"start":{"line":211,"column":4},"end":{"line":211,"column":16}},"97":{"start":{"line":219,"column":0},"end":{"line":230,"column":2}},"98":{"start":{"line":220,"column":2},"end":{"line":220,"column":18}},"99":{"start":{"line":222,"column":2},"end":{"line":229,"column":3}},"100":{"start":{"line":223,"column":4},"end":{"line":223,"column":32}},"101":{"start":{"line":225,"column":4},"end":{"line":227,"column":7}},"102":{"start":{"line":226,"column":6},"end":{"line":226,"column":64}},"103":{"start":{"line":228,"column":4},"end":{"line":228,"column":24}},"104":{"start":{"line":238,"column":0},"end":{"line":258,"column":2}},"105":{"start":{"line":239,"column":2},"end":{"line":239,"column":18}},"106":{"start":{"line":241,"column":2},"end":{"line":257,"column":3}},"107":{"start":{"line":242,"column":4},"end":{"line":242,"column":35}},"108":{"start":{"line":244,"column":4},"end":{"line":244,"column":28}},"109":{"start":{"line":246,"column":4},"end":{"line":250,"column":7}},"110":{"start":{"line":247,"column":6},"end":{"line":249,"column":9}},"111":{"start":{"line":248,"column":8},"end":{"line":248,"column":28}},"112":{"start":{"line":252,"column":4},"end":{"line":254,"column":7}},"113":{"start":{"line":253,"column":6},"end":{"line":253,"column":26}},"114":{"start":{"line":256,"column":4},"end":{"line":256,"column":15}},"115":{"start":{"line":267,"column":0},"end":{"line":269,"column":2}},"116":{"start":{"line":268,"column":2},"end":{"line":268,"column":40}},"117":{"start":{"line":276,"column":0},"end":{"line":288,"column":2}},"118":{"start":{"line":277,"column":2},"end":{"line":277,"column":15}},"119":{"start":{"line":279,"column":2},"end":{"line":285,"column":5}},"120":{"start":{"line":280,"column":4},"end":{"line":280,"column":10}},"121":{"start":{"line":282,"column":4},"end":{"line":284,"column":5}},"122":{"start":{"line":283,"column":6},"end":{"line":283,"column":29}},"123":{"start":{"line":287,"column":2},"end":{"line":287,"column":13}},"124":{"start":{"line":294,"column":0},"end":{"line":294,"column":23}}},"branchMap":{"1":{"line":18,"type":"if","locations":[{"start":{"line":18,"column":2},"end":{"line":18,"column":2}},{"start":{"line":18,"column":2},"end":{"line":18,"column":2}}]},"2":{"line":19,"type":"if","locations":[{"start":{"line":19,"column":2},"end":{"line":19,"column":2}},{"start":{"line":19,"column":2},"end":{"line":19,"column":2}}]},"3":{"line":20,"type":"if","locations":[{"start":{"line":20,"column":2},"end":{"line":20,"column":2}},{"start":{"line":20,"column":2},"end":{"line":20,"column":2}}]},"4":{"line":21,"type":"if","locations":[{"start":{"line":21,"column":2},"end":{"line":21,"column":2}},{"start":{"line":21,"column":2},"end":{"line":21,"column":2}}]},"5":{"line":22,"type":"if","locations":[{"start":{"line":22,"column":2},"end":{"line":22,"column":2}},{"start":{"line":22,"column":2},"end":{"line":22,"column":2}}]},"6":{"line":38,"type":"binary-expr","locations":[{"start":{"line":38,"column":16},"end":{"line":38,"column":30}},{"start":{"line":38,"column":34},"end":{"line":38,"column":39}}]},"7":{"line":39,"type":"binary-expr","locations":[{"start":{"line":39,"column":16},"end":{"line":39,"column":30}},{"start":{"line":39,"column":34},"end":{"line":39,"column":39}}]},"8":{"line":55,"type":"if","locations":[{"start":{"line":55,"column":2},"end":{"line":55,"column":2}},{"start":{"line":55,"column":2},"end":{"line":55,"column":2}}]},"9":{"line":69,"type":"if","locations":[{"start":{"line":69,"column":2},"end":{"line":69,"column":2}},{"start":{"line":69,"column":2},"end":{"line":69,"column":2}}]},"10":{"line":74,"type":"if","locations":[{"start":{"line":74,"column":2},"end":{"line":74,"column":2}},{"start":{"line":74,"column":2},"end":{"line":74,"column":2}}]},"11":{"line":74,"type":"binary-expr","locations":[{"start":{"line":74,"column":6},"end":{"line":74,"column":23}},{"start":{"line":74,"column":27},"end":{"line":74,"column":38}}]},"12":{"line":76,"type":"if","locations":[{"start":{"line":76,"column":2},"end":{"line":76,"column":2}},{"start":{"line":76,"column":2},"end":{"line":76,"column":2}}]},"13":{"line":92,"type":"if","locations":[{"start":{"line":92,"column":4},"end":{"line":92,"column":4}},{"start":{"line":92,"column":4},"end":{"line":92,"column":4}}]},"14":{"line":122,"type":"if","locations":[{"start":{"line":122,"column":2},"end":{"line":122,"column":2}},{"start":{"line":122,"column":2},"end":{"line":122,"column":2}}]},"15":{"line":141,"type":"if","locations":[{"start":{"line":141,"column":2},"end":{"line":141,"column":2}},{"start":{"line":141,"column":2},"end":{"line":141,"column":2}}]},"16":{"line":145,"type":"if","locations":[{"start":{"line":145,"column":2},"end":{"line":145,"column":2}},{"start":{"line":145,"column":2},"end":{"line":145,"column":2}}]},"17":{"line":145,"type":"binary-expr","locations":[{"start":{"line":145,"column":6},"end":{"line":145,"column":23}},{"start":{"line":145,"column":27},"end":{"line":145,"column":38}}]},"18":{"line":147,"type":"if","locations":[{"start":{"line":147,"column":2},"end":{"line":147,"column":2}},{"start":{"line":147,"column":2},"end":{"line":147,"column":2}}]},"19":{"line":163,"type":"if","locations":[{"start":{"line":163,"column":2},"end":{"line":163,"column":2}},{"start":{"line":163,"column":2},"end":{"line":163,"column":2}}]},"20":{"line":202,"type":"if","locations":[{"start":{"line":202,"column":2},"end":{"line":202,"column":2}},{"start":{"line":202,"column":2},"end":{"line":202,"column":2}}]},"21":{"line":222,"type":"if","locations":[{"start":{"line":222,"column":2},"end":{"line":222,"column":2}},{"start":{"line":222,"column":2},"end":{"line":222,"column":2}}]},"22":{"line":241,"type":"if","locations":[{"start":{"line":241,"column":2},"end":{"line":241,"column":2}},{"start":{"line":241,"column":2},"end":{"line":241,"column":2}}]}},"code":["var BinarySearchTree = require('binary-search-tree').AVLTree","  , model = require('./model')","  , _ = require('underscore')","  , util = require('util')","  ;","","/**"," * Two indexed pointers are equal iif they point to the same place"," */","function checkValueEquality (a, b) {","  return a === b;","}","","/**"," * Type-aware projection"," */","function projectForUnique (elt) {","  if (elt === null) { return '$null'; }","  if (typeof elt === 'string') { return '$string' + elt; }","  if (typeof elt === 'boolean') { return '$boolean' + elt; }","  if (typeof elt === 'number') { return '$number' + elt; }","  if (util.isArray(elt)) { return '$date' + elt.getTime(); }","","  return elt;   // Arrays and objects, will check for pointer equality","}","","","/**"," * Create a new index"," * All methods on an index guarantee that either the whole operation was successful and the index changed"," * or the operation was unsuccessful and an error is thrown while the index is unchanged"," * @param {String} options.fieldName On which field should the index apply (can use dot notation to index on sub fields)"," * @param {Boolean} options.unique Optional, enforce a unique constraint (default: false)"," * @param {Boolean} options.sparse Optional, allow a sparse index (we can have documents for which fieldName is undefined) (default: false)"," */","function Index (options) {","  this.fieldName = options.fieldName;","  this.unique = options.unique || false;","  this.sparse = options.sparse || false;","","  this.treeOptions = { unique: this.unique, compareKeys: model.compareThings, checkValueEquality: checkValueEquality };","","  this.reset();   // No data in the beginning","}","","","/**"," * Reset an index"," * @param {Document or Array of documents} newData Optional, data to initialize the index with"," *                                                 If an error is thrown during insertion, the index is not modified"," */","Index.prototype.reset = function (newData) {","  this.tree = new BinarySearchTree(this.treeOptions);","","  if (newData) { this.insert(newData); }","};","","","/**"," * Insert a new document in the index"," * If an array is passed, we insert all its elements (if one insertion fails the index is not modified)"," * O(log(n))"," */","Index.prototype.insert = function (doc) {","  var key, self = this","    , keys, i, failingI, error","    ;","","  if (util.isArray(doc)) { this.insertMultipleDocs(doc); return; }","","  key = model.getDotValue(doc, this.fieldName);","","  // We don't index documents that don't contain the field if the index is sparse","  if (key === undefined && this.sparse) { return; }","","  if (!util.isArray(key)) {","    this.tree.insert(key, doc);","  } else {","    // If an insert fails due to a unique constraint, roll back all inserts before it","    keys = _.uniq(key, projectForUnique);","","    for (i = 0; i < keys.length; i += 1) {","      try {","        this.tree.insert(keys[i], doc);","      } catch (e) {","        error = e;","        failingI = i;","        break;","      }","    }","","    if (error) {","      for (i = 0; i < failingI; i += 1) {","        this.tree.delete(keys[i], doc);","      }","","      throw error;","    }","  }","};","","","/**"," * Insert an array of documents in the index"," * If a constraint is violated, the changes should be rolled back and an error thrown"," *"," * @API private"," */","Index.prototype.insertMultipleDocs = function (docs) {","  var i, error, failingI;","","  for (i = 0; i < docs.length; i += 1) {","    try {","      this.insert(docs[i]);","    } catch (e) {","      error = e;","      failingI = i;","      break;","    }","  }","","  if (error) {","    for (i = 0; i < failingI; i += 1) {","      this.remove(docs[i]);","    }","","    throw error;","  }","};","","","/**"," * Remove a document from the index"," * If an array is passed, we remove all its elements"," * The remove operation is safe with regards to the 'unique' constraint"," * O(log(n))"," */","Index.prototype.remove = function (doc) {","  var key, self = this;","","  if (util.isArray(doc)) { doc.forEach(function (d) { self.remove(d); }); return; }","","  key = model.getDotValue(doc, this.fieldName);","","  if (key === undefined && this.sparse) { return; }","","  if (!util.isArray(key)) {","    this.tree.delete(key, doc);","  } else {","    _.uniq(key, projectForUnique).forEach(function (_key) {","      self.tree.delete(_key, doc);","    });","  }","};","","","/**"," * Update a document in the index"," * If a constraint is violated, changes are rolled back and an error thrown"," * Naive implementation, still in O(log(n))"," */","Index.prototype.update = function (oldDoc, newDoc) {","  if (util.isArray(oldDoc)) { this.updateMultipleDocs(oldDoc); return; }","","  this.remove(oldDoc);","","  try {","    this.insert(newDoc);","  } catch (e) {","    this.insert(oldDoc);","    throw e;","  }","};","","","/**"," * Update multiple documents in the index"," * If a constraint is violated, the changes need to be rolled back"," * and an error thrown"," * @param {Array of oldDoc, newDoc pairs} pairs"," *"," * @API private"," */","Index.prototype.updateMultipleDocs = function (pairs) {","  var i, failingI, error;","","  for (i = 0; i < pairs.length; i += 1) {","    this.remove(pairs[i].oldDoc);","  }","","  for (i = 0; i < pairs.length; i += 1) {","    try {","      this.insert(pairs[i].newDoc);","    } catch (e) {","      error = e;","      failingI = i;","      break;","    }","  }","","  // If an error was raised, roll back changes in the inverse order","  if (error) {","    for (i = 0; i < failingI; i += 1) {","      this.remove(pairs[i].newDoc);","    }","","    for (i = 0; i < pairs.length; i += 1) {","      this.insert(pairs[i].oldDoc);","    }","","    throw error;","  }","};","","","/**"," * Revert an update"," */","Index.prototype.revertUpdate = function (oldDoc, newDoc) {","  var revert = [];","","  if (!util.isArray(oldDoc)) {","    this.update(newDoc, oldDoc);","  } else {","    oldDoc.forEach(function (pair) {","      revert.push({ oldDoc: pair.newDoc, newDoc: pair.oldDoc });","    });","    this.update(revert);","  }","};","","","/**"," * Get all documents in index whose key match value (if it is a Thing) or one of the elements of value (if it is an array of Things)"," * @param {Thing} value Value to match the key against"," * @return {Array of documents}"," */","Index.prototype.getMatching = function (value) {","  var self = this;","","  if (!util.isArray(value)) {","    return self.tree.search(value);","  } else {","    var _res = {}, res = [];","","    value.forEach(function (v) {","      self.getMatching(v).forEach(function (doc) {","        _res[doc._id] = doc;","      });","    });","","    Object.keys(_res).forEach(function (_id) {","      res.push(_res[_id]);","    });","","    return res;","  }","};","","","/**"," * Get all documents in index whose key is between bounds are they are defined by query"," * Documents are sorted by key"," * @param {Query} query"," * @return {Array of documents}"," */","Index.prototype.getBetweenBounds = function (query) {","  return this.tree.betweenBounds(query);","};","","","/**"," * Get all elements in the index"," * @return {Array of documents}"," */","Index.prototype.getAll = function () {","  var res = [];","","  this.tree.executeOnEveryNode(function (node) {","    var i;","","    for (i = 0; i < node.data.length; i += 1) {","      res.push(node.data[i]);","    }","  });","","  return res;","};","","","","","// Interface","module.exports = Index;",""],"l":{"1":1,"10":1,"11":0,"17":1,"18":0,"19":0,"20":0,"21":0,"22":0,"24":0,"36":1,"37":0,"38":0,"39":0,"41":0,"43":0,"52":1,"53":0,"55":0,"64":1,"65":0,"69":0,"71":0,"74":0,"76":0,"77":0,"80":0,"82":0,"83":0,"84":0,"86":0,"87":0,"88":0,"92":0,"93":0,"94":0,"97":0,"109":1,"110":0,"112":0,"113":0,"114":0,"116":0,"117":0,"118":0,"122":0,"123":0,"124":0,"127":0,"138":1,"139":0,"141":0,"143":0,"145":0,"147":0,"148":0,"150":0,"151":0,"162":1,"163":0,"165":0,"167":0,"168":0,"170":0,"171":0,"184":1,"185":0,"187":0,"188":0,"191":0,"192":0,"193":0,"195":0,"196":0,"197":0,"202":0,"203":0,"204":0,"207":0,"208":0,"211":0,"219":1,"220":0,"222":0,"223":0,"225":0,"226":0,"228":0,"238":1,"239":0,"241":0,"242":0,"244":0,"246":0,"247":0,"248":0,"252":0,"253":0,"256":0,"267":1,"268":0,"276":1,"277":0,"279":0,"280":0,"282":0,"283":0,"287":0,"294":1}},"/home/travis/build/npmtest/node-npmtest-nedb/nedb/lib/persistence.js":{"path":"/home/travis/build/npmtest/node-npmtest-nedb/nedb/lib/persistence.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":1,"33":0,"34":0,"35":0,"36":1,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":1,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":1,"72":0,"73":1,"74":0,"75":0,"76":0,"77":0,"78":1,"79":0,"80":0,"81":1,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":1,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":1,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0,0,0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0},"fnMap":{"1":{"name":"Persistence","line":23,"loc":{"start":{"line":23,"column":0},"end":{"line":23,"column":31}}},"2":{"name":"(anonymous_2)","line":42,"loc":{"start":{"line":42,"column":58},"end":{"line":42,"column":71}}},"3":{"name":"(anonymous_3)","line":43,"loc":{"start":{"line":43,"column":64},"end":{"line":43,"column":77}}},"4":{"name":"(anonymous_4)","line":71,"loc":{"start":{"line":71,"column":36},"end":{"line":71,"column":55}}},"5":{"name":"(anonymous_5)","line":72,"loc":{"start":{"line":72,"column":23},"end":{"line":72,"column":35}}},"6":{"name":"(anonymous_6)","line":75,"loc":{"start":{"line":75,"column":22},"end":{"line":75,"column":37}}},"7":{"name":"(anonymous_7)","line":85,"loc":{"start":{"line":85,"column":31},"end":{"line":85,"column":68}}},"8":{"name":"(anonymous_8)","line":120,"loc":{"start":{"line":120,"column":46},"end":{"line":120,"column":60}}},"9":{"name":"(anonymous_9)","line":121,"loc":{"start":{"line":121,"column":23},"end":{"line":121,"column":35}}},"10":{"name":"(anonymous_10)","line":128,"loc":{"start":{"line":128,"column":31},"end":{"line":128,"column":46}}},"11":{"name":"(anonymous_11)","line":131,"loc":{"start":{"line":131,"column":39},"end":{"line":131,"column":60}}},"12":{"name":"(anonymous_12)","line":137,"loc":{"start":{"line":137,"column":55},"end":{"line":137,"column":70}}},"13":{"name":"(anonymous_13)","line":148,"loc":{"start":{"line":148,"column":40},"end":{"line":148,"column":52}}},"14":{"name":"(anonymous_14)","line":157,"loc":{"start":{"line":157,"column":50},"end":{"line":157,"column":70}}},"15":{"name":"(anonymous_15)","line":165,"loc":{"start":{"line":165,"column":46},"end":{"line":165,"column":58}}},"16":{"name":"(anonymous_16)","line":174,"loc":{"start":{"line":174,"column":43},"end":{"line":174,"column":55}}},"17":{"name":"(anonymous_17)","line":185,"loc":{"start":{"line":185,"column":40},"end":{"line":185,"column":63}}},"18":{"name":"(anonymous_18)","line":188,"loc":{"start":{"line":188,"column":23},"end":{"line":188,"column":35}}},"19":{"name":"(anonymous_19)","line":194,"loc":{"start":{"line":194,"column":18},"end":{"line":194,"column":33}}},"20":{"name":"(anonymous_20)","line":200,"loc":{"start":{"line":200,"column":55},"end":{"line":200,"column":70}}},"21":{"name":"(anonymous_21)","line":210,"loc":{"start":{"line":210,"column":37},"end":{"line":210,"column":56}}},"22":{"name":"(anonymous_22)","line":245,"loc":{"start":{"line":245,"column":32},"end":{"line":245,"column":45}}},"23":{"name":"(anonymous_23)","line":263,"loc":{"start":{"line":263,"column":37},"end":{"line":263,"column":51}}},"24":{"name":"(anonymous_24)","line":264,"loc":{"start":{"line":264,"column":23},"end":{"line":264,"column":35}}},"25":{"name":"(anonymous_25)","line":274,"loc":{"start":{"line":274,"column":4},"end":{"line":274,"column":18}}},"26":{"name":"(anonymous_26)","line":275,"loc":{"start":{"line":275,"column":69},"end":{"line":275,"column":84}}},"27":{"name":"(anonymous_27)","line":276,"loc":{"start":{"line":276,"column":55},"end":{"line":276,"column":70}}},"28":{"name":"(anonymous_28)","line":277,"loc":{"start":{"line":277,"column":50},"end":{"line":277,"column":74}}},"29":{"name":"(anonymous_29)","line":287,"loc":{"start":{"line":287,"column":53},"end":{"line":287,"column":68}}},"30":{"name":"(anonymous_30)","line":304,"loc":{"start":{"line":304,"column":5},"end":{"line":304,"column":20}}}},"statementMap":{"1":{"start":{"line":8,"column":0},"end":{"line":14,"column":3}},"2":{"start":{"line":23,"column":0},"end":{"line":64,"column":1}},"3":{"start":{"line":24,"column":2},"end":{"line":24,"column":25}},"4":{"start":{"line":26,"column":2},"end":{"line":26,"column":23}},"5":{"start":{"line":27,"column":2},"end":{"line":27,"column":43}},"6":{"start":{"line":28,"column":2},"end":{"line":28,"column":35}},"7":{"start":{"line":29,"column":2},"end":{"line":29,"column":113}},"8":{"start":{"line":31,"column":2},"end":{"line":33,"column":3}},"9":{"start":{"line":32,"column":4},"end":{"line":32,"column":107}},"10":{"start":{"line":36,"column":2},"end":{"line":38,"column":3}},"11":{"start":{"line":37,"column":4},"end":{"line":37,"column":140}},"12":{"start":{"line":39,"column":2},"end":{"line":41,"column":3}},"13":{"start":{"line":40,"column":4},"end":{"line":40,"column":140}},"14":{"start":{"line":42,"column":2},"end":{"line":42,"column":85}},"15":{"start":{"line":42,"column":73},"end":{"line":42,"column":82}},"16":{"start":{"line":43,"column":2},"end":{"line":43,"column":91}},"17":{"start":{"line":43,"column":79},"end":{"line":43,"column":88}},"18":{"start":{"line":44,"column":2},"end":{"line":51,"column":3}},"19":{"start":{"line":45,"column":4},"end":{"line":50,"column":5}},"20":{"start":{"line":46,"column":6},"end":{"line":46,"column":40}},"21":{"start":{"line":47,"column":6},"end":{"line":49,"column":7}},"22":{"start":{"line":48,"column":8},"end":{"line":48,"column":145}},"23":{"start":{"line":54,"column":2},"end":{"line":63,"column":3}},"24":{"start":{"line":55,"column":4},"end":{"line":55,"column":86}},"25":{"start":{"line":56,"column":4},"end":{"line":56,"column":71}},"26":{"start":{"line":57,"column":4},"end":{"line":57,"column":86}},"27":{"start":{"line":58,"column":4},"end":{"line":58,"column":74}},"28":{"start":{"line":59,"column":4},"end":{"line":59,"column":50}},"29":{"start":{"line":60,"column":4},"end":{"line":60,"column":75}},"30":{"start":{"line":61,"column":4},"end":{"line":61,"column":86}},"31":{"start":{"line":62,"column":4},"end":{"line":62,"column":91}},"32":{"start":{"line":71,"column":0},"end":{"line":76,"column":2}},"33":{"start":{"line":72,"column":2},"end":{"line":73,"column":5}},"34":{"start":{"line":75,"column":2},"end":{"line":75,"column":64}},"35":{"start":{"line":75,"column":39},"end":{"line":75,"column":60}},"36":{"start":{"line":85,"column":0},"end":{"line":111,"column":1}},"37":{"start":{"line":86,"column":2},"end":{"line":86,"column":11}},"38":{"start":{"line":88,"column":2},"end":{"line":108,"column":3}},"39":{"start":{"line":91,"column":6},"end":{"line":91,"column":61}},"40":{"start":{"line":92,"column":6},"end":{"line":92,"column":87}},"41":{"start":{"line":92,"column":19},"end":{"line":92,"column":85}},"42":{"start":{"line":93,"column":6},"end":{"line":93,"column":38}},"43":{"start":{"line":94,"column":6},"end":{"line":94,"column":12}},"44":{"start":{"line":96,"column":6},"end":{"line":96,"column":30}},"45":{"start":{"line":97,"column":6},"end":{"line":97,"column":90}},"46":{"start":{"line":97,"column":19},"end":{"line":97,"column":88}},"47":{"start":{"line":98,"column":6},"end":{"line":98,"column":72}},"48":{"start":{"line":99,"column":6},"end":{"line":99,"column":12}},"49":{"start":{"line":101,"column":6},"end":{"line":101,"column":30}},"50":{"start":{"line":102,"column":6},"end":{"line":102,"column":90}},"51":{"start":{"line":102,"column":19},"end":{"line":102,"column":88}},"52":{"start":{"line":103,"column":6},"end":{"line":103,"column":49}},"53":{"start":{"line":104,"column":6},"end":{"line":104,"column":12}},"54":{"start":{"line":106,"column":6},"end":{"line":106,"column":98}},"55":{"start":{"line":107,"column":6},"end":{"line":107,"column":12}},"56":{"start":{"line":110,"column":2},"end":{"line":110,"column":56}},"57":{"start":{"line":120,"column":0},"end":{"line":142,"column":2}},"58":{"start":{"line":121,"column":2},"end":{"line":124,"column":5}},"59":{"start":{"line":126,"column":2},"end":{"line":126,"column":51}},"60":{"start":{"line":126,"column":27},"end":{"line":126,"column":49}},"61":{"start":{"line":128,"column":2},"end":{"line":130,"column":5}},"62":{"start":{"line":129,"column":4},"end":{"line":129,"column":70}},"63":{"start":{"line":131,"column":2},"end":{"line":135,"column":5}},"64":{"start":{"line":132,"column":4},"end":{"line":134,"column":5}},"65":{"start":{"line":133,"column":6},"end":{"line":133,"column":198}},"66":{"start":{"line":137,"column":2},"end":{"line":141,"column":5}},"67":{"start":{"line":138,"column":4},"end":{"line":138,"column":38}},"68":{"start":{"line":138,"column":15},"end":{"line":138,"column":36}},"69":{"start":{"line":139,"column":4},"end":{"line":139,"column":36}},"70":{"start":{"line":140,"column":4},"end":{"line":140,"column":26}},"71":{"start":{"line":148,"column":0},"end":{"line":150,"column":2}},"72":{"start":{"line":149,"column":2},"end":{"line":149,"column":87}},"73":{"start":{"line":157,"column":0},"end":{"line":168,"column":2}},"74":{"start":{"line":158,"column":2},"end":{"line":161,"column":5}},"75":{"start":{"line":163,"column":2},"end":{"line":163,"column":28}},"76":{"start":{"line":165,"column":2},"end":{"line":167,"column":19}},"77":{"start":{"line":166,"column":4},"end":{"line":166,"column":27}},"78":{"start":{"line":174,"column":0},"end":{"line":176,"column":2}},"79":{"start":{"line":175,"column":2},"end":{"line":175,"column":86}},"80":{"start":{"line":175,"column":39},"end":{"line":175,"column":84}},"81":{"start":{"line":185,"column":0},"end":{"line":203,"column":2}},"82":{"start":{"line":186,"column":2},"end":{"line":189,"column":5}},"83":{"start":{"line":192,"column":2},"end":{"line":192,"column":51}},"84":{"start":{"line":192,"column":27},"end":{"line":192,"column":49}},"85":{"start":{"line":194,"column":2},"end":{"line":196,"column":5}},"86":{"start":{"line":195,"column":4},"end":{"line":195,"column":70}},"87":{"start":{"line":198,"column":2},"end":{"line":198,"column":56}},"88":{"start":{"line":198,"column":32},"end":{"line":198,"column":54}},"89":{"start":{"line":200,"column":2},"end":{"line":202,"column":5}},"90":{"start":{"line":201,"column":4},"end":{"line":201,"column":25}},"91":{"start":{"line":210,"column":0},"end":{"line":250,"column":2}},"92":{"start":{"line":211,"column":2},"end":{"line":217,"column":5}},"93":{"start":{"line":219,"column":2},"end":{"line":238,"column":3}},"94":{"start":{"line":220,"column":4},"end":{"line":220,"column":12}},"95":{"start":{"line":222,"column":4},"end":{"line":237,"column":5}},"96":{"start":{"line":223,"column":6},"end":{"line":223,"column":67}},"97":{"start":{"line":224,"column":6},"end":{"line":234,"column":7}},"98":{"start":{"line":225,"column":8},"end":{"line":229,"column":9}},"99":{"start":{"line":226,"column":10},"end":{"line":226,"column":35}},"100":{"start":{"line":228,"column":10},"end":{"line":228,"column":34}},"101":{"start":{"line":230,"column":13},"end":{"line":234,"column":7}},"102":{"start":{"line":231,"column":8},"end":{"line":231,"column":67}},"103":{"start":{"line":232,"column":13},"end":{"line":234,"column":7}},"104":{"start":{"line":233,"column":8},"end":{"line":233,"column":43}},"105":{"start":{"line":236,"column":6},"end":{"line":236,"column":24}},"106":{"start":{"line":241,"column":2},"end":{"line":243,"column":3}},"107":{"start":{"line":242,"column":4},"end":{"line":242,"column":220}},"108":{"start":{"line":245,"column":2},"end":{"line":247,"column":5}},"109":{"start":{"line":246,"column":4},"end":{"line":246,"column":28}},"110":{"start":{"line":249,"column":2},"end":{"line":249,"column":43}},"111":{"start":{"line":263,"column":0},"end":{"line":310,"column":2}},"112":{"start":{"line":264,"column":2},"end":{"line":266,"column":5}},"113":{"start":{"line":268,"column":2},"end":{"line":268,"column":25}},"114":{"start":{"line":271,"column":2},"end":{"line":271,"column":51}},"115":{"start":{"line":271,"column":27},"end":{"line":271,"column":49}},"116":{"start":{"line":273,"column":2},"end":{"line":309,"column":8}},"117":{"start":{"line":275,"column":6},"end":{"line":302,"column":9}},"118":{"start":{"line":276,"column":8},"end":{"line":301,"column":11}},"119":{"start":{"line":277,"column":10},"end":{"line":300,"column":13}},"120":{"start":{"line":278,"column":12},"end":{"line":278,"column":40}},"121":{"start":{"line":278,"column":23},"end":{"line":278,"column":38}},"122":{"start":{"line":280,"column":12},"end":{"line":284,"column":13}},"123":{"start":{"line":281,"column":14},"end":{"line":281,"column":59}},"124":{"start":{"line":283,"column":14},"end":{"line":283,"column":27}},"125":{"start":{"line":287,"column":12},"end":{"line":289,"column":15}},"126":{"start":{"line":288,"column":14},"end":{"line":288,"column":73}},"127":{"start":{"line":292,"column":12},"end":{"line":297,"column":13}},"128":{"start":{"line":293,"column":14},"end":{"line":293,"column":53}},"129":{"start":{"line":295,"column":14},"end":{"line":295,"column":37}},"130":{"start":{"line":296,"column":14},"end":{"line":296,"column":27}},"131":{"start":{"line":299,"column":12},"end":{"line":299,"column":58}},"132":{"start":{"line":305,"column":7},"end":{"line":305,"column":41}},"133":{"start":{"line":305,"column":18},"end":{"line":305,"column":39}},"134":{"start":{"line":307,"column":7},"end":{"line":307,"column":40}},"135":{"start":{"line":308,"column":7},"end":{"line":308,"column":29}},"136":{"start":{"line":314,"column":0},"end":{"line":314,"column":29}}},"branchMap":{"1":{"line":29,"type":"cond-expr","locations":[{"start":{"line":29,"column":77},"end":{"line":29,"column":106}},{"start":{"line":29,"column":109},"end":{"line":29,"column":112}}]},"2":{"line":31,"type":"if","locations":[{"start":{"line":31,"column":2},"end":{"line":31,"column":2}},{"start":{"line":31,"column":2},"end":{"line":31,"column":2}}]},"3":{"line":31,"type":"binary-expr","locations":[{"start":{"line":31,"column":6},"end":{"line":31,"column":24}},{"start":{"line":31,"column":28},"end":{"line":31,"column":41}},{"start":{"line":31,"column":45},"end":{"line":31,"column":99}}]},"4":{"line":36,"type":"if","locations":[{"start":{"line":36,"column":2},"end":{"line":36,"column":2}},{"start":{"line":36,"column":2},"end":{"line":36,"column":2}}]},"5":{"line":36,"type":"binary-expr","locations":[{"start":{"line":36,"column":6},"end":{"line":36,"column":32}},{"start":{"line":36,"column":36},"end":{"line":36,"column":66}}]},"6":{"line":39,"type":"if","locations":[{"start":{"line":39,"column":2},"end":{"line":39,"column":2}},{"start":{"line":39,"column":2},"end":{"line":39,"column":2}}]},"7":{"line":39,"type":"binary-expr","locations":[{"start":{"line":39,"column":6},"end":{"line":39,"column":33}},{"start":{"line":39,"column":37},"end":{"line":39,"column":66}}]},"8":{"line":42,"type":"binary-expr","locations":[{"start":{"line":42,"column":28},"end":{"line":42,"column":54}},{"start":{"line":42,"column":58},"end":{"line":42,"column":84}}]},"9":{"line":43,"type":"binary-expr","locations":[{"start":{"line":43,"column":31},"end":{"line":43,"column":60}},{"start":{"line":43,"column":64},"end":{"line":43,"column":90}}]},"10":{"line":47,"type":"if","locations":[{"start":{"line":47,"column":6},"end":{"line":47,"column":6}},{"start":{"line":47,"column":6},"end":{"line":47,"column":6}}]},"11":{"line":54,"type":"if","locations":[{"start":{"line":54,"column":2},"end":{"line":54,"column":2}},{"start":{"line":54,"column":2},"end":{"line":54,"column":2}}]},"12":{"line":54,"type":"binary-expr","locations":[{"start":{"line":54,"column":6},"end":{"line":54,"column":19}},{"start":{"line":54,"column":23},"end":{"line":54,"column":48}}]},"13":{"line":72,"type":"binary-expr","locations":[{"start":{"line":72,"column":17},"end":{"line":72,"column":19}},{"start":{"line":72,"column":23},"end":{"line":72,"column":37}}]},"14":{"line":88,"type":"switch","locations":[{"start":{"line":89,"column":4},"end":{"line":89,"column":17}},{"start":{"line":90,"column":4},"end":{"line":94,"column":12}},{"start":{"line":95,"column":4},"end":{"line":99,"column":12}},{"start":{"line":100,"column":4},"end":{"line":104,"column":12}},{"start":{"line":105,"column":4},"end":{"line":107,"column":12}}]},"15":{"line":91,"type":"binary-expr","locations":[{"start":{"line":91,"column":13},"end":{"line":91,"column":37}},{"start":{"line":91,"column":41},"end":{"line":91,"column":60}}]},"16":{"line":92,"type":"if","locations":[{"start":{"line":92,"column":6},"end":{"line":92,"column":6}},{"start":{"line":92,"column":6},"end":{"line":92,"column":6}}]},"17":{"line":97,"type":"if","locations":[{"start":{"line":97,"column":6},"end":{"line":97,"column":6}},{"start":{"line":97,"column":6},"end":{"line":97,"column":6}}]},"18":{"line":102,"type":"if","locations":[{"start":{"line":102,"column":6},"end":{"line":102,"column":6}},{"start":{"line":102,"column":6},"end":{"line":102,"column":6}}]},"19":{"line":121,"type":"binary-expr","locations":[{"start":{"line":121,"column":17},"end":{"line":121,"column":19}},{"start":{"line":121,"column":23},"end":{"line":121,"column":37}}]},"20":{"line":126,"type":"if","locations":[{"start":{"line":126,"column":2},"end":{"line":126,"column":2}},{"start":{"line":126,"column":2},"end":{"line":126,"column":2}}]},"21":{"line":132,"type":"if","locations":[{"start":{"line":132,"column":4},"end":{"line":132,"column":4}},{"start":{"line":132,"column":4},"end":{"line":132,"column":4}}]},"22":{"line":138,"type":"if","locations":[{"start":{"line":138,"column":4},"end":{"line":138,"column":4}},{"start":{"line":138,"column":4},"end":{"line":138,"column":4}}]},"23":{"line":160,"type":"binary-expr","locations":[{"start":{"line":160,"column":30},"end":{"line":160,"column":38}},{"start":{"line":160,"column":42},"end":{"line":160,"column":43}}]},"24":{"line":175,"type":"if","locations":[{"start":{"line":175,"column":2},"end":{"line":175,"column":2}},{"start":{"line":175,"column":2},"end":{"line":175,"column":2}}]},"25":{"line":188,"type":"binary-expr","locations":[{"start":{"line":188,"column":17},"end":{"line":188,"column":19}},{"start":{"line":188,"column":23},"end":{"line":188,"column":37}}]},"26":{"line":192,"type":"if","locations":[{"start":{"line":192,"column":2},"end":{"line":192,"column":2}},{"start":{"line":192,"column":2},"end":{"line":192,"column":2}}]},"27":{"line":198,"type":"if","locations":[{"start":{"line":198,"column":2},"end":{"line":198,"column":2}},{"start":{"line":198,"column":2},"end":{"line":198,"column":2}}]},"28":{"line":224,"type":"if","locations":[{"start":{"line":224,"column":6},"end":{"line":224,"column":6}},{"start":{"line":224,"column":6},"end":{"line":224,"column":6}}]},"29":{"line":225,"type":"if","locations":[{"start":{"line":225,"column":8},"end":{"line":225,"column":8}},{"start":{"line":225,"column":8},"end":{"line":225,"column":8}}]},"30":{"line":230,"type":"if","locations":[{"start":{"line":230,"column":13},"end":{"line":230,"column":13}},{"start":{"line":230,"column":13},"end":{"line":230,"column":13}}]},"31":{"line":230,"type":"binary-expr","locations":[{"start":{"line":230,"column":17},"end":{"line":230,"column":35}},{"start":{"line":230,"column":39},"end":{"line":230,"column":80}}]},"32":{"line":232,"type":"if","locations":[{"start":{"line":232,"column":13},"end":{"line":232,"column":13}},{"start":{"line":232,"column":13},"end":{"line":232,"column":13}}]},"33":{"line":241,"type":"if","locations":[{"start":{"line":241,"column":2},"end":{"line":241,"column":2}},{"start":{"line":241,"column":2},"end":{"line":241,"column":2}}]},"34":{"line":241,"type":"binary-expr","locations":[{"start":{"line":241,"column":6},"end":{"line":241,"column":21}},{"start":{"line":241,"column":25},"end":{"line":241,"column":80}}]},"35":{"line":264,"type":"binary-expr","locations":[{"start":{"line":264,"column":17},"end":{"line":264,"column":19}},{"start":{"line":264,"column":23},"end":{"line":264,"column":37}}]},"36":{"line":271,"type":"if","locations":[{"start":{"line":271,"column":2},"end":{"line":271,"column":2}},{"start":{"line":271,"column":2},"end":{"line":271,"column":2}}]},"37":{"line":278,"type":"if","locations":[{"start":{"line":278,"column":12},"end":{"line":278,"column":12}},{"start":{"line":278,"column":12},"end":{"line":278,"column":12}}]},"38":{"line":305,"type":"if","locations":[{"start":{"line":305,"column":7},"end":{"line":305,"column":7}},{"start":{"line":305,"column":7},"end":{"line":305,"column":7}}]}},"code":["/**"," * Handle every persistence-related task"," * The interface Datastore expects to be implemented is"," * * Persistence.loadDatabase(callback) and callback has signature err"," * * Persistence.persistNewState(newDocs, callback) where newDocs is an array of documents and callback has signature err"," */","","var storage = require('./storage')","  , path = require('path')","  , model = require('./model')","  , async = require('async')","  , customUtils = require('./customUtils')","  , Index = require('./indexes')","  ;","","","/**"," * Create a new Persistence object for database options.db"," * @param {Datastore} options.db"," * @param {Boolean} options.nodeWebkitAppName Optional, specify the name of your NW app if you want options.filename to be relative to the directory where"," *                                            Node Webkit stores application data such as cookies and local storage (the best place to store data in my opinion)"," */","function Persistence (options) {","  var i, j, randomString;","","  this.db = options.db;","  this.inMemoryOnly = this.db.inMemoryOnly;","  this.filename = this.db.filename;","  this.corruptAlertThreshold = options.corruptAlertThreshold !== undefined ? options.corruptAlertThreshold : 0.1;","","  if (!this.inMemoryOnly && this.filename && this.filename.charAt(this.filename.length - 1) === '~') {","    throw new Error(\"The datafile name can't end with a ~, which is reserved for crash safe backup files\");","  }","","  // After serialization and before deserialization hooks with some basic sanity checks","  if (options.afterSerialization && !options.beforeDeserialization) {","    throw new Error(\"Serialization hook defined but deserialization hook undefined, cautiously refusing to start NeDB to prevent dataloss\");","  }","  if (!options.afterSerialization && options.beforeDeserialization) {","    throw new Error(\"Serialization hook undefined but deserialization hook defined, cautiously refusing to start NeDB to prevent dataloss\");","  }","  this.afterSerialization = options.afterSerialization || function (s) { return s; };","  this.beforeDeserialization = options.beforeDeserialization || function (s) { return s; };","  for (i = 1; i < 30; i += 1) {","    for (j = 0; j < 10; j += 1) {","      randomString = customUtils.uid(i);","      if (this.beforeDeserialization(this.afterSerialization(randomString)) !== randomString) {","        throw new Error(\"beforeDeserialization is not the reverse of afterSerialization, cautiously refusing to start NeDB to prevent dataloss\");","      }","    }","  }","","  // For NW apps, store data in the same directory where NW stores application data","  if (this.filename && options.nodeWebkitAppName) {","    console.log(\"==================================================================\");","    console.log(\"WARNING: The nodeWebkitAppName option is deprecated\");","    console.log(\"To get the path to the directory where Node Webkit stores the data\");","    console.log(\"for your app, use the internal nw.gui module like this\");","    console.log(\"require('nw.gui').App.dataPath\");","    console.log(\"See https://github.com/rogerwang/node-webkit/issues/500\");","    console.log(\"==================================================================\");","    this.filename = Persistence.getNWAppFilename(options.nodeWebkitAppName, this.filename);","  }","};","","","/**"," * Check if a directory exists and create it on the fly if it is not the case"," * cb is optional, signature: err"," */","Persistence.ensureDirectoryExists = function (dir, cb) {","  var callback = cb || function () {}","    ;","","  storage.mkdirp(dir, function (err) { return callback(err); });","};","","","","","/**"," * Return the path the datafile if the given filename is relative to the directory where Node Webkit stores"," * data for this application. Probably the best place to store data"," */","Persistence.getNWAppFilename = function (appName, relativeFilename) {","  var home;","","  switch (process.platform) {","    case 'win32':","    case 'win64':","      home = process.env.LOCALAPPDATA || process.env.APPDATA;","      if (!home) { throw new Error(\"Couldn't find the base application data folder\"); }","      home = path.join(home, appName);","      break;","    case 'darwin':","      home = process.env.HOME;","      if (!home) { throw new Error(\"Couldn't find the base application data directory\"); }","      home = path.join(home, 'Library', 'Application Support', appName);","      break;","    case 'linux':","      home = process.env.HOME;","      if (!home) { throw new Error(\"Couldn't find the base application data directory\"); }","      home = path.join(home, '.config', appName);","      break;","    default:","      throw new Error(\"Can't use the Node Webkit relative path for platform \" + process.platform);","      break;","  }","","  return path.join(home, 'nedb-data', relativeFilename);","}","","","/**"," * Persist cached database"," * This serves as a compaction function since the cache always contains only the number of documents in the collection"," * while the data file is append-only so it may grow larger"," * @param {Function} cb Optional callback, signature: err"," */","Persistence.prototype.persistCachedDatabase = function (cb) {","  var callback = cb || function () {}","    , toPersist = ''","    , self = this","    ;","","  if (this.inMemoryOnly) { return callback(null); }","","  this.db.getAllData().forEach(function (doc) {","    toPersist += self.afterSerialization(model.serialize(doc)) + '\\n';","  });","  Object.keys(this.db.indexes).forEach(function (fieldName) {","    if (fieldName != \"_id\") {   // The special _id index is managed by datastore.js, the others need to be persisted","      toPersist += self.afterSerialization(model.serialize({ $$indexCreated: { fieldName: fieldName, unique: self.db.indexes[fieldName].unique, sparse: self.db.indexes[fieldName].sparse }})) + '\\n';","    }","  });","","  storage.crashSafeWriteFile(this.filename, toPersist, function (err) {","    if (err) { return callback(err); }","    self.db.emit('compaction.done');","    return callback(null);","  });","};","","","/**"," * Queue a rewrite of the datafile"," */","Persistence.prototype.compactDatafile = function () {","  this.db.executor.push({ this: this, fn: this.persistCachedDatabase, arguments: [] });","};","","","/**"," * Set automatic compaction every interval ms"," * @param {Number} interval in milliseconds, with an enforced minimum of 5 seconds"," */","Persistence.prototype.setAutocompactionInterval = function (interval) {","  var self = this","    , minInterval = 5000","    , realInterval = Math.max(interval || 0, minInterval)","    ;","","  this.stopAutocompaction();","","  this.autocompactionIntervalId = setInterval(function () {","    self.compactDatafile();","  }, realInterval);","};","","","/**"," * Stop autocompaction (do nothing if autocompaction was not running)"," */","Persistence.prototype.stopAutocompaction = function () {","  if (this.autocompactionIntervalId) { clearInterval(this.autocompactionIntervalId); }","};","","","/**"," * Persist new state for the given newDocs (can be insertion, update or removal)"," * Use an append-only format"," * @param {Array} newDocs Can be empty if no doc was updated/removed"," * @param {Function} cb Optional, signature: err"," */","Persistence.prototype.persistNewState = function (newDocs, cb) {","  var self = this","    , toPersist = ''","    , callback = cb || function () {}","    ;","","  // In-memory only datastore","  if (self.inMemoryOnly) { return callback(null); }","","  newDocs.forEach(function (doc) {","    toPersist += self.afterSerialization(model.serialize(doc)) + '\\n';","  });","","  if (toPersist.length === 0) { return callback(null); }","","  storage.appendFile(self.filename, toPersist, 'utf8', function (err) {","    return callback(err);","  });","};","","","/**"," * From a database's raw data, return the corresponding"," * machine understandable collection"," */","Persistence.prototype.treatRawData = function (rawData) {","  var data = rawData.split('\\n')","    , dataById = {}","    , tdata = []","    , i","    , indexes = {}","    , corruptItems = -1   // Last line of every data file is usually blank so not really corrupt","    ;","","  for (i = 0; i < data.length; i += 1) {","    var doc;","","    try {","      doc = model.deserialize(this.beforeDeserialization(data[i]));","      if (doc._id) {","        if (doc.$$deleted === true) {","          delete dataById[doc._id];","        } else {","          dataById[doc._id] = doc;","        }","      } else if (doc.$$indexCreated && doc.$$indexCreated.fieldName != undefined) {","        indexes[doc.$$indexCreated.fieldName] = doc.$$indexCreated;","      } else if (typeof doc.$$indexRemoved === \"string\") {","        delete indexes[doc.$$indexRemoved];","      }","    } catch (e) {","      corruptItems += 1;","    }","  }","","  // A bit lenient on corruption","  if (data.length > 0 && corruptItems / data.length > this.corruptAlertThreshold) {","    throw new Error(\"More than \" + Math.floor(100 * this.corruptAlertThreshold) + \"% of the data file is corrupt, the wrong beforeDeserialization hook may be used. Cautiously refusing to start NeDB to prevent dataloss\");","  }","","  Object.keys(dataById).forEach(function (k) {","    tdata.push(dataById[k]);","  });","","  return { data: tdata, indexes: indexes };","};","","","/**"," * Load the database"," * 1) Create all indexes"," * 2) Insert all data"," * 3) Compact the database"," * This means pulling data out of the data file or creating it if it doesn't exist"," * Also, all data is persisted right away, which has the effect of compacting the database file"," * This operation is very quick at startup for a big collection (60ms for ~10k docs)"," * @param {Function} cb Optional callback, signature: err"," */","Persistence.prototype.loadDatabase = function (cb) {","  var callback = cb || function () {}","    , self = this","    ;","","  self.db.resetIndexes();","","  // In-memory only datastore","  if (self.inMemoryOnly) { return callback(null); }","","  async.waterfall([","    function (cb) {","      Persistence.ensureDirectoryExists(path.dirname(self.filename), function (err) {","        storage.ensureDatafileIntegrity(self.filename, function (err) {","          storage.readFile(self.filename, 'utf8', function (err, rawData) {","            if (err) { return cb(err); }","","            try {","              var treatedData = self.treatRawData(rawData);","            } catch (e) {","              return cb(e);","            }","","            // Recreate all indexes in the datafile","            Object.keys(treatedData.indexes).forEach(function (key) {","              self.db.indexes[key] = new Index(treatedData.indexes[key]);","            });","","            // Fill cached database (i.e. all indexes) with data","            try {","              self.db.resetIndexes(treatedData.data);","            } catch (e) {","              self.db.resetIndexes();   // Rollback any index which didn't fail","              return cb(e);","            }","","            self.db.persistence.persistCachedDatabase(cb);","          });","        });","      });","    }","  ], function (err) {","       if (err) { return callback(err); }","","       self.db.executor.processBuffer();","       return callback(null);","     });","};","","","// Interface","module.exports = Persistence;",""],"l":{"8":1,"23":1,"24":0,"26":0,"27":0,"28":0,"29":0,"31":0,"32":0,"36":0,"37":0,"39":0,"40":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"71":1,"72":0,"75":0,"85":1,"86":0,"88":0,"91":0,"92":0,"93":0,"94":0,"96":0,"97":0,"98":0,"99":0,"101":0,"102":0,"103":0,"104":0,"106":0,"107":0,"110":0,"120":1,"121":0,"126":0,"128":0,"129":0,"131":0,"132":0,"133":0,"137":0,"138":0,"139":0,"140":0,"148":1,"149":0,"157":1,"158":0,"163":0,"165":0,"166":0,"174":1,"175":0,"185":1,"186":0,"192":0,"194":0,"195":0,"198":0,"200":0,"201":0,"210":1,"211":0,"219":0,"220":0,"222":0,"223":0,"224":0,"225":0,"226":0,"228":0,"230":0,"231":0,"232":0,"233":0,"236":0,"241":0,"242":0,"245":0,"246":0,"249":0,"263":1,"264":0,"268":0,"271":0,"273":0,"275":0,"276":0,"277":0,"278":0,"280":0,"281":0,"283":0,"287":0,"288":0,"292":0,"293":0,"295":0,"296":0,"299":0,"305":0,"307":0,"308":0,"314":1}},"/home/travis/build/npmtest/node-npmtest-nedb/nedb/lib/storage.js":{"path":"/home/travis/build/npmtest/node-npmtest-nedb/nedb/lib/storage.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":0,"11":0,"12":0,"13":0,"14":0,"15":1,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":1,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":1,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0},"fnMap":{"1":{"name":"(anonymous_1)","line":29,"loc":{"start":{"line":29,"column":32},"end":{"line":29,"column":58}}},"2":{"name":"(anonymous_2)","line":30,"loc":{"start":{"line":30,"column":23},"end":{"line":30,"column":41}}},"3":{"name":"(anonymous_3)","line":33,"loc":{"start":{"line":33,"column":25},"end":{"line":33,"column":40}}},"4":{"name":"(anonymous_4)","line":44,"loc":{"start":{"line":44,"column":25},"end":{"line":44,"column":54}}},"5":{"name":"(anonymous_5)","line":58,"loc":{"start":{"line":58,"column":27},"end":{"line":58,"column":46}}},"6":{"name":"(anonymous_6)","line":60,"loc":{"start":{"line":60,"column":17},"end":{"line":60,"column":34}}},"7":{"name":"(anonymous_7)","line":61,"loc":{"start":{"line":61,"column":19},"end":{"line":61,"column":35}}},"8":{"name":"(anonymous_8)","line":82,"loc":{"start":{"line":82,"column":29},"end":{"line":82,"column":59}}},"9":{"name":"(anonymous_9)","line":83,"loc":{"start":{"line":83,"column":23},"end":{"line":83,"column":35}}},"10":{"name":"(anonymous_10)","line":88,"loc":{"start":{"line":88,"column":4},"end":{"line":88,"column":18}}},"11":{"name":"(anonymous_11)","line":89,"loc":{"start":{"line":89,"column":31},"end":{"line":89,"column":49}}},"12":{"name":"(anonymous_12)","line":91,"loc":{"start":{"line":91,"column":43},"end":{"line":91,"column":58}}},"13":{"name":"(anonymous_13)","line":97,"loc":{"start":{"line":97,"column":4},"end":{"line":97,"column":18}}},"14":{"name":"(anonymous_14)","line":98,"loc":{"start":{"line":98,"column":44},"end":{"line":98,"column":59}}},"15":{"name":"(anonymous_15)","line":101,"loc":{"start":{"line":101,"column":4},"end":{"line":101,"column":18}}},"16":{"name":"(anonymous_16)","line":102,"loc":{"start":{"line":102,"column":45},"end":{"line":102,"column":60}}},"17":{"name":"(anonymous_17)","line":105,"loc":{"start":{"line":105,"column":5},"end":{"line":105,"column":20}}},"18":{"name":"(anonymous_18)","line":114,"loc":{"start":{"line":114,"column":34},"end":{"line":114,"column":64}}},"19":{"name":"(anonymous_19)","line":117,"loc":{"start":{"line":117,"column":27},"end":{"line":117,"column":53}}},"20":{"name":"(anonymous_20)","line":121,"loc":{"start":{"line":121,"column":33},"end":{"line":121,"column":62}}},"21":{"name":"(anonymous_21)","line":124,"loc":{"start":{"line":124,"column":55},"end":{"line":124,"column":70}}},"22":{"name":"(anonymous_22)","line":128,"loc":{"start":{"line":128,"column":45},"end":{"line":128,"column":60}}}},"statementMap":{"1":{"start":{"line":10,"column":0},"end":{"line":15,"column":3}},"2":{"start":{"line":17,"column":0},"end":{"line":17,"column":27}},"3":{"start":{"line":18,"column":0},"end":{"line":18,"column":27}},"4":{"start":{"line":19,"column":0},"end":{"line":19,"column":33}},"5":{"start":{"line":20,"column":0},"end":{"line":20,"column":27}},"6":{"start":{"line":21,"column":0},"end":{"line":21,"column":35}},"7":{"start":{"line":22,"column":0},"end":{"line":22,"column":31}},"8":{"start":{"line":23,"column":0},"end":{"line":23,"column":24}},"9":{"start":{"line":29,"column":0},"end":{"line":35,"column":2}},"10":{"start":{"line":30,"column":2},"end":{"line":34,"column":5}},"11":{"start":{"line":31,"column":4},"end":{"line":31,"column":43}},"12":{"start":{"line":31,"column":19},"end":{"line":31,"column":41}},"13":{"start":{"line":33,"column":4},"end":{"line":33,"column":67}},"14":{"start":{"line":33,"column":42},"end":{"line":33,"column":63}},"15":{"start":{"line":44,"column":0},"end":{"line":73,"column":2}},"16":{"start":{"line":45,"column":2},"end":{"line":45,"column":22}},"17":{"start":{"line":46,"column":2},"end":{"line":52,"column":3}},"18":{"start":{"line":47,"column":4},"end":{"line":47,"column":23}},"19":{"start":{"line":48,"column":4},"end":{"line":48,"column":17}},"20":{"start":{"line":50,"column":4},"end":{"line":50,"column":32}},"21":{"start":{"line":51,"column":4},"end":{"line":51,"column":39}},"22":{"start":{"line":56,"column":2},"end":{"line":56,"column":113}},"23":{"start":{"line":56,"column":89},"end":{"line":56,"column":111}},"24":{"start":{"line":58,"column":2},"end":{"line":72,"column":5}},"25":{"start":{"line":59,"column":4},"end":{"line":59,"column":38}},"26":{"start":{"line":59,"column":15},"end":{"line":59,"column":36}},"27":{"start":{"line":60,"column":4},"end":{"line":71,"column":7}},"28":{"start":{"line":61,"column":6},"end":{"line":70,"column":9}},"29":{"start":{"line":62,"column":8},"end":{"line":69,"column":9}},"30":{"start":{"line":63,"column":10},"end":{"line":63,"column":58}},"31":{"start":{"line":64,"column":10},"end":{"line":64,"column":33}},"32":{"start":{"line":65,"column":10},"end":{"line":65,"column":32}},"33":{"start":{"line":66,"column":10},"end":{"line":66,"column":29}},"34":{"start":{"line":68,"column":10},"end":{"line":68,"column":32}},"35":{"start":{"line":82,"column":0},"end":{"line":106,"column":2}},"36":{"start":{"line":83,"column":2},"end":{"line":84,"column":36}},"37":{"start":{"line":86,"column":2},"end":{"line":105,"column":46}},"38":{"start":{"line":89,"column":6},"end":{"line":95,"column":9}},"39":{"start":{"line":90,"column":8},"end":{"line":94,"column":9}},"40":{"start":{"line":91,"column":10},"end":{"line":91,"column":79}},"41":{"start":{"line":91,"column":60},"end":{"line":91,"column":75}},"42":{"start":{"line":93,"column":10},"end":{"line":93,"column":22}},"43":{"start":{"line":98,"column":6},"end":{"line":98,"column":80}},"44":{"start":{"line":98,"column":61},"end":{"line":98,"column":76}},"45":{"start":{"line":102,"column":6},"end":{"line":102,"column":81}},"46":{"start":{"line":102,"column":62},"end":{"line":102,"column":77}},"47":{"start":{"line":105,"column":22},"end":{"line":105,"column":43}},"48":{"start":{"line":114,"column":0},"end":{"line":131,"column":2}},"49":{"start":{"line":115,"column":2},"end":{"line":115,"column":36}},"50":{"start":{"line":117,"column":2},"end":{"line":130,"column":5}},"51":{"start":{"line":119,"column":4},"end":{"line":119,"column":50}},"52":{"start":{"line":119,"column":26},"end":{"line":119,"column":48}},"53":{"start":{"line":121,"column":4},"end":{"line":129,"column":7}},"54":{"start":{"line":123,"column":6},"end":{"line":125,"column":7}},"55":{"start":{"line":124,"column":8},"end":{"line":124,"column":90}},"56":{"start":{"line":124,"column":72},"end":{"line":124,"column":86}},"57":{"start":{"line":128,"column":6},"end":{"line":128,"column":87}},"58":{"start":{"line":128,"column":62},"end":{"line":128,"column":83}},"59":{"start":{"line":136,"column":0},"end":{"line":136,"column":25}}},"branchMap":{"1":{"line":31,"type":"if","locations":[{"start":{"line":31,"column":4},"end":{"line":31,"column":4}},{"start":{"line":31,"column":4},"end":{"line":31,"column":4}}]},"2":{"line":46,"type":"if","locations":[{"start":{"line":46,"column":2},"end":{"line":46,"column":2}},{"start":{"line":46,"column":2},"end":{"line":46,"column":2}}]},"3":{"line":51,"type":"cond-expr","locations":[{"start":{"line":51,"column":28},"end":{"line":51,"column":31}},{"start":{"line":51,"column":34},"end":{"line":51,"column":38}}]},"4":{"line":56,"type":"if","locations":[{"start":{"line":56,"column":2},"end":{"line":56,"column":2}},{"start":{"line":56,"column":2},"end":{"line":56,"column":2}}]},"5":{"line":56,"type":"binary-expr","locations":[{"start":{"line":56,"column":6},"end":{"line":56,"column":19}},{"start":{"line":56,"column":24},"end":{"line":56,"column":52}},{"start":{"line":56,"column":56},"end":{"line":56,"column":84}}]},"6":{"line":59,"type":"if","locations":[{"start":{"line":59,"column":4},"end":{"line":59,"column":4}},{"start":{"line":59,"column":4},"end":{"line":59,"column":4}}]},"7":{"line":62,"type":"if","locations":[{"start":{"line":62,"column":8},"end":{"line":62,"column":8}},{"start":{"line":62,"column":8},"end":{"line":62,"column":8}}]},"8":{"line":62,"type":"binary-expr","locations":[{"start":{"line":62,"column":12},"end":{"line":62,"column":17}},{"start":{"line":62,"column":21},"end":{"line":62,"column":25}}]},"9":{"line":83,"type":"binary-expr","locations":[{"start":{"line":83,"column":17},"end":{"line":83,"column":19}},{"start":{"line":83,"column":23},"end":{"line":83,"column":37}}]},"10":{"line":90,"type":"if","locations":[{"start":{"line":90,"column":8},"end":{"line":90,"column":8}},{"start":{"line":90,"column":8},"end":{"line":90,"column":8}}]},"11":{"line":119,"type":"if","locations":[{"start":{"line":119,"column":4},"end":{"line":119,"column":4}},{"start":{"line":119,"column":4},"end":{"line":119,"column":4}}]},"12":{"line":123,"type":"if","locations":[{"start":{"line":123,"column":6},"end":{"line":123,"column":6}},{"start":{"line":123,"column":6},"end":{"line":123,"column":6}}]}},"code":["/**"," * Way data is stored for this database"," * For a Node.js/Node Webkit database it's the file system"," * For a browser-side database it's localforage which chooses the best option depending on user browser (IndexedDB then WebSQL then localStorage)"," *"," * This version is the Node.js/Node Webkit version"," * It's essentially fs, mkdirp and crash safe write and read functions"," */","","var fs = require('fs')","  , mkdirp = require('mkdirp')","  , async = require('async')","  , path = require('path')","  , storage = {}","  ;","","storage.exists = fs.exists;","storage.rename = fs.rename;","storage.writeFile = fs.writeFile;","storage.unlink = fs.unlink;","storage.appendFile = fs.appendFile;","storage.readFile = fs.readFile;","storage.mkdirp = mkdirp;","","","/**"," * Explicit name ..."," */","storage.ensureFileDoesntExist = function (file, callback) {","  storage.exists(file, function (exists) {","    if (!exists) { return callback(null); }","","    storage.unlink(file, function (err) { return callback(err); });","  });","};","","","/**"," * Flush data in OS buffer to storage if corresponding option is set"," * @param {String} options.filename"," * @param {Boolean} options.isDir Optional, defaults to false"," * If options is a string, it is assumed that the flush of the file (not dir) called options was requested"," */","storage.flushToStorage = function (options, callback) {","  var filename, flags;","  if (typeof options === 'string') {","    filename = options;","    flags = 'r+';","  } else {","    filename = options.filename;","    flags = options.isDir ? 'r' : 'r+';","  }","","  // Windows can't fsync (FlushFileBuffers) directories. We can live with this as it cannot cause 100% dataloss","  // except in the very rare event of the first time database is loaded and a crash happens","  if (flags === 'r' && (process.platform === 'win32' || process.platform === 'win64')) { return callback(null); }","","  fs.open(filename, flags, function (err, fd) {","    if (err) { return callback(err); }","    fs.fsync(fd, function (errFS) {","      fs.close(fd, function (errC) {","        if (errFS || errC) {","          var e = new Error('Failed to flush to storage');","          e.errorOnFsync = errFS;","          e.errorOnClose = errC;","          return callback(e);","        } else {","          return callback(null);","        }","      });","    });","  });","};","","","/**"," * Fully write or rewrite the datafile, immune to crashes during the write operation (data will not be lost)"," * @param {String} filename"," * @param {String} data"," * @param {Function} cb Optional callback, signature: err"," */","storage.crashSafeWriteFile = function (filename, data, cb) {","  var callback = cb || function () {}","    , tempFilename = filename + '~';","","  async.waterfall([","    async.apply(storage.flushToStorage, { filename: path.dirname(filename), isDir: true })","  , function (cb) {","      storage.exists(filename, function (exists) {","        if (exists) {","          storage.flushToStorage(filename, function (err) { return cb(err); });","        } else {","          return cb();","        }","      });","    }","  , function (cb) {","      storage.writeFile(tempFilename, data, function (err) { return cb(err); });","    }","  , async.apply(storage.flushToStorage, tempFilename)","  , function (cb) {","      storage.rename(tempFilename, filename, function (err) { return cb(err); });","    }","  , async.apply(storage.flushToStorage, { filename: path.dirname(filename), isDir: true })","  ], function (err) { return callback(err); })","};","","","/**"," * Ensure the datafile contains all the data, even if there was a crash during a full file write"," * @param {String} filename"," * @param {Function} callback signature: err"," */","storage.ensureDatafileIntegrity = function (filename, callback) {","  var tempFilename = filename + '~';","","  storage.exists(filename, function (filenameExists) {","    // Write was successful","    if (filenameExists) { return callback(null); }","","    storage.exists(tempFilename, function (oldFilenameExists) {","      // New database","      if (!oldFilenameExists) {","        return storage.writeFile(filename, '', 'utf8', function (err) { callback(err); });","      }","","      // Write failed, use old version","      storage.rename(tempFilename, filename, function (err) { return callback(err); });","    });","  });","};","","","","// Interface","module.exports = storage;",""],"l":{"10":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"29":1,"30":0,"31":0,"33":0,"44":1,"45":0,"46":0,"47":0,"48":0,"50":0,"51":0,"56":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"68":0,"82":1,"83":0,"86":0,"89":0,"90":0,"91":0,"93":0,"98":0,"102":0,"105":0,"114":1,"115":0,"117":0,"119":0,"121":0,"123":0,"124":0,"128":0,"136":1}},"/home/travis/build/npmtest/node-npmtest-nedb/nedb/lib/cursor.js":{"path":"/home/travis/build/npmtest/node-npmtest-nedb/nedb/lib/cursor.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":1,"8":0,"9":0,"10":1,"11":0,"12":0,"13":1,"14":0,"15":0,"16":1,"17":0,"18":0,"19":1,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":1,"49":0,"50":1,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":1,"91":0,"92":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0},"fnMap":{"1":{"name":"Cursor","line":16,"loc":{"start":{"line":16,"column":0},"end":{"line":16,"column":36}}},"2":{"name":"(anonymous_2)","line":26,"loc":{"start":{"line":26,"column":25},"end":{"line":26,"column":41}}},"3":{"name":"(anonymous_3)","line":35,"loc":{"start":{"line":35,"column":24},"end":{"line":35,"column":39}}},"4":{"name":"(anonymous_4)","line":45,"loc":{"start":{"line":45,"column":24},"end":{"line":45,"column":44}}},"5":{"name":"(anonymous_5)","line":56,"loc":{"start":{"line":56,"column":30},"end":{"line":56,"column":51}}},"6":{"name":"(anonymous_6)","line":65,"loc":{"start":{"line":65,"column":27},"end":{"line":65,"column":49}}},"7":{"name":"(anonymous_7)","line":79,"loc":{"start":{"line":79,"column":15},"end":{"line":79,"column":28}}},"8":{"name":"(anonymous_8)","line":85,"loc":{"start":{"line":85,"column":21},"end":{"line":85,"column":42}}},"9":{"name":"(anonymous_9)","line":89,"loc":{"start":{"line":89,"column":19},"end":{"line":89,"column":32}}},"10":{"name":"(anonymous_10)","line":96,"loc":{"start":{"line":96,"column":19},"end":{"line":96,"column":32}}},"11":{"name":"(anonymous_11)","line":118,"loc":{"start":{"line":118,"column":25},"end":{"line":118,"column":45}}},"12":{"name":"callback","line":124,"loc":{"start":{"line":124,"column":2},"end":{"line":124,"column":33}}},"13":{"name":"(anonymous_13)","line":132,"loc":{"start":{"line":132,"column":36},"end":{"line":132,"column":63}}},"14":{"name":"(anonymous_14)","line":166,"loc":{"start":{"line":166,"column":15},"end":{"line":166,"column":30}}},"15":{"name":"(anonymous_15)","line":197,"loc":{"start":{"line":197,"column":24},"end":{"line":197,"column":36}}}},"statementMap":{"1":{"start":{"line":4,"column":0},"end":{"line":6,"column":3}},"2":{"start":{"line":16,"column":0},"end":{"line":20,"column":1}},"3":{"start":{"line":17,"column":2},"end":{"line":17,"column":15}},"4":{"start":{"line":18,"column":2},"end":{"line":18,"column":27}},"5":{"start":{"line":19,"column":2},"end":{"line":19,"column":39}},"6":{"start":{"line":19,"column":16},"end":{"line":19,"column":37}},"7":{"start":{"line":26,"column":0},"end":{"line":29,"column":2}},"8":{"start":{"line":27,"column":2},"end":{"line":27,"column":22}},"9":{"start":{"line":28,"column":2},"end":{"line":28,"column":14}},"10":{"start":{"line":35,"column":0},"end":{"line":38,"column":2}},"11":{"start":{"line":36,"column":2},"end":{"line":36,"column":20}},"12":{"start":{"line":37,"column":2},"end":{"line":37,"column":14}},"13":{"start":{"line":45,"column":0},"end":{"line":48,"column":2}},"14":{"start":{"line":46,"column":2},"end":{"line":46,"column":25}},"15":{"start":{"line":47,"column":2},"end":{"line":47,"column":14}},"16":{"start":{"line":56,"column":0},"end":{"line":59,"column":2}},"17":{"start":{"line":57,"column":2},"end":{"line":57,"column":32}},"18":{"start":{"line":58,"column":2},"end":{"line":58,"column":14}},"19":{"start":{"line":65,"column":0},"end":{"line":108,"column":2}},"20":{"start":{"line":66,"column":2},"end":{"line":68,"column":5}},"21":{"start":{"line":70,"column":2},"end":{"line":72,"column":3}},"22":{"start":{"line":71,"column":4},"end":{"line":71,"column":22}},"23":{"start":{"line":74,"column":2},"end":{"line":74,"column":53}},"24":{"start":{"line":75,"column":2},"end":{"line":75,"column":53}},"25":{"start":{"line":78,"column":2},"end":{"line":78,"column":39}},"26":{"start":{"line":79,"column":2},"end":{"line":82,"column":5}},"27":{"start":{"line":80,"column":4},"end":{"line":80,"column":134}},"28":{"start":{"line":80,"column":66},"end":{"line":80,"column":132}},"29":{"start":{"line":81,"column":4},"end":{"line":81,"column":33}},"30":{"start":{"line":85,"column":2},"end":{"line":105,"column":5}},"31":{"start":{"line":86,"column":4},"end":{"line":86,"column":15}},"32":{"start":{"line":87,"column":4},"end":{"line":98,"column":5}},"33":{"start":{"line":88,"column":6},"end":{"line":88,"column":28}},"34":{"start":{"line":89,"column":6},"end":{"line":92,"column":9}},"35":{"start":{"line":90,"column":8},"end":{"line":90,"column":57}},"36":{"start":{"line":91,"column":8},"end":{"line":91,"column":68}},"37":{"start":{"line":91,"column":44},"end":{"line":91,"column":66}},"38":{"start":{"line":93,"column":6},"end":{"line":93,"column":40}},"39":{"start":{"line":95,"column":6},"end":{"line":95,"column":30}},"40":{"start":{"line":96,"column":6},"end":{"line":96,"column":61}},"41":{"start":{"line":96,"column":34},"end":{"line":96,"column":58}},"42":{"start":{"line":97,"column":6},"end":{"line":97,"column":47}},"43":{"start":{"line":99,"column":4},"end":{"line":103,"column":5}},"44":{"start":{"line":100,"column":6},"end":{"line":100,"column":33}},"45":{"start":{"line":102,"column":6},"end":{"line":102,"column":24}},"46":{"start":{"line":104,"column":4},"end":{"line":104,"column":21}},"47":{"start":{"line":107,"column":2},"end":{"line":107,"column":13}},"48":{"start":{"line":118,"column":0},"end":{"line":195,"column":2}},"49":{"start":{"line":119,"column":2},"end":{"line":122,"column":5}},"50":{"start":{"line":124,"column":2},"end":{"line":130,"column":3}},"51":{"start":{"line":125,"column":4},"end":{"line":129,"column":5}},"52":{"start":{"line":126,"column":6},"end":{"line":126,"column":48}},"53":{"start":{"line":128,"column":6},"end":{"line":128,"column":35}},"54":{"start":{"line":132,"column":2},"end":{"line":194,"column":5}},"55":{"start":{"line":133,"column":4},"end":{"line":133,"column":38}},"56":{"start":{"line":133,"column":15},"end":{"line":133,"column":36}},"57":{"start":{"line":135,"column":4},"end":{"line":154,"column":5}},"58":{"start":{"line":136,"column":6},"end":{"line":151,"column":7}},"59":{"start":{"line":137,"column":8},"end":{"line":150,"column":9}},"60":{"start":{"line":139,"column":10},"end":{"line":149,"column":11}},"61":{"start":{"line":140,"column":12},"end":{"line":146,"column":13}},"62":{"start":{"line":141,"column":14},"end":{"line":141,"column":27}},"63":{"start":{"line":143,"column":14},"end":{"line":143,"column":38}},"64":{"start":{"line":144,"column":14},"end":{"line":144,"column":25}},"65":{"start":{"line":145,"column":14},"end":{"line":145,"column":65}},"66":{"start":{"line":145,"column":57},"end":{"line":145,"column":63}},"67":{"start":{"line":148,"column":12},"end":{"line":148,"column":36}},"68":{"start":{"line":153,"column":6},"end":{"line":153,"column":27}},"69":{"start":{"line":157,"column":4},"end":{"line":183,"column":5}},"70":{"start":{"line":158,"column":6},"end":{"line":158,"column":37}},"71":{"start":{"line":161,"column":6},"end":{"line":161,"column":24}},"72":{"start":{"line":162,"column":6},"end":{"line":165,"column":7}},"73":{"start":{"line":163,"column":8},"end":{"line":163,"column":22}},"74":{"start":{"line":164,"column":8},"end":{"line":164,"column":64}},"75":{"start":{"line":166,"column":6},"end":{"line":176,"column":9}},"76":{"start":{"line":167,"column":8},"end":{"line":167,"column":34}},"77":{"start":{"line":168,"column":8},"end":{"line":174,"column":9}},"78":{"start":{"line":169,"column":10},"end":{"line":169,"column":34}},"79":{"start":{"line":170,"column":10},"end":{"line":170,"column":160}},"80":{"start":{"line":171,"column":10},"end":{"line":173,"column":11}},"81":{"start":{"line":172,"column":12},"end":{"line":172,"column":27}},"82":{"start":{"line":175,"column":8},"end":{"line":175,"column":17}},"83":{"start":{"line":179,"column":6},"end":{"line":180,"column":33}},"84":{"start":{"line":182,"column":6},"end":{"line":182,"column":42}},"85":{"start":{"line":186,"column":4},"end":{"line":191,"column":5}},"86":{"start":{"line":187,"column":6},"end":{"line":187,"column":30}},"87":{"start":{"line":189,"column":6},"end":{"line":189,"column":16}},"88":{"start":{"line":190,"column":6},"end":{"line":190,"column":22}},"89":{"start":{"line":193,"column":4},"end":{"line":193,"column":32}},"90":{"start":{"line":197,"column":0},"end":{"line":199,"column":2}},"91":{"start":{"line":198,"column":2},"end":{"line":198,"column":78}},"92":{"start":{"line":204,"column":0},"end":{"line":204,"column":24}}},"branchMap":{"1":{"line":18,"type":"binary-expr","locations":[{"start":{"line":18,"column":15},"end":{"line":18,"column":20}},{"start":{"line":18,"column":24},"end":{"line":18,"column":26}}]},"2":{"line":19,"type":"if","locations":[{"start":{"line":19,"column":2},"end":{"line":19,"column":2}},{"start":{"line":19,"column":2},"end":{"line":19,"column":2}}]},"3":{"line":70,"type":"if","locations":[{"start":{"line":70,"column":2},"end":{"line":70,"column":2}},{"start":{"line":70,"column":2},"end":{"line":70,"column":2}}]},"4":{"line":70,"type":"binary-expr","locations":[{"start":{"line":70,"column":6},"end":{"line":70,"column":36}},{"start":{"line":70,"column":40},"end":{"line":70,"column":82}}]},"5":{"line":74,"type":"cond-expr","locations":[{"start":{"line":74,"column":40},"end":{"line":74,"column":45}},{"start":{"line":74,"column":48},"end":{"line":74,"column":52}}]},"6":{"line":80,"type":"if","locations":[{"start":{"line":80,"column":4},"end":{"line":80,"column":4}},{"start":{"line":80,"column":4},"end":{"line":80,"column":4}}]},"7":{"line":80,"type":"binary-expr","locations":[{"start":{"line":80,"column":8},"end":{"line":80,"column":28}},{"start":{"line":80,"column":32},"end":{"line":80,"column":62}}]},"8":{"line":87,"type":"if","locations":[{"start":{"line":87,"column":4},"end":{"line":87,"column":4}},{"start":{"line":87,"column":4},"end":{"line":87,"column":4}}]},"9":{"line":91,"type":"if","locations":[{"start":{"line":91,"column":8},"end":{"line":91,"column":8}},{"start":{"line":91,"column":8},"end":{"line":91,"column":8}}]},"10":{"line":99,"type":"if","locations":[{"start":{"line":99,"column":4},"end":{"line":99,"column":4}},{"start":{"line":99,"column":4},"end":{"line":99,"column":4}}]},"11":{"line":125,"type":"if","locations":[{"start":{"line":125,"column":4},"end":{"line":125,"column":4}},{"start":{"line":125,"column":4},"end":{"line":125,"column":4}}]},"12":{"line":133,"type":"if","locations":[{"start":{"line":133,"column":4},"end":{"line":133,"column":4}},{"start":{"line":133,"column":4},"end":{"line":133,"column":4}}]},"13":{"line":137,"type":"if","locations":[{"start":{"line":137,"column":8},"end":{"line":137,"column":8}},{"start":{"line":137,"column":8},"end":{"line":137,"column":8}}]},"14":{"line":139,"type":"if","locations":[{"start":{"line":139,"column":10},"end":{"line":139,"column":10}},{"start":{"line":139,"column":10},"end":{"line":139,"column":10}}]},"15":{"line":140,"type":"if","locations":[{"start":{"line":140,"column":12},"end":{"line":140,"column":12}},{"start":{"line":140,"column":12},"end":{"line":140,"column":12}}]},"16":{"line":140,"type":"binary-expr","locations":[{"start":{"line":140,"column":16},"end":{"line":140,"column":26}},{"start":{"line":140,"column":30},"end":{"line":140,"column":50}}]},"17":{"line":145,"type":"if","locations":[{"start":{"line":145,"column":14},"end":{"line":145,"column":14}},{"start":{"line":145,"column":14},"end":{"line":145,"column":14}}]},"18":{"line":145,"type":"binary-expr","locations":[{"start":{"line":145,"column":18},"end":{"line":145,"column":29}},{"start":{"line":145,"column":33},"end":{"line":145,"column":53}}]},"19":{"line":157,"type":"if","locations":[{"start":{"line":157,"column":4},"end":{"line":157,"column":4}},{"start":{"line":157,"column":4},"end":{"line":157,"column":4}}]},"20":{"line":171,"type":"if","locations":[{"start":{"line":171,"column":10},"end":{"line":171,"column":10}},{"start":{"line":171,"column":10},"end":{"line":171,"column":10}}]},"21":{"line":179,"type":"binary-expr","locations":[{"start":{"line":179,"column":18},"end":{"line":179,"column":29}},{"start":{"line":179,"column":33},"end":{"line":179,"column":43}}]},"22":{"line":180,"type":"binary-expr","locations":[{"start":{"line":180,"column":17},"end":{"line":180,"column":27}},{"start":{"line":180,"column":31},"end":{"line":180,"column":32}}]}},"code":["/**"," * Manage access to data, be it to find, update or remove it"," */","var model = require('./model')","  , _ = require('underscore')","  ;","","","","/**"," * Create a new cursor for this collection"," * @param {Datastore} db - The datastore this cursor is bound to"," * @param {Query} query - The query this cursor will operate on"," * @param {Function} execFn - Handler to be executed after cursor has found the results and before the callback passed to find/findOne/update/remove"," */","function Cursor (db, query, execFn) {","  this.db = db;","  this.query = query || {};","  if (execFn) { this.execFn = execFn; }","}","","","/**"," * Set a limit to the number of results"," */","Cursor.prototype.limit = function(limit) {","  this._limit = limit;","  return this;","};","","","/**"," * Skip a the number of results"," */","Cursor.prototype.skip = function(skip) {","  this._skip = skip;","  return this;","};","","","/**"," * Sort results of the query"," * @param {SortQuery} sortQuery - SortQuery is { field: order }, field can use the dot-notation, order is 1 for ascending and -1 for descending"," */","Cursor.prototype.sort = function(sortQuery) {","  this._sort = sortQuery;","  return this;","};","","","/**"," * Add the use of a projection"," * @param {Object} projection - MongoDB-style projection. {} means take all fields. Then it's { key1: 1, key2: 1 } to take only key1 and key2"," *                              { key1: 0, key2: 0 } to omit only key1 and key2. Except _id, you can't mix takes and omits"," */","Cursor.prototype.projection = function(projection) {","  this._projection = projection;","  return this;","};","","","/**"," * Apply the projection"," */","Cursor.prototype.project = function (candidates) {","  var res = [], self = this","    , keepId, action, keys","    ;","","  if (this._projection === undefined || Object.keys(this._projection).length === 0) {","    return candidates;","  }","","  keepId = this._projection._id === 0 ? false : true;","  this._projection = _.omit(this._projection, '_id');","","  // Check for consistency","  keys = Object.keys(this._projection);","  keys.forEach(function (k) {","    if (action !== undefined && self._projection[k] !== action) { throw new Error(\"Can't both keep and omit fields except for _id\"); }","    action = self._projection[k];","  });","","  // Do the actual projection","  candidates.forEach(function (candidate) {","    var toPush;","    if (action === 1) {   // pick-type projection","      toPush = { $set: {} };","      keys.forEach(function (k) {","        toPush.$set[k] = model.getDotValue(candidate, k);","        if (toPush.$set[k] === undefined) { delete toPush.$set[k]; }","      });","      toPush = model.modify({}, toPush);","    } else {   // omit-type projection","      toPush = { $unset: {} };","      keys.forEach(function (k) { toPush.$unset[k] = true });","      toPush = model.modify(candidate, toPush);","    }","    if (keepId) {","      toPush._id = candidate._id;","    } else {","      delete toPush._id;","    }","    res.push(toPush);","  });","","  return res;","};","","","/**"," * Get all matching elements"," * Will return pointers to matched elements (shallow copies), returning full copies is the role of find or findOne"," * This is an internal function, use exec which uses the executor"," *"," * @param {Function} callback - Signature: err, results"," */","Cursor.prototype._exec = function(_callback) {","  var res = [], added = 0, skipped = 0, self = this","    , error = null","    , i, keys, key","    ;","","  function callback (error, res) {","    if (self.execFn) {","      return self.execFn(error, res, _callback);","    } else {","      return _callback(error, res);","    }","  }","","  this.db.getCandidates(this.query, function (err, candidates) {","    if (err) { return callback(err); }","","    try {","      for (i = 0; i < candidates.length; i += 1) {","        if (model.match(candidates[i], self.query)) {","          // If a sort is defined, wait for the results to be sorted before applying limit and skip","          if (!self._sort) {","            if (self._skip && self._skip > skipped) {","              skipped += 1;","            } else {","              res.push(candidates[i]);","              added += 1;","              if (self._limit && self._limit <= added) { break; }","            }","          } else {","            res.push(candidates[i]);","          }","        }","      }","    } catch (err) {","      return callback(err);","    }","","    // Apply all sorts","    if (self._sort) {","      keys = Object.keys(self._sort);","","      // Sorting","      var criteria = [];","      for (i = 0; i < keys.length; i++) {","        key = keys[i];","        criteria.push({ key: key, direction: self._sort[key] });","      }","      res.sort(function(a, b) {","        var criterion, compare, i;","        for (i = 0; i < criteria.length; i++) {","          criterion = criteria[i];","          compare = criterion.direction * model.compareThings(model.getDotValue(a, criterion.key), model.getDotValue(b, criterion.key), self.db.compareStrings);","          if (compare !== 0) {","            return compare;","          }","        }","        return 0;","      });","","      // Applying limit and skip","      var limit = self._limit || res.length","        , skip = self._skip || 0;","","      res = res.slice(skip, skip + limit);","    }","","    // Apply projection","    try {","      res = self.project(res);","    } catch (e) {","      error = e;","      res = undefined;","    }","","    return callback(error, res);","  });","};","","Cursor.prototype.exec = function () {","  this.db.executor.push({ this: this, fn: this._exec, arguments: arguments });","};","","","","// Interface","module.exports = Cursor;",""],"l":{"4":1,"16":1,"17":0,"18":0,"19":0,"26":1,"27":0,"28":0,"35":1,"36":0,"37":0,"45":1,"46":0,"47":0,"56":1,"57":0,"58":0,"65":1,"66":0,"70":0,"71":0,"74":0,"75":0,"78":0,"79":0,"80":0,"81":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"93":0,"95":0,"96":0,"97":0,"99":0,"100":0,"102":0,"104":0,"107":0,"118":1,"119":0,"124":1,"125":0,"126":0,"128":0,"132":0,"133":0,"135":0,"136":0,"137":0,"139":0,"140":0,"141":0,"143":0,"144":0,"145":0,"148":0,"153":0,"157":0,"158":0,"161":0,"162":0,"163":0,"164":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"175":0,"179":0,"182":0,"186":0,"187":0,"189":0,"190":0,"193":0,"197":1,"198":0,"204":1}}}